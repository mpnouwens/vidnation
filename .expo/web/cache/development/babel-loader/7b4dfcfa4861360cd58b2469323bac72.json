{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TextInput } from \"../../components\";\nimport { connect } from 'react-redux';\nimport 'redux';\n\nvar mapState = function mapState(state) {\n  return {\n    searchText: state.search.searchText,\n    searchData: state.search.searchData,\n    searchContent: state.search.searchContent\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    setSearchText: function setSearchText(searchText) {\n      return dispatch.search.searchText(searchText);\n    },\n    searchAsync: function searchAsync(searchText) {\n      return dispatch.search.searchAsync(searchText);\n    },\n    setSearchContent: function setSearchContent(searchContent) {\n      return dispatch.search.searchContent(searchContent);\n    }\n  };\n};\n\nvar Series = function (_React$Component) {\n  _inherits(Series, _React$Component);\n\n  var _super = _createSuper(Series);\n\n  function Series() {\n    _classCallCheck(this, Series);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Series, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(this.props.searchContent);\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: \"center\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Search series\",\n        onChangeText: function onChangeText(input) {\n          _this.props.setSearchText(input);\n        },\n        backgroundColor: \"#E3E3E3\",\n        color: \"black\",\n        borderColor: \"gray\",\n        fontSize: 16,\n        padding: 10,\n        marginBottom: 5,\n        marginRight: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        color: \"black\",\n        title: \"Search\",\n        onPress: function onPress() {\n          _this.props.searchAsync(_this.props.searchText).then(function () {\n            var series = _this.props.searchData;\n\n            _this.props.setSearchContent(series);\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 2.5,\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Series;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    margin: 10\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5\n  }\n});\nexport default connect(mapState, mapDispatch)(Series);","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx"],"names":["React","TextInput","connect","mapState","state","searchText","search","searchData","searchContent","mapDispatch","dispatch","setSearchText","searchAsync","setSearchContent","Series","console","log","props","styles","container","flexDirection","alignItems","width","input","then","series","flex","Component","StyleSheet","create","margin","logo","height","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,OAAP;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAuB;AACpCC,IAAAA,UAAU,EAAED,KAAK,CAACE,MAAN,CAAaD,UADW;AAEpCE,IAAAA,UAAU,EAAEH,KAAK,CAACE,MAAN,CAAaC,UAFW;AAGpCC,IAAAA,aAAa,EAAEJ,KAAK,CAACE,MAAN,CAAaE;AAHQ,GAAvB;AAAA,CAAjB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAyB;AACzCC,IAAAA,aAAa,EAAE,uBAACN,UAAD;AAAA,aAAwBK,QAAQ,CAACJ,MAAT,CAAgBD,UAAhB,CAA2BA,UAA3B,CAAxB;AAAA,KAD0B;AAEzCO,IAAAA,WAAW,EAAE,qBAACP,UAAD;AAAA,aAAwBK,QAAQ,CAACJ,MAAT,CAAgBM,WAAhB,CAA4BP,UAA5B,CAAxB;AAAA,KAF4B;AAGzCQ,IAAAA,gBAAgB,EAAE,0BAACL,aAAD;AAAA,aAA2BE,QAAQ,CAACJ,MAAT,CAAgBE,aAAhB,CAA8BA,aAA9B,CAA3B;AAAA;AAHuB,GAAzB;AAAA,CAApB;;IAUMM,M;;;;;;;;;;;;;6BAEO;AAAA;;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWT,aAAvB;AAEA,aACI,0CACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,UAAU,EAAE,QAApC;AAA8CC,UAAAA,KAAK,EAAE;AAArD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,eADhB;AAEI,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAmB;AAAE,UAAA,KAAI,CAACN,KAAL,CAAWN,aAAX,CAAyBY,KAAzB;AAAiC,SAFxE;AAGI,QAAA,eAAe,EAAC,SAHpB;AAII,QAAA,KAAK,EAAC,OAJV;AAKI,QAAA,WAAW,EAAC,MALhB;AAMI,QAAA,QAAQ,EAAE,EANd;AAOI,QAAA,OAAO,EAAE,EAPb;AAQI,QAAA,YAAY,EAAE,CARlB;AASI,QAAA,WAAW,EAAE,EATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAYI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAqC,QAAA,OAAO,EAAE,mBAAM;AAChD,UAAA,KAAI,CAACN,KAAL,CAAWL,WAAX,CAAuB,KAAI,CAACK,KAAL,CAAWZ,UAAlC,EAA8CmB,IAA9C,CAAmD,YAAM;AACrD,gBAAMC,MAAM,GAAG,KAAI,CAACR,KAAL,CAAWV,UAA1B;;AACA,YAAA,KAAI,CAACU,KAAL,CAAWJ,gBAAX,CAA4BY,MAA5B;AACH,WAHD;AAIH,SALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ,CADJ,EA0BI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,GAAR;AAAaL,UAAAA,UAAU,EAAE;AAAzB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BJ,CADJ;AAgCH;;;;EArCgBrB,KAAK,CAAC2B,S;;AAwC3B,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPL,IAAAA,UAAU,EAAE,QAFL;AAGPS,IAAAA,MAAM,EAAE;AAHD,GADkB;AAM7BC,EAAAA,IAAI,EAAE;AACFT,IAAAA,KAAK,EAAE,GADL;AAEFU,IAAAA,MAAM,EAAE,GAFN;AAGFC,IAAAA,YAAY,EAAE;AAHZ;AANuB,CAAlB,CAAf;AAcA,eAAe/B,OAAO,CAACC,QAAD,EAAWM,WAAX,CAAP,CAA+BK,MAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, Image, Button } from \"react-native\";\nimport { TextInput } from '../../components'\nimport { connect } from 'react-redux';\nimport 'redux';\nimport { RootState, Dispatch } from '../../store'\n\nconst mapState = (state: RootState) => ({\n    searchText: state.search.searchText,\n    searchData: state.search.searchData,\n    searchContent: state.search.searchContent\n})\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n    setSearchText: (searchText: string) => dispatch.search.searchText(searchText),\n    searchAsync: (searchText: string) => dispatch.search.searchAsync(searchText),\n    setSearchContent: (searchContent: object) => dispatch.search.searchContent(searchContent)\n})\n\ntype StateProps = ReturnType<typeof mapState>\ntype DispatchProps = ReturnType<typeof mapDispatch>\ntype Props = StateProps & DispatchProps\n\nclass Series extends React.Component<Props> {\n\n    render() {\n        console.log(this.props.searchContent)\n\n        return (\n            <>\n                <View style={styles.container}>\n                    <View style={{ flexDirection: 'row', alignItems: \"center\", width: \"100%\" }}>\n                        <TextInput\n                            placeholder=\"Search series\"\n                            onChangeText={(input: string) => { this.props.setSearchText(input) }}\n                            backgroundColor=\"#E3E3E3\"\n                            color=\"black\"\n                            borderColor=\"gray\"\n                            fontSize={16}\n                            padding={10}\n                            marginBottom={5}\n                            marginRight={20}\n                        />\n                        <Button color=\"black\" title=\"Search\" onPress={() => {\n                            this.props.searchAsync(this.props.searchText).then(() => {\n                                const series = this.props.searchData\n                                this.props.setSearchContent(series)\n                            })\n                        }\n                        }>\n                        </Button>\n                    </View>\n\n                </View>\n\n                <View style={{ flex: 2.5, alignItems: \"center\" }}>\n\n                </View>\n            </>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        margin: 10\n    },\n    logo: {\n        width: 300,\n        height: 300,\n        marginBottom: 5\n    }\n})\n\n\nexport default connect(mapState, mapDispatch)(Series)\n"]},"metadata":{},"sourceType":"module"}