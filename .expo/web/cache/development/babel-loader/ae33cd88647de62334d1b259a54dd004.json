{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TextInput } from \"../../components\";\nimport { connect } from 'react-redux';\nimport 'redux';\n\nvar mapState = function mapState(state) {\n  return {\n    searchText: state.search.searchText,\n    searchData: state.search.searchData\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    setSearchText: function setSearchText(searchText) {\n      return dispatch.search.searchText(searchText);\n    },\n    searchAsync: function searchAsync(searchText) {\n      return dispatch.search.searchAsync(searchText);\n    }\n  };\n};\n\nvar Series = function (_React$Component) {\n  _inherits(Series, _React$Component);\n\n  var _super = _createSuper(Series);\n\n  function Series() {\n    _classCallCheck(this, Series);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Series, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var seriesData = this.props.searchData;\n\n      var renderSeriesContent = function renderSeriesContent() {\n        return seriesData.Search && seriesData.Search.map && seriesData.Search.map(function (item, i) {\n          return React.createElement(View, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }\n          }, item && item.Title), React.createElement(Image, {\n            source: item && item.Poster,\n            style: {\n              height: 100,\n              width: 50\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }\n          }));\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: \"center\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Search series\",\n        onChangeText: function onChangeText(input) {\n          _this.props.setSearchText(input);\n        },\n        backgroundColor: \"#E3E3E3\",\n        color: \"black\",\n        borderColor: \"gray\",\n        fontSize: 16,\n        padding: 10,\n        marginBottom: 5,\n        marginRight: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        color: \"black\",\n        title: \"Search\",\n        onPress: function onPress() {\n          return _this.props.searchAsync(_this.props.searchText);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 2.5,\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, seriesData ? renderSeriesContent() : React.createElement(React.Fragment, null, React.createElement(Image, {\n        source: require(\"../../assets/series.png\"),\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, \"Find your favourite series.\"))));\n    }\n  }]);\n\n  return Series;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    margin: 10\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5\n  }\n});\nexport default connect(mapState, mapDispatch)(Series);","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx"],"names":["React","TextInput","connect","mapState","state","searchText","search","searchData","mapDispatch","dispatch","setSearchText","searchAsync","Series","seriesData","props","renderSeriesContent","Search","map","item","i","Title","Poster","height","width","styles","container","flexDirection","alignItems","input","flex","require","logo","fontSize","Component","StyleSheet","create","margin","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, Image, Button } from \"react-native\";\nimport { TextInput } from '../../components'\nimport { connect } from 'react-redux';\nimport 'redux';\nimport { RootState, Dispatch } from '../../store'\n\nconst mapState = (state: RootState) => ({\n    searchText: state.search.searchText,\n    searchData: state.search.searchData\n})\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n    setSearchText: (searchText: string) => dispatch.search.searchText(searchText),\n    searchAsync: (searchText: string) => dispatch.search.searchAsync(searchText)\n})\n\ntype StateProps = ReturnType<typeof mapState>\ntype DispatchProps = ReturnType<typeof mapDispatch>\ntype Props = StateProps & DispatchProps\n\nclass Series extends React.Component<Props> {\n\n    render() {\n        const seriesData = this.props.searchData\n        const renderSeriesContent = () => {\n            return seriesData.Search && seriesData.Search.map && seriesData.Search.map((item: { Title: string; }, i: number) => {\n                return (\n                    <View key={i}>\n                        <Text key={i}>{item && item.Title}</Text>\n                        <Image source={item && item.Poster} style={{height: 100, width: 50}}/>\n                    </View>\n                )\n            })\n        }\n\n        return (\n            <>\n                <View style={styles.container}>\n                    <View style={{ flexDirection: 'row', alignItems: \"center\", width: \"100%\" }}>\n                        <TextInput\n                            placeholder=\"Search series\"\n                            onChangeText={(input: string) => { this.props.setSearchText(input) }}\n                            backgroundColor=\"#E3E3E3\"\n                            color=\"black\"\n                            borderColor=\"gray\"\n                            fontSize={16}\n                            padding={10}\n                            marginBottom={5}\n                            marginRight={20}\n                        />\n                        <Button color=\"black\" title=\"Search\" onPress={() => this.props.searchAsync(this.props.searchText)} />\n                    </View>\n                </View>\n\n\n\n                <View style={{ flex: 2.5, alignItems: \"center\" }}>\n                    {seriesData ?\n                        renderSeriesContent() :\n                        <>\n                            <Image source={require(\"../../assets/series.png\")} style={styles.logo} />\n                            <Text style={{ fontSize: 18 }}>Find your favourite series.</Text>\n                        </>\n                    }\n\n                </View>\n            </>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        margin: 10\n    },\n    logo: {\n        width: 300,\n        height: 300,\n        marginBottom: 5\n    }\n})\n\n\nexport default connect(mapState, mapDispatch)(Series)\n"]},"metadata":{},"sourceType":"module"}