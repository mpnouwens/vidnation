{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Movies/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\nimport { useTheme } from \"../../theme/hooks\";\n\nvar mapState = function mapState(state) {\n  return {\n    searchMoviesText: state.search.searchMoviesText,\n    searchMoviesData: state.search.searchMoviesData,\n    masterDetailData: state.search.masterDetailData\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    setSearchMoviesText: function setSearchMoviesText(searchMoviesText) {\n      return dispatch.search.searchMoviesText(searchMoviesText);\n    },\n    searchMoviesAsync: function searchMoviesAsync(searchMoviesText) {\n      return dispatch.search.searchMoviesAsync(searchMoviesText);\n    },\n    masterDetailAsync: function masterDetailAsync(moviesText) {\n      return dispatch.search.masterDetailAsync(moviesText);\n    }\n  };\n};\n\nfunction withMyHook(Component) {\n  return function WrappedComponent(props) {\n    var colors = useTheme();\n    return React.createElement(Component, _extends({}, props, {\n      colors: colors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }));\n  };\n}\n\nvar Movies = function (_React$Component) {\n  _inherits(Movies, _React$Component);\n\n  var _super = _createSuper(Movies);\n\n  function Movies() {\n    _classCallCheck(this, Movies);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Movies, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var masterDetailData = this.props.searchMoviesData;\n      var colors = this.props.colors;\n\n      var renderMoviesContent = function renderMoviesContent() {\n        return masterDetailData.Search && masterDetailData.Search.map && masterDetailData.Search.map(function (item, i) {\n          return React.createElement(TouchableOpacity, {\n            key: i,\n            onPress: function onPress() {\n              _this.props.masterDetailAsync(item && item.imdbID).then(function () {\n                _this.props.navigation.navigate(\"MasterDetail\", {\n                  masterDetailObj: _this.props.masterDetailData,\n                  myTitle: item && item.Title\n                });\n              });\n            },\n            style: {\n              flexDirection: \"row\",\n              marginBottom: 10,\n              backgroundColor: colors.colors.navBackground,\n              borderRadius: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }\n          }, item && item.Poster ? React.createElement(Image, {\n            source: {\n              uri: item && item.Poster\n            },\n            style: {\n              height: Platform.OS === \"web\" ? 300 : 150,\n              width: Platform.OS === \"web\" ? 200 : 100,\n              borderRadius: 10,\n              margin: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }\n          }) : React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }\n          }, \"No image\"), React.createElement(View, {\n            style: {\n              marginLeft: 5,\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              width: \"auto\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            style: {\n              width: 200,\n              fontSize: 20,\n              fontWeight: \"bold\",\n              color: colors.colors.textColour\n            },\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }\n          }, item && item.Title), React.createElement(Text, {\n            style: {\n              marginTop: 5,\n              color: colors.colors.textColour\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }\n          }, \"Year - \", item && item.Year)));\n        });\n      };\n\n      return React.createElement(View, {\n        style: [styles.container, {\n          backgroundColor: colors.colors.backgroundColour\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Search movies\",\n        onChangeText: function onChangeText(input) {\n          _this.props.setSearchMoviesText(input);\n        },\n        backgroundColor: colors.colors.searchColourBackground,\n        color: colors.colors.textColour,\n        borderColor: \"gray\",\n        fontSize: 16,\n        padding: 10,\n        marginLeft: 10,\n        marginBottom: 5,\n        marginRight: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: {\n          width: \"20%\"\n        },\n        onPress: function onPress() {\n          _this.props.searchMoviesAsync(_this.props.searchMoviesText);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          paddingLeft: 20,\n          color: colors.colors.textColour,\n          fontSize: 18,\n          width: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, \"Search\"))), masterDetailData.Search ? React.createElement(ScrollView, {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, renderMoviesContent()) : React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"85%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: colors.colors.moviesImage,\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          color: colors.colors.textColour\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, \"Find your favourite movies.\")));\n    }\n  }]);\n\n  return Movies;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5\n  }\n});\nexport default connect(mapState, mapDispatch)(withMyHook(Movies));","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Movies/index.tsx"],"names":["React","TextInput","connect","useTheme","mapState","state","searchMoviesText","search","searchMoviesData","masterDetailData","mapDispatch","dispatch","setSearchMoviesText","searchMoviesAsync","masterDetailAsync","moviesText","withMyHook","Component","WrappedComponent","props","colors","Movies","renderMoviesContent","Search","map","item","i","imdbID","then","navigation","navigate","masterDetailObj","myTitle","Title","flexDirection","marginBottom","backgroundColor","navBackground","borderRadius","Poster","uri","height","Platform","OS","width","margin","marginLeft","justifyContent","fontSize","fontWeight","color","textColour","marginTop","Year","styles","container","backgroundColour","alignItems","input","searchColourBackground","paddingLeft","moviesImage","logo","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  ScrollView,\n  TouchableOpacity,\n  Platform\n} from \"react-native\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\nimport { RootState, Dispatch } from \"../../store\";\nimport { useTheme } from \"../../theme/hooks\";\n\ninterface NavigationProps {\n  navigation: any;\n}\n\nconst mapState = (state: RootState) => ({\n  searchMoviesText: state.search.searchMoviesText,\n  searchMoviesData: state.search.searchMoviesData,\n  masterDetailData: state.search.masterDetailData,\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  setSearchMoviesText: (searchMoviesText: string) =>\n    dispatch.search.searchMoviesText(searchMoviesText),\n  searchMoviesAsync: (searchMoviesText: string) =>\n    dispatch.search.searchMoviesAsync(searchMoviesText),\n  masterDetailAsync: (moviesText: string) =>\n    dispatch.search.masterDetailAsync(moviesText),\n});\n\ntype StateProps = ReturnType<typeof mapState>;\ntype DispatchProps = ReturnType<typeof mapDispatch>;\ntype Props = StateProps & DispatchProps & NavigationProps;\n\nfunction withMyHook(Component) {\n  return function WrappedComponent(props) {\n    const colors = useTheme();\n    return <Component {...props} colors={colors} />;\n  };\n}\n\nclass Movies extends React.Component<Props> {\n  render() {\n    const masterDetailData = this.props.searchMoviesData;\n    const colors = this.props.colors;\n\n    const renderMoviesContent = () => {\n      return (\n        masterDetailData.Search &&\n        masterDetailData.Search.map &&\n        masterDetailData.Search.map(\n          (\n            item: {\n              Title: string;\n              Poster: string;\n              imdbID: string;\n              Year: string;\n            },\n            i: number\n          ) => {\n            return (\n              <TouchableOpacity\n                key={i}\n                onPress={() => {\n                  this.props.masterDetailAsync(item && item.imdbID).then(() => {\n                    this.props.navigation.navigate(\"MasterDetail\", {\n                      masterDetailObj: this.props.masterDetailData,\n                      myTitle: item && item.Title,\n                    });\n                  });\n                }}\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 10,\n                  backgroundColor: colors.colors.navBackground,\n                  borderRadius: 10,\n                }}\n              >\n                {item && item.Poster ? (\n                  <Image\n                    source={{ uri: item && item.Poster }}\n                    style={{\n                      height: Platform.OS === \"web\" ? 300 : 150,\n                      width: Platform.OS === \"web\" ? 200 : 100,\n                      borderRadius: 10,\n                      margin: 10,\n                    }}\n                  />\n                ) : (\n                  <Text>No image</Text>\n                )}\n\n                <View\n                  style={{\n                    marginLeft: 5,\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    width: \"auto\",\n                  }}\n                >\n                  <Text\n                    numberOfLines={1}\n                    style={{\n                      width: 200,\n                      fontSize: 20,\n                      fontWeight: \"bold\",\n                      color: colors.colors.textColour,\n                    }}\n                    key={i}\n                  >\n                    {item && item.Title}\n                  </Text>\n                  <Text\n                    style={{ marginTop: 5, color: colors.colors.textColour }}\n                  >\n                    Year - {item && item.Year}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            );\n          }\n        )\n      );\n    };\n\n    return (\n      <View\n        style={[\n          styles.container,\n          {\n            backgroundColor: colors.colors.backgroundColour,\n          },\n        ]}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <TextInput\n            placeholder=\"Search movies\"\n            onChangeText={(input: string) => {\n              this.props.setSearchMoviesText(input);\n            }}\n            backgroundColor={colors.colors.searchColourBackground}\n            color={colors.colors.textColour}\n            borderColor=\"gray\"\n            fontSize={16}\n            padding={10}\n            marginLeft={10}\n            marginBottom={5}\n            marginRight={10}\n          />\n          <TouchableOpacity\n            style={{ width: \"20%\" }}\n            onPress={() => {\n              this.props.searchMoviesAsync(this.props.searchMoviesText);\n            }}\n          >\n            <Text\n              style={{\n                paddingLeft: 20,\n                color: colors.colors.textColour,\n                fontSize: 18,\n                width: 100,\n              }}\n            >\n              Search\n            </Text>\n          </TouchableOpacity>\n        </View>\n        {masterDetailData.Search ? (\n          <ScrollView style={{ width: \"100%\" }}>\n            {renderMoviesContent()}\n          </ScrollView>\n        ) : (\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"85%\",\n            }}\n          >\n            <Image source={colors.colors.moviesImage} style={styles.logo} />\n            <Text style={{ fontSize: 18, color: colors.colors.textColour }}>\n              Find your favourite movies.\n            </Text>\n          </View>\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5,\n  },\n});\n\nexport default connect(mapState, mapDispatch)(withMyHook(Movies));\n"]},"metadata":{},"sourceType":"module"}