{"ast":null,"code":"var _jsxFileName = \"/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\n\nfunction Series(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var mapState = function mapState(state) {\n    return {\n      searchText: state.search.searchText,\n      searchData: state.search.searchData,\n      seriesData: state.search.seriesData,\n      seriesText: state.search.seriesText\n    };\n  };\n\n  var mapDispatch = function mapDispatch(dispatch) {\n    return {\n      setSearchText: function setSearchText(searchText) {\n        return dispatch.search.searchText(searchText);\n      },\n      searchAsync: function searchAsync(searchText) {\n        return dispatch.search.searchAsync(searchText);\n      },\n      setSeriesText: function setSeriesText(seriesText) {\n        return dispatch.search.seriesText(seriesText);\n      },\n      seriesDetailAsync: function seriesDetailAsync(seriesText) {\n        return dispatch.search.seriesDetailAsync(seriesText);\n      }\n    };\n  };\n\n  console.log(this.props.seriesText);\n  var seriesData = this.props.searchData;\n\n  var renderSeriesContent = function renderSeriesContent() {\n    return seriesData.Search && seriesData.Search.map && seriesData.Search.map(function (item, i) {\n      return React.createElement(TouchableOpacity, {\n        key: i,\n        onPress: function onPress() {\n          _this.props.setSeriesText(item && item.imdbID);\n        },\n        style: {\n          flexDirection: \"row\",\n          width: \"100%\",\n          paddingLeft: 15,\n          paddingTop: 5,\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, item && item.Poster ? React.createElement(Image, {\n        source: {\n          uri: item && item.Poster\n        },\n        style: {\n          height: 200,\n          width: 150,\n          borderRadius: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }) : React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, \"No image\"), React.createElement(Text, {\n        style: {\n          marginLeft: 15\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, item && item.Title));\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Search series\",\n    onChangeText: function onChangeText(input) {\n      _this.props.setSearchText(input);\n    },\n    backgroundColor: \"#E3E3E3\",\n    color: \"black\",\n    borderColor: \"gray\",\n    fontSize: 16,\n    padding: 10,\n    marginLeft: 10,\n    marginBottom: 5,\n    marginRight: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    color: \"black\",\n    title: \"Search\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\", {\n        title: \"Login\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, seriesData.Search ? renderSeriesContent() : React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/series.png\"),\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Find your favourite series.\")))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5\n  }\n});\nexport default connect(mapState, mapDispatch)(Series);","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx"],"names":["React","TextInput","connect","Series","navigation","mapState","state","searchText","search","searchData","seriesData","seriesText","mapDispatch","dispatch","setSearchText","searchAsync","setSeriesText","seriesDetailAsync","console","log","props","renderSeriesContent","Search","map","item","i","imdbID","flexDirection","width","paddingLeft","paddingTop","marginBottom","Poster","uri","height","borderRadius","marginLeft","Title","styles","container","alignItems","input","navigate","title","justifyContent","require","logo","fontSize","StyleSheet","create","flex","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\nimport { RootState, Dispatch } from \"../../store\";\n\nfunction Series({ navigation }) {\n  const mapState = (state: RootState) => ({\n    searchText: state.search.searchText,\n    searchData: state.search.searchData,\n    seriesData: state.search.seriesData,\n    seriesText: state.search.seriesText,\n  });\n\n  const mapDispatch = (dispatch: Dispatch) => ({\n    setSearchText: (searchText: string) =>\n      dispatch.search.searchText(searchText),\n    searchAsync: (searchText: string) =>\n      dispatch.search.searchAsync(searchText),\n    setSeriesText: (seriesText: string) =>\n      dispatch.search.seriesText(seriesText),\n    seriesDetailAsync: (seriesText: string) =>\n      dispatch.search.seriesDetailAsync(seriesText),\n  });\n\n  type StateProps = ReturnType<typeof mapState>;\n  type DispatchProps = ReturnType<typeof mapDispatch>;\n  type Props = StateProps & DispatchProps;\n\n  console.log(this.props.seriesText);\n\n  const seriesData = this.props.searchData;\n  const renderSeriesContent = () => {\n    return (\n      seriesData.Search &&\n      seriesData.Search.map &&\n      seriesData.Search.map(\n        (\n          item: { Title: string; Poster: string; imdbID: string },\n          i: number\n        ) => {\n          return (\n            <TouchableOpacity\n              key={i}\n              onPress={() => {\n                this.props.setSeriesText(item && item.imdbID);\n              }}\n              style={{\n                flexDirection: \"row\",\n                width: \"100%\",\n                paddingLeft: 15,\n                paddingTop: 5,\n                marginBottom: 10,\n              }}\n            >\n              {item && item.Poster ? (\n                <Image\n                  source={{ uri: item && item.Poster }}\n                  style={{ height: 200, width: 150, borderRadius: 10 }}\n                />\n              ) : (\n                <Text>No image</Text>\n              )}\n\n              <Text style={{ marginLeft: 15 }} key={i}>\n                {item && item.Title}\n              </Text>\n            </TouchableOpacity>\n          );\n        }\n      )\n    );\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <TextInput\n            placeholder=\"Search series\"\n            onChangeText={(input: string) => {\n              this.props.setSearchText(input);\n            }}\n            backgroundColor=\"#E3E3E3\"\n            color=\"black\"\n            borderColor=\"gray\"\n            fontSize={16}\n            padding={10}\n            marginLeft={10}\n            marginBottom={5}\n            marginRight={10}\n          />\n\n          {/* this.props.searchAsync(this.props.searchText) */}\n          <Button\n            color=\"black\"\n            title=\"Search\"\n            onPress={() => navigation.navigate(\"Login\", { title: \"Login\" })}\n          />\n        </View>\n        <ScrollView style={{ width: \"100%\" }}>\n          {seriesData.Search ? (\n            renderSeriesContent()\n          ) : (\n            <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n              <Image\n                source={require(\"../../assets/series.png\")}\n                style={styles.logo}\n              />\n              <Text style={{ fontSize: 18 }}>Find your favourite series.</Text>\n            </View>\n          )}\n        </ScrollView>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10,\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5,\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Series);\n"]},"metadata":{},"sourceType":"module"}