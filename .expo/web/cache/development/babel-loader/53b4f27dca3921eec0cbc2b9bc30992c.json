{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\n\nvar mapState = function mapState(state) {\n  return {\n    searchText: state.search.searchText,\n    searchData: state.search.searchData,\n    seriesData: state.search.seriesData,\n    seriesText: state.search.seriesText\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    setSearchText: function setSearchText(searchText) {\n      return dispatch.search.searchText(searchText);\n    },\n    searchAsync: function searchAsync(searchText) {\n      return dispatch.search.searchAsync(searchText);\n    },\n    setSeriesText: function setSeriesText(seriesText) {\n      return dispatch.search.seriesText(seriesText);\n    },\n    seriesDetailAsync: function seriesDetailAsync(seriesText) {\n      return dispatch.search.seriesDetailAsync(seriesText);\n    }\n  };\n};\n\nvar Series = function (_React$Component) {\n  _inherits(Series, _React$Component);\n\n  var _super = _createSuper(Series);\n\n  function Series() {\n    _classCallCheck(this, Series);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Series, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(this.props.seriesText);\n      var seriesData = this.props.searchData;\n\n      var renderSeriesContent = function renderSeriesContent() {\n        return seriesData.Search && seriesData.Search.map && seriesData.Search.map(function (item, i) {\n          return React.createElement(TouchableOpacity, {\n            key: i,\n            onPress: function onPress() {\n              _this.props.setSeriesText(item && item.imdbID);\n\n              _this.props.seriesDetailAsync(item && item.imdbID).then(function () {\n                _this.props.navigation.navigate(\"MasterDetail\");\n              });\n            },\n            style: {\n              flexDirection: \"row\",\n              width: \"100%\",\n              paddingLeft: 15,\n              paddingTop: 5,\n              marginBottom: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }\n          }, item && item.Poster ? React.createElement(Image, {\n            source: {\n              uri: item && item.Poster\n            },\n            style: {\n              height: 200,\n              width: 150,\n              borderRadius: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }\n          }) : React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }\n          }, \"No image\"), React.createElement(Text, {\n            style: {\n              marginLeft: 15\n            },\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }\n          }, item && item.Title));\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Search series\",\n        onChangeText: function onChangeText(input) {\n          _this.props.setSearchText(input);\n        },\n        backgroundColor: \"#E3E3E3\",\n        color: \"black\",\n        borderColor: \"gray\",\n        fontSize: 16,\n        padding: 10,\n        marginLeft: 10,\n        marginBottom: 5,\n        marginRight: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        color: \"black\",\n        title: \"Search\",\n        onPress: function onPress() {\n          return _this.props.searchAsync(_this.props.searchText);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      })), React.createElement(ScrollView, {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, seriesData.Search ? renderSeriesContent() : React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/series.png\"),\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, \"Find your favourite series.\")))));\n    }\n  }]);\n\n  return Series;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5\n  }\n});\nexport default connect(mapState, mapDispatch)(Series);","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Series/index.tsx"],"names":["React","TextInput","connect","mapState","state","searchText","search","searchData","seriesData","seriesText","mapDispatch","dispatch","setSearchText","searchAsync","setSeriesText","seriesDetailAsync","Series","console","log","props","renderSeriesContent","Search","map","item","i","imdbID","then","navigation","navigate","flexDirection","width","paddingLeft","paddingTop","marginBottom","Poster","uri","height","borderRadius","marginLeft","Title","styles","container","alignItems","input","justifyContent","require","logo","fontSize","Component","StyleSheet","create","flex","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\nimport { RootState, Dispatch } from \"../../store\";\n\ninterface NavigationProps {\n  navigation: any;\n}\n\nconst mapState = (state: RootState) => ({\n  searchText: state.search.searchText,\n  searchData: state.search.searchData,\n  seriesData: state.search.seriesData,\n  seriesText: state.search.seriesText,\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  setSearchText: (searchText: string) => dispatch.search.searchText(searchText),\n  searchAsync: (searchText: string) => dispatch.search.searchAsync(searchText),\n  setSeriesText: (seriesText: string) => dispatch.search.seriesText(seriesText),\n  seriesDetailAsync: (seriesText: string) =>\n    dispatch.search.seriesDetailAsync(seriesText),\n});\n\ntype StateProps = ReturnType<typeof mapState>;\ntype DispatchProps = ReturnType<typeof mapDispatch>;\ntype Props = StateProps & DispatchProps & NavigationProps;\n\nclass Series extends React.Component<Props> {\n  render() {\n    console.log(this.props.seriesText);\n\n    const seriesData = this.props.searchData;\n    const renderSeriesContent = () => {\n      return (\n        seriesData.Search &&\n        seriesData.Search.map &&\n        seriesData.Search.map(\n          (\n            item: { Title: string; Poster: string; imdbID: string },\n            i: number\n          ) => {\n            return (\n              <TouchableOpacity\n                key={i}\n                onPress={() => {\n                  this.props.setSeriesText(item && item.imdbID);\n                  this.props.seriesDetailAsync(item && item.imdbID).then(() => {\n                    this.props.navigation.navigate(\"MasterDetail\");\n                  });\n                }}\n                style={{\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  paddingLeft: 15,\n                  paddingTop: 5,\n                  marginBottom: 10,\n                }}\n              >\n                {item && item.Poster ? (\n                  <Image\n                    source={{ uri: item && item.Poster }}\n                    style={{ height: 200, width: 150, borderRadius: 10 }}\n                  />\n                ) : (\n                  <Text>No image</Text>\n                )}\n\n                <Text style={{ marginLeft: 15 }} key={i}>\n                  {item && item.Title}\n                </Text>\n              </TouchableOpacity>\n            );\n          }\n        )\n      );\n    };\n\n    return (\n      <>\n        <View style={styles.container}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <TextInput\n              placeholder=\"Search series\"\n              onChangeText={(input: string) => {\n                this.props.setSearchText(input);\n              }}\n              backgroundColor=\"#E3E3E3\"\n              color=\"black\"\n              borderColor=\"gray\"\n              fontSize={16}\n              padding={10}\n              marginLeft={10}\n              marginBottom={5}\n              marginRight={10}\n            />\n            <Button\n              color=\"black\"\n              title=\"Search\"\n              onPress={() => this.props.searchAsync(this.props.searchText)}\n            />\n          </View>\n          <ScrollView style={{ width: \"100%\" }}>\n            {seriesData.Search ? (\n              renderSeriesContent()\n            ) : (\n              <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n                <Image\n                  source={require(\"../../assets/series.png\")}\n                  style={styles.logo}\n                />\n                <Text style={{ fontSize: 18 }}>\n                  Find your favourite series.\n                </Text>\n              </View>\n            )}\n          </ScrollView>\n        </View>\n      </>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10,\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5,\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Series);\n"]},"metadata":{},"sourceType":"module"}