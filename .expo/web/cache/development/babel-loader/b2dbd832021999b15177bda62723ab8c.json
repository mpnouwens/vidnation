{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Movies/index.tsx\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\n\nvar mapState = function mapState(state) {\n  return {\n    searchMoviesText: state.search.searchMoviesText,\n    searchMoviesData: state.search.searchMoviesData,\n    masterDetailData: state.search.masterDetailData\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    setSearchMoviesText: function setSearchMoviesText(searchMoviesText) {\n      return dispatch.search.searchMoviesText(searchMoviesText);\n    },\n    searchMoviesAsync: function searchMoviesAsync(searchMoviesText) {\n      return dispatch.search.searchMoviesAsync(searchMoviesText);\n    },\n    masterDetailAsync: function masterDetailAsync(moviesText) {\n      return dispatch.search.masterDetailAsync(moviesText);\n    }\n  };\n};\n\nvar Movies = function Movies(_ref) {\n  var setSearchMoviesText = _ref.setSearchMoviesText,\n      searchMoviesAsync = _ref.searchMoviesAsync,\n      masterDetailAsync = _ref.masterDetailAsync,\n      searchMoviesText = _ref.searchMoviesText,\n      searchMoviesData = _ref.searchMoviesData,\n      navigation = _ref.navigation;\n  var masterDetailData = searchMoviesData;\n\n  var renderMoviesContent = function renderMoviesContent() {\n    return masterDetailData.Search && masterDetailData.Search.map && masterDetailData.Search.map(function (item, i) {\n      return React.createElement(TouchableOpacity, {\n        key: i,\n        onPress: function onPress() {\n          masterDetailAsync(item && item.imdbID).then(function () {\n            navigation.navigate(\"MasterDetail\", {\n              masterDetailObj: masterDetailData,\n              myTitle: item && item.Title\n            });\n          });\n        },\n        style: {\n          flexDirection: \"row\",\n          marginBottom: 10,\n          backgroundColor: \"#CDCDCD\",\n          borderRadius: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, item && item.Poster ? React.createElement(Image, {\n        source: {\n          uri: item && item.Poster\n        },\n        style: {\n          height: 200,\n          width: 150,\n          borderRadius: 10,\n          margin: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }) : React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, \"No image\"), React.createElement(View, {\n        style: {\n          marginLeft: 5,\n          flexDirection: \"column\",\n          marginTop: 10,\n          width: \"auto\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, item && item.Title), React.createElement(Text, {\n        style: {\n          marginTop: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, \"Year - \", item && item.Year)));\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Search movies\",\n    onChangeText: function onChangeText(input) {\n      setSearchMoviesText(input);\n    },\n    backgroundColor: \"#E3E3E3\",\n    color: \"black\",\n    borderColor: \"gray\",\n    fontSize: 16,\n    padding: 10,\n    marginLeft: 10,\n    marginBottom: 5,\n    marginRight: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    color: \"black\",\n    title: \"Search\",\n    onPress: function onPress() {\n      searchMoviesAsync(searchMoviesText);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), masterDetailData.Search ? React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, renderMoviesContent()) : React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"85%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/movies.png\"),\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Find your favourite movies.\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5\n  }\n});\nexport default connect(mapState, mapDispatch)(Movies);","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Movies/index.tsx"],"names":["React","TextInput","connect","mapState","state","searchMoviesText","search","searchMoviesData","masterDetailData","mapDispatch","dispatch","setSearchMoviesText","searchMoviesAsync","masterDetailAsync","moviesText","Movies","navigation","renderMoviesContent","Search","map","item","i","imdbID","then","navigate","masterDetailObj","myTitle","Title","flexDirection","marginBottom","backgroundColor","borderRadius","Poster","uri","height","width","margin","marginLeft","marginTop","fontSize","fontWeight","Year","styles","container","alignItems","input","justifyContent","require","logo","StyleSheet","create","flex","marginRight"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\nimport { RootState, Dispatch } from \"../../store\";\nimport { useTheme } from \"../../theme/hooks\";\n\ninterface NavigationProps {\n  navigation: any;\n}\n\nconst mapState = (state: RootState) => ({\n  searchMoviesText: state.search.searchMoviesText,\n  searchMoviesData: state.search.searchMoviesData,\n  masterDetailData: state.search.masterDetailData,\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  setSearchMoviesText: (searchMoviesText: string) =>\n    dispatch.search.searchMoviesText(searchMoviesText),\n  searchMoviesAsync: (searchMoviesText: string) =>\n    dispatch.search.searchMoviesAsync(searchMoviesText),\n  masterDetailAsync: (moviesText: string) =>\n    dispatch.search.masterDetailAsync(moviesText),\n});\n\ntype StateProps = ReturnType<typeof mapState>;\ntype DispatchProps = ReturnType<typeof mapDispatch>;\ntype Props = StateProps & DispatchProps & NavigationProps;\n\nconst Movies: FunctionComponent<Props> = ({\n  setSearchMoviesText,\n  searchMoviesAsync,\n  masterDetailAsync,\n  searchMoviesText,\n  searchMoviesData,\n  navigation,\n}) => {\n  const masterDetailData = searchMoviesData;\n\n    const renderMoviesContent = () => {\n      return (\n        masterDetailData.Search &&\n        masterDetailData.Search.map &&\n        masterDetailData.Search.map(\n          (\n            item: {\n              Title: string;\n              Poster: string;\n              imdbID: string;\n              Year: string;\n            },\n            i: number\n          ) => {\n            return (\n              <TouchableOpacity\n                key={i}\n                onPress={() => {\n                  masterDetailAsync(item && item.imdbID).then(() => {\n                  navigation.navigate(\"MasterDetail\", {\n                      masterDetailObj: masterDetailData,\n                      myTitle: item && item.Title,\n                    });\n                  });\n                }}\n                style={{\n                  flexDirection: \"row\",\n                  marginBottom: 10,\n                  backgroundColor: \"#CDCDCD\",\n                  borderRadius: 10,\n                }}\n              >\n                {item && item.Poster ? (\n                  <Image\n                    source={{ uri: item && item.Poster }}\n                    style={{\n                      height: 200,\n                      width: 150,\n                      borderRadius: 10,\n                      margin: 10,\n                    }}\n                  />\n                ) : (\n                  <Text>No image</Text>\n                )}\n\n                <View\n                  style={{\n                    marginLeft: 5,\n                    flexDirection: \"column\",\n                    marginTop: 10,\n                    width: \"auto\",\n                  }}\n                >\n                  <Text\n                    numberOfLines={1}\n                    style={{ fontSize: 20, fontWeight: \"bold\" }}\n                    key={i}\n                  >\n                    {item && item.Title}\n                  </Text>\n                  <Text style={{ marginTop: 5 }}>\n                    Year - {item && item.Year}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            );\n          }\n        )\n      );\n    };\n\n    return (\n      <View style={styles.container}>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <TextInput\n            placeholder=\"Search movies\"\n            onChangeText={(input: string) => {\n              setSearchMoviesText(input);\n            }}\n            backgroundColor=\"#E3E3E3\"\n            color=\"black\"\n            borderColor=\"gray\"\n            fontSize={16}\n            padding={10}\n            marginLeft={10}\n            marginBottom={5}\n            marginRight={10}\n          />\n          <Button\n            color=\"black\"\n            title=\"Search\"\n            onPress={() => {\n              searchMoviesAsync(searchMoviesText);\n            }}\n          />\n        </View>\n        {masterDetailData.Search ? (\n          <ScrollView style={{ width: \"100%\" }}>\n            {renderMoviesContent()}\n          </ScrollView>\n        ) : (\n          <View\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"85%\",\n            }}\n          >\n            <Image\n              source={require(\"../../assets/movies.png\")}\n              style={styles.logo}\n            />\n            <Text style={{ fontSize: 18 }}>Find your favourite movies.</Text>\n          </View>\n        )}\n      </View>\n    );\n};\n\n// class Movies extends React.Component<Props> {\n//   render() {\n//     const masterDetailData = this.props.searchMoviesData;\n\n//     const renderMoviesContent = () => {\n//       return (\n//         masterDetailData.Search &&\n//         masterDetailData.Search.map &&\n//         masterDetailData.Search.map(\n//           (\n//             item: {\n//               Title: string;\n//               Poster: string;\n//               imdbID: string;\n//               Year: string;\n//             },\n//             i: number\n//           ) => {\n//             return (\n//               <TouchableOpacity\n//                 key={i}\n//                 onPress={() => {\n//                   this.props.masterDetailAsync(item && item.imdbID).then(() => {\n//                     this.props.navigation.navigate(\"MasterDetail\", {\n//                       masterDetailObj: this.props.masterDetailData,\n//                       myTitle: item && item.Title,\n//                     });\n//                   });\n//                 }}\n//                 style={{\n//                   flexDirection: \"row\",\n//                   marginBottom: 10,\n//                   backgroundColor: \"#CDCDCD\",\n//                   borderRadius: 10,\n//                 }}\n//               >\n//                 {item && item.Poster ? (\n//                   <Image\n//                     source={{ uri: item && item.Poster }}\n//                     style={{\n//                       height: 200,\n//                       width: 150,\n//                       borderRadius: 10,\n//                       margin: 10,\n//                     }}\n//                   />\n//                 ) : (\n//                   <Text>No image</Text>\n//                 )}\n\n//                 <View\n//                   style={{\n//                     marginLeft: 5,\n//                     flexDirection: \"column\",\n//                     marginTop: 10,\n//                     width: \"auto\",\n//                   }}\n//                 >\n//                   <Text\n//                     numberOfLines={1}\n//                     style={{ fontSize: 20, fontWeight: \"bold\" }}\n//                     key={i}\n//                   >\n//                     {item && item.Title}\n//                   </Text>\n//                   <Text style={{ marginTop: 5 }}>\n//                     Year - {item && item.Year}\n//                   </Text>\n//                 </View>\n//               </TouchableOpacity>\n//             );\n//           }\n//         )\n//       );\n//     };\n\n//     return (\n//       <View style={styles.container}>\n//         <View\n//           style={{\n//             flexDirection: \"row\",\n//             alignItems: \"center\",\n//             width: \"100%\",\n//           }}\n//         >\n//           <TextInput\n//             placeholder=\"Search movies\"\n//             onChangeText={(input: string) => {\n//               this.props.setSearchMoviesText(input);\n//             }}\n//             backgroundColor=\"#E3E3E3\"\n//             color=\"black\"\n//             borderColor=\"gray\"\n//             fontSize={16}\n//             padding={10}\n//             marginLeft={10}\n//             marginBottom={5}\n//             marginRight={10}\n//           />\n//           <Button\n//             color=\"black\"\n//             title=\"Search\"\n//             onPress={() => {\n//               this.props.searchMoviesAsync(this.props.searchMoviesText);\n//             }}\n//           />\n//         </View>\n//         {masterDetailData.Search ? (\n//           <ScrollView style={{ width: \"100%\" }}>\n//             {renderMoviesContent()}\n//           </ScrollView>\n//         ) : (\n//           <View\n//             style={{\n//               alignItems: \"center\",\n//               justifyContent: \"center\",\n//               height: \"85%\",\n//             }}\n//           >\n//             <Image\n//               source={require(\"../../assets/movies.png\")}\n//               style={styles.logo}\n//             />\n//             <Text style={{ fontSize: 18 }}>Find your favourite movies.</Text>\n//           </View>\n//         )}\n//       </View>\n//     );\n//   }\n// }\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10,\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5,\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Movies);\n"]},"metadata":{},"sourceType":"module"}