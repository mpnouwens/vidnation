{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Movies/index.tsx\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\nimport { useTheme } from \"../../theme/hooks\";\nexport var mapState = function mapState(state) {\n  return {\n    searchMoviesText: state.search.searchMoviesText,\n    searchMoviesData: state.search.searchMoviesData,\n    masterDetailData: state.search.masterDetailData\n  };\n};\nexport var mapDispatch = function mapDispatch(dispatch) {\n  return {\n    setSearchMoviesText: function setSearchMoviesText(searchMoviesText) {\n      return dispatch.search.searchMoviesText(searchMoviesText);\n    },\n    searchMoviesAsync: function searchMoviesAsync(searchMoviesText) {\n      return dispatch.search.searchMoviesAsync(searchMoviesText);\n    },\n    masterDetailAsync: function masterDetailAsync(moviesText) {\n      return dispatch.search.masterDetailAsync(moviesText);\n    }\n  };\n};\n\nvar Movies = function Movies(_ref) {\n  var props = _extends({}, _ref);\n\n  var masterDetailData = props.searchMoviesData;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var renderMoviesContent = function renderMoviesContent() {\n    return masterDetailData.Search && masterDetailData.Search.map && masterDetailData.Search.map(function (item, i) {\n      return React.createElement(TouchableOpacity, {\n        key: i,\n        onPress: function onPress() {\n          props.masterDetailAsync(item && item.imdbID).then(function () {\n            props.navigation.navigate(\"MasterDetail\", {\n              masterDetailObj: masterDetailData,\n              myTitle: item && item.Title\n            });\n          });\n        },\n        style: {\n          flexDirection: \"row\",\n          marginBottom: 10,\n          backgroundColor: \"#CDCDCD\",\n          borderRadius: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, item && item.Poster ? React.createElement(Image, {\n        source: {\n          uri: item && item.Poster\n        },\n        style: {\n          height: 200,\n          width: 150,\n          borderRadius: 10,\n          margin: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }) : React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, \"No image\"), React.createElement(View, {\n        style: {\n          marginLeft: 5,\n          flexDirection: \"column\",\n          marginTop: 10,\n          width: \"auto\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, item && item.Title), React.createElement(Text, {\n        style: {\n          marginTop: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, \"Year - \", item && item.Year)));\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Search movies\",\n    onChangeText: function onChangeText(input) {\n      props.setSearchMoviesText(input);\n    },\n    backgroundColor: \"#E3E3E3\",\n    color: \"black\",\n    borderColor: \"gray\",\n    fontSize: 16,\n    padding: 10,\n    marginLeft: 10,\n    marginBottom: 5,\n    marginRight: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    color: \"black\",\n    title: \"Search\",\n    onPress: function onPress() {\n      props.searchMoviesAsync(props.searchMoviesText);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })), props.masterDetailData.Search ? React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, renderMoviesContent()) : React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"85%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/movies.png\"),\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Find your favourite movies.\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5\n  }\n});\nexport default connect(mapState, mapDispatch)(Movies);","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/screens/Movies/index.tsx"],"names":["React","TextInput","connect","useTheme","mapState","state","searchMoviesText","search","searchMoviesData","masterDetailData","mapDispatch","dispatch","setSearchMoviesText","searchMoviesAsync","masterDetailAsync","moviesText","Movies","props","colors","renderMoviesContent","Search","map","item","i","imdbID","then","navigation","navigate","masterDetailObj","myTitle","Title","flexDirection","marginBottom","backgroundColor","borderRadius","Poster","uri","height","width","margin","marginLeft","marginTop","fontSize","fontWeight","Year","styles","container","alignItems","input","justifyContent","require","logo","StyleSheet","create","flex","marginRight"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { TextInput } from \"../../components\";\nimport { connect } from \"react-redux\";\nimport \"redux\";\nimport { RootState, Dispatch } from \"../../store\";\nimport { useTheme } from \"../../theme/hooks\";\n\ninterface NavigationProps {\n  navigation: any;\n}\n\nexport const mapState = (state: RootState) => ({\n  searchMoviesText: state.search.searchMoviesText,\n  searchMoviesData: state.search.searchMoviesData,\n  masterDetailData: state.search.masterDetailData,\n});\n\nexport const mapDispatch = (dispatch: Dispatch) => ({\n  setSearchMoviesText: (searchMoviesText: string) =>\n    dispatch.search.searchMoviesText(searchMoviesText),\n  searchMoviesAsync: (searchMoviesText: string) =>\n    dispatch.search.searchMoviesAsync(searchMoviesText),\n  masterDetailAsync: (moviesText: string) =>\n    dispatch.search.masterDetailAsync(moviesText),\n});\n\ntype StateProps = ReturnType<typeof mapState>;\ntype DispatchProps = ReturnType<typeof mapDispatch>;\ntype Props = StateProps & DispatchProps & NavigationProps;\n\nconst Movies: FunctionComponent<Props> = ({ ...props }) => {\n  const masterDetailData = props.searchMoviesData;\n  const { colors } = useTheme();\n\n  const renderMoviesContent = () => {\n    return (\n      masterDetailData.Search &&\n      masterDetailData.Search.map &&\n      masterDetailData.Search.map(\n        (\n          item: {\n            Title: string;\n            Poster: string;\n            imdbID: string;\n            Year: string;\n          },\n          i: number\n        ) => {\n          return (\n            <TouchableOpacity\n              key={i}\n              onPress={() => {\n                props.masterDetailAsync(item && item.imdbID).then(() => {\n                  props.navigation.navigate(\"MasterDetail\", {\n                    masterDetailObj: masterDetailData,\n                    myTitle: item && item.Title,\n                  });\n                });\n              }}\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 10,\n                backgroundColor: \"#CDCDCD\",\n                borderRadius: 10,\n              }}\n            >\n              {item && item.Poster ? (\n                <Image\n                  source={{ uri: item && item.Poster }}\n                  style={{\n                    height: 200,\n                    width: 150,\n                    borderRadius: 10,\n                    margin: 10,\n                  }}\n                />\n              ) : (\n                <Text>No image</Text>\n              )}\n\n              <View\n                style={{\n                  marginLeft: 5,\n                  flexDirection: \"column\",\n                  marginTop: 10,\n                  width: \"auto\",\n                }}\n              >\n                <Text\n                  numberOfLines={1}\n                  style={{ fontSize: 20, fontWeight: \"bold\" }}\n                  key={i}\n                >\n                  {item && item.Title}\n                </Text>\n                <Text style={{ marginTop: 5 }}>Year - {item && item.Year}</Text>\n              </View>\n            </TouchableOpacity>\n          );\n        }\n      )\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <TextInput\n          placeholder=\"Search movies\"\n          onChangeText={(input: string) => {\n            props.setSearchMoviesText(input);\n          }}\n          backgroundColor=\"#E3E3E3\"\n          color=\"black\"\n          borderColor=\"gray\"\n          fontSize={16}\n          padding={10}\n          marginLeft={10}\n          marginBottom={5}\n          marginRight={10}\n        />\n        <Button\n          color=\"black\"\n          title=\"Search\"\n          onPress={() => {\n            props.searchMoviesAsync(props.searchMoviesText);\n          }}\n        />\n      </View>\n      {props.masterDetailData.Search ? (\n        <ScrollView style={{ width: \"100%\" }}>\n          {renderMoviesContent()}\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"85%\",\n          }}\n        >\n          <Image\n            source={require(\"../../assets/movies.png\")}\n            style={styles.logo}\n          />\n          <Text style={{ fontSize: 18 }}>Find your favourite movies.</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginTop: 10,\n    marginRight: 10,\n  },\n  logo: {\n    width: 300,\n    height: 300,\n    marginBottom: 5,\n  },\n});\n\nexport default connect(mapState, mapDispatch)(Movies);\n"]},"metadata":{},"sourceType":"module"}