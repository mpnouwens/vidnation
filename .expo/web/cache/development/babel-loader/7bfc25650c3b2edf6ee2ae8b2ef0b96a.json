{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createModel } from \"@rematch/core\";\nexport var search = createModel()({\n  state: {\n    searchMoviesText: \"\",\n    searchMoviesData: [],\n    searchEpisodesText: \"\",\n    searchEpisodesData: [],\n    searchSeriesText: \"\",\n    searchSeriesData: [],\n    masterDetailData: {}\n  },\n  reducers: {\n    searchMoviesText: function searchMoviesText(state, _searchMoviesText) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchMoviesText: _searchMoviesText\n      });\n    },\n    searchMoviesData: function searchMoviesData(state, payload) {\n      return _objectSpread(_objectSpread({}, state), payload);\n    },\n    searchEpisodesText: function searchEpisodesText(state, _searchEpisodesText) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchEpisodesText: _searchEpisodesText\n      });\n    },\n    searchEpisodesData: function searchEpisodesData(state, payload) {\n      return _objectSpread(_objectSpread({}, state), payload);\n    },\n    searchSeriesText: function searchSeriesText(state, _searchSeriesText) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchSeriesText: _searchSeriesText\n      });\n    },\n    searchSeriesData: function searchSeriesData(state, payload) {\n      return _objectSpread(_objectSpread({}, state), payload);\n    },\n    masterDetailData: function masterDetailData(state, payload) {\n      return _objectSpread(_objectSpread({}, state), payload);\n    }\n  },\n  effects: function effects(dispatch) {\n    return {\n      searchSeriesAsync: function searchSeriesAsync(payload, state) {\n        var response;\n        return _regeneratorRuntime.async(function searchSeriesAsync$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?apikey=597bf54e&s=\" + payload + \"&type=series\").then(function (response) {\n                  return response.json();\n                }).then(function (responseJson) {\n                  dispatch.search.searchSeriesData({\n                    searchSeriesData: responseJson\n                  });\n                }).catch(function (error) {\n                  alert(\"error!\");\n                }));\n\n              case 2:\n                response = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      searchMoviesAsync: function searchMoviesAsync(payload, state) {\n        var response;\n        return _regeneratorRuntime.async(function searchMoviesAsync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?apikey=597bf54e&s=\" + payload + \"&type=movies\").then(function (response) {\n                  return response.json();\n                }).then(function (responseJson) {\n                  dispatch.search.searchMoviesData({\n                    searchMoviesData: responseJson\n                  });\n                }).catch(function (error) {\n                  alert(\"error!\");\n                }));\n\n              case 2:\n                response = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      searchEpisodesAsync: function searchEpisodesAsync(payload, state) {\n        var response;\n        return _regeneratorRuntime.async(function searchEpisodesAsync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?apikey=597bf54e&s=\" + payload + \"&type=episodes\").then(function (response) {\n                  return response.json();\n                }).then(function (responseJson) {\n                  dispatch.search.searchEpisodesData({\n                    searchEpisodesData: responseJson\n                  });\n                }).catch(function (error) {\n                  alert(\"error!\");\n                }));\n\n              case 2:\n                response = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      masterDetailAsync: function masterDetailAsync(payload, state) {\n        var response;\n        return _regeneratorRuntime.async(function masterDetailAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _regeneratorRuntime.awrap(fetch(\"http://www.omdbapi.com/?apikey=597bf54e&i=\" + payload + \"&plot=full\").then(function (response) {\n                  return response.json();\n                }).then(function (responseJson) {\n                  console.log(\"responseJson\", responseJson);\n                  dispatch.search.masterDetailData({\n                    masterDetailData: responseJson\n                  });\n                }).catch(function (error) {\n                  alert(\"error!\");\n                }));\n\n              case 2:\n                response = _context4.sent;\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }\n});","map":{"version":3,"sources":["/Users/michaelnouwens/Documents/GitHub/vidnation/store/search.ts"],"names":["createModel","search","state","searchMoviesText","searchMoviesData","searchEpisodesText","searchEpisodesData","searchSeriesText","searchSeriesData","masterDetailData","reducers","payload","effects","dispatch","searchSeriesAsync","fetch","then","response","json","responseJson","catch","error","alert","searchMoviesAsync","searchEpisodesAsync","masterDetailAsync","console","log"],"mappings":"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","sourcesContent":["import { createModel, Reducer } from \"@rematch/core\";\nimport { RootModel } from \"./models\";\n\nexport const search = createModel<RootModel>()({\n  state: {\n    searchMoviesText: \"\",\n    searchMoviesData: [],\n    searchEpisodesText: \"\",\n    searchEpisodesData: [],\n    searchSeriesText: \"\",\n    searchSeriesData: [],\n    masterDetailData: {},\n  },\n  reducers: {\n    searchMoviesText(state, searchMoviesText: string) {\n      return {\n        ...state,\n        searchMoviesText,\n      };\n    },\n    searchMoviesData(state, payload: Object) {\n      return { ...state, ...payload };\n    },\n    searchEpisodesText(state, searchEpisodesText: string) {\n      return {\n        ...state,\n        searchEpisodesText,\n      };\n    },\n    searchEpisodesData(state, payload: Object) {\n      return { ...state, ...payload };\n    },\n    searchSeriesText(state, searchSeriesText: string) {\n      return {\n        ...state,\n        searchSeriesText,\n      };\n    },\n    searchSeriesData(state, payload: Object) {\n      return { ...state, ...payload };\n    },\n    masterDetailData(state, payload: Object) {\n      return { ...state, ...payload };\n    },\n  },\n  effects: (dispatch) => ({\n    async searchSeriesAsync(payload: string, state) {\n      const response = await fetch(\n        `http://www.omdbapi.com/?apikey=597bf54e&s=${payload}&type=series`\n      )\n        .then((response) => response.json())\n        .then((responseJson) => {\n          dispatch.search.searchSeriesData({ searchSeriesData: responseJson });\n        })\n        .catch((error) => {\n          alert(\"error!\");\n        });\n    },\n    async searchMoviesAsync(payload: string, state) {\n      const response = await fetch(\n        `http://www.omdbapi.com/?apikey=597bf54e&s=${payload}&type=movies`\n      )\n        .then((response) => response.json())\n        .then((responseJson) => {\n          dispatch.search.searchMoviesData({ searchMoviesData: responseJson });\n        })\n        .catch((error) => {\n          alert(\"error!\");\n        });\n    },\n    async searchEpisodesAsync(payload: string, state) {\n      const response = await fetch(\n        `http://www.omdbapi.com/?apikey=597bf54e&s=${payload}&type=episodes`\n      )\n        .then((response) => response.json())\n        .then((responseJson) => {\n          dispatch.search.searchEpisodesData({\n            searchEpisodesData: responseJson,\n          });\n        })\n        .catch((error) => {\n          alert(\"error!\");\n        });\n    },\n    async masterDetailAsync(payload: string, state) {\n      const response = await fetch(\n        `http://www.omdbapi.com/?apikey=597bf54e&i=${payload}&plot=full`\n      )\n        .then((response) => response.json())\n        .then((responseJson) => {\n          console.log(\"responseJson\", responseJson);\n          dispatch.search.masterDetailData({ masterDetailData: responseJson });\n        })\n        .catch((error) => {\n          alert(\"error!\");\n        });\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}