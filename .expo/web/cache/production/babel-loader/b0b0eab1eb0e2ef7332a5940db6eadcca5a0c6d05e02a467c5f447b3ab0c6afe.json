{"ast":null,"code":"export var AppOwnership;(function(AppOwnership){AppOwnership[\"Standalone\"]=\"standalone\";AppOwnership[\"Expo\"]=\"expo\";AppOwnership[\"Guest\"]=\"guest\";})(AppOwnership||(AppOwnership={}));export var UserInterfaceIdiom;(function(UserInterfaceIdiom){UserInterfaceIdiom[\"Handset\"]=\"handset\";UserInterfaceIdiom[\"Tablet\"]=\"tablet\";UserInterfaceIdiom[\"Unsupported\"]=\"unsupported\";})(UserInterfaceIdiom||(UserInterfaceIdiom={}));","map":{"version":3,"mappings":"AAAA,UAAYA,aAIX,CAJD,UAAYA,YAAY,EACtBA,uCAAyB,CACzBA,2BAAa,CACbA,6BAAe,CACjB,CAAC,EAJWA,YAAY,GAAZA,YAAY,MAMxB,UAAYC,mBAIX,CAJD,UAAYA,kBAAkB,EAC5BA,uCAAmB,CACnBA,qCAAiB,CACjBA,+CAA2B,CAC7B,CAAC,EAJWA,kBAAkB,GAAlBA,kBAAkB","names":["AppOwnership","UserInterfaceIdiom"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo-constants/src/Constants.types.ts"],"sourcesContent":["export enum AppOwnership {\n  Standalone = 'standalone',\n  Expo = 'expo',\n  Guest = 'guest',\n}\n\nexport enum UserInterfaceIdiom {\n  Handset = 'handset',\n  Tablet = 'tablet',\n  Unsupported = 'unsupported',\n}\n\nexport interface IOSManifest {\n  buildNumber: string;\n  platform: string;\n  model: string;\n  userInterfaceIdiom: UserInterfaceIdiom;\n  systemVersion: string;\n  [key: string]: any;\n}\n\nexport interface AndroidManifest {\n  versionCode: number;\n  [key: string]: any;\n}\n\nexport interface WebManifest {\n  [key: string]: any;\n}\n\nexport interface AppManifest {\n  name?: string;\n  description?: string;\n  slug?: string;\n  sdkVersion?: string;\n  version?: string;\n  /** Published Apps Only */\n  releaseId?: string;\n  revisionId?: string;\n  releaseChannel?: string;\n  orientation?: string;\n  primaryColor?: string;\n  icon?: string;\n  notification?: {\n    icon?: string;\n    color?: string;\n    [key: string]: any;\n  };\n  loading?: {\n    icon?: string;\n    [key: string]: any;\n  };\n  entryPoint?: string;\n  packagerOpts?: {\n    hostType?: string;\n    dev?: boolean;\n    strict?: boolean;\n    minify?: boolean;\n    urlType?: string;\n    urlRandomness?: string;\n    lanType?: string;\n    [key: string]: any;\n  };\n  xde?: boolean;\n  developer?: {\n    tool?: string;\n    [key: string]: any;\n  };\n  bundleUrl: string;\n  debuggerHost?: string;\n  mainModuleName?: string;\n  logUrl?: string;\n  [key: string]: any;\n}\n\nexport interface PlatformManifest {\n  ios?: IOSManifest;\n  android?: AndroidManifest;\n  web?: WebManifest;\n  detach?: {\n    scheme?: string;\n    [key: string]: any;\n  };\n  logUrl?: string;\n  scheme?: string;\n  hostUri?: string;\n  developer?: string;\n  [key: string]: any;\n}\n\nexport interface NativeConstants {\n  name: 'ExponentConstants';\n  appOwnership: AppOwnership | null;\n  debugMode: boolean;\n  deviceName?: string;\n  deviceYearClass: number | null;\n  experienceUrl: string;\n  // only nullable on web\n  expoRuntimeVersion: string | null;\n  /**\n   * The version string of the Expo client currently running.\n   * Returns `null` on and bare workflow and web.\n   */\n  expoVersion: string | null;\n  isDetached?: boolean;\n  intentUri?: string;\n  installationId: string;\n  isDevice: boolean;\n  isHeadless: boolean;\n  linkingUri: string;\n  nativeAppVersion: string | null;\n  nativeBuildVersion: string | null;\n  manifest: AppManifest;\n  sessionId: string;\n  statusBarHeight: number;\n  systemFonts: string[];\n  systemVersion?: number;\n  platform?: PlatformManifest;\n  [key: string]: any;\n\n  getWebViewUserAgentAsync: () => Promise<string | null>;\n}\n\nexport interface Constants extends NativeConstants {\n  deviceId?: string;\n  linkingUrl?: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}