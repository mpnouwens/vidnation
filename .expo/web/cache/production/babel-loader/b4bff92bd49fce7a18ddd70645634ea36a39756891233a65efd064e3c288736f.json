{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CodedError,RCTDeviceEventEmitter,UnavailabilityError}from'@unimodules/core';import Constants from'expo-constants';import{EventEmitter}from'fbemitter';import invariant from'invariant';import Platform from\"react-native-web/dist/exports/Platform\";import ExponentNotifications from\"./ExponentNotifications\";import Storage from\"./Storage\";var _emitter;var _initialNotification;function _maybeInitEmitter(){if(!_emitter){_emitter=new EventEmitter();RCTDeviceEventEmitter.addListener('Exponent.notification',emitNotification);}}export function emitNotification(notification){if(typeof notification==='string'){notification=JSON.parse(notification);}notification=_objectSpread({},notification);if(typeof notification.data==='string'){try{notification.data=JSON.parse(notification.data);}catch(e){}}_emitter.emit('notification',notification);}function _processNotification(notification){notification=_extends({},notification);if(!notification.data){notification.data={};}if(notification.hasOwnProperty('count')){delete notification.count;}if(Platform.OS==='ios'){if(notification.android){delete notification.android;}if(notification.ios){notification=_extends(notification,notification.ios);notification.data._displayInForeground=notification.ios._displayInForeground;delete notification.ios;}}if(Platform.OS==='android'){if(notification.ios){delete notification.ios;}if(notification.android){notification=_extends(notification,notification.android);delete notification.android;}}return notification;}function _validateNotification(notification){if(Platform.OS==='ios'){invariant(!!notification.title&&!!notification.body,'Local notifications on iOS require both a title and a body');}else if(Platform.OS==='android'){invariant(!!notification.title,'Local notifications on Android require a title');}}var ASYNC_STORAGE_PREFIX='__expo_internal_channel_';var IS_USING_NEW_BINARY=ExponentNotifications&&typeof ExponentNotifications.createChannel==='function';function _legacyReadChannel(id){var channelString;return _regeneratorRuntime.async(function _legacyReadChannel$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(Storage.getItem(\"\"+ASYNC_STORAGE_PREFIX+id));case 3:channelString=_context.sent;if(!channelString){_context.next=6;break;}return _context.abrupt(\"return\",JSON.parse(channelString));case 6:_context.next=10;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);case 10:return _context.abrupt(\"return\",null);case 11:case\"end\":return _context.stop();}}},null,null,[[0,8]],Promise);}function _legacyDeleteChannel(id){return Storage.removeItem(\"\"+ASYNC_STORAGE_PREFIX+id);}if(Platform.OS==='android'){Storage.clear=function _callee(callback){var keys,filteredKeys;return _regeneratorRuntime.async(function _callee$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(Storage.getAllKeys());case 3:keys=_context2.sent;if(!(keys&&keys.length)){_context2.next=8;break;}filteredKeys=keys.filter(function(key){return!key.startsWith(ASYNC_STORAGE_PREFIX);});_context2.next=8;return _regeneratorRuntime.awrap(Storage.multiRemove(filteredKeys));case 8:callback&&callback();_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);callback&&callback(_context2.t0);throw _context2.t0;case 15:case\"end\":return _context2.stop();}}},null,null,[[0,11]],Promise);};}function _legacySaveChannel(id,channel){return Storage.setItem(\"\"+ASYNC_STORAGE_PREFIX+id,JSON.stringify(channel));}export default{_setInitialNotification:function _setInitialNotification(notification){_initialNotification=notification;},createCategoryAsync:function createCategoryAsync(categoryId,actions,previewPlaceholder){return Platform.OS==='ios'?ExponentNotifications.createCategoryAsync(categoryId,actions,previewPlaceholder):ExponentNotifications.createCategoryAsync(categoryId,actions);},deleteCategoryAsync:function deleteCategoryAsync(categoryId){return ExponentNotifications.deleteCategoryAsync(categoryId);},getExpoPushTokenAsync:function getExpoPushTokenAsync(){if(!ExponentNotifications.getExponentPushTokenAsync){throw new UnavailabilityError('Expo.Notifications','getExpoPushTokenAsync');}if(!Constants.isDevice){throw new Error(\"Must be on a physical device to get an Expo Push Token\");}return ExponentNotifications.getExponentPushTokenAsync();},getDevicePushTokenAsync:function getDevicePushTokenAsync(config){if(!ExponentNotifications.getDevicePushTokenAsync){throw new UnavailabilityError('Expo.Notifications','getDevicePushTokenAsync');}return ExponentNotifications.getDevicePushTokenAsync(config||{});},createChannelAndroidAsync:function createChannelAndroidAsync(id,channel){if(Platform.OS!=='android'){console.warn(\"createChannelAndroidAsync(...) has no effect on \"+Platform.OS);return Promise.resolve();}if(!IS_USING_NEW_BINARY){return _legacySaveChannel(id,channel);}return ExponentNotifications.createChannel(id,channel);},deleteChannelAndroidAsync:function deleteChannelAndroidAsync(id){if(Platform.OS!=='android'){console.warn(\"deleteChannelAndroidAsync(...) has no effect on \"+Platform.OS);return Promise.resolve();}if(!IS_USING_NEW_BINARY){return Promise.resolve();}return ExponentNotifications.deleteChannel(id);},presentLocalNotificationAsync:function presentLocalNotificationAsync(notification){var nativeNotification,_channel;return _regeneratorRuntime.async(function presentLocalNotificationAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_validateNotification(notification);nativeNotification=_processNotification(notification);if(!(Platform.OS!=='android')){_context3.next=8;break;}_context3.next=5;return _regeneratorRuntime.awrap(ExponentNotifications.presentLocalNotification(nativeNotification));case 5:return _context3.abrupt(\"return\",_context3.sent);case 8:if(!nativeNotification.channelId){_context3.next=12;break;}_context3.next=11;return _regeneratorRuntime.awrap(_legacyReadChannel(nativeNotification.channelId));case 11:_channel=_context3.sent;case 12:if(!IS_USING_NEW_BINARY){_context3.next=17;break;}_legacyDeleteChannel(nativeNotification.channelId);return _context3.abrupt(\"return\",ExponentNotifications.presentLocalNotificationWithChannel(nativeNotification,_channel));case 17:if(_channel){nativeNotification.sound=_channel.sound;nativeNotification.priority=_channel.priority;nativeNotification.vibrate=_channel.vibrate;}return _context3.abrupt(\"return\",ExponentNotifications.presentLocalNotification(nativeNotification));case 19:case\"end\":return _context3.stop();}}},null,null,null,Promise);},scheduleLocalNotificationAsync:function scheduleLocalNotificationAsync(notification){var options,now,nativeNotification,timeAsDateObj,validOptions,_channel,_args4=arguments;return _regeneratorRuntime.async(function scheduleLocalNotificationAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:options=_args4.length>1&&_args4[1]!==undefined?_args4[1]:{};now=Date.now();_validateNotification(notification);nativeNotification=_processNotification(notification);if(!options.time){_context4.next=11;break;}timeAsDateObj=null;if(options.time&&typeof options.time==='number'){timeAsDateObj=new Date(options.time);if(timeAsDateObj.toString()==='Invalid Date'){timeAsDateObj=null;}}else if(options.time&&options.time instanceof Date){timeAsDateObj=options.time;}if(timeAsDateObj){_context4.next=9;break;}throw new Error(\"Provided value for \\\"time\\\" is invalid. Please verify that it's either a number representing Unix Epoch time in milliseconds, or a valid date object.\");case 9:if(timeAsDateObj.getTime()<now){console.warn(\"Provided value for \\\"time\\\" is before the current date. Did you possibly pass number of seconds since Unix Epoch instead of number of milliseconds?\");}options=_objectSpread(_objectSpread({},options),{},{time:timeAsDateObj.getTime()});case 11:if(!(options.intervalMs!=null&&options.repeat!=null)){_context4.next=13;break;}throw new Error(\"Pass either the \\\"repeat\\\" option or \\\"intervalMs\\\" option, not both\");case 13:if(!(options.repeat!=null)){_context4.next=17;break;}validOptions=new Set(['minute','hour','day','week','month','year']);if(validOptions.has(options.repeat)){_context4.next=17;break;}throw new Error(\"Pass one of ['minute', 'hour', 'day', 'week', 'month', 'year'] as the value for the \\\"repeat\\\" option\");case 17:if(!(options.intervalMs!=null)){_context4.next=22;break;}if(!(Platform.OS==='ios')){_context4.next=20;break;}throw new Error(\"The \\\"intervalMs\\\" option is not supported on iOS\");case 20:if(!(options.intervalMs<=0||!Number.isInteger(options.intervalMs))){_context4.next=22;break;}throw new Error(\"Pass an integer greater than zero as the value for the \\\"intervalMs\\\" option\");case 22:if(!(Platform.OS!=='android')){_context4.next=29;break;}if(!options.repeat){_context4.next=26;break;}console.warn('Ability to schedule an automatically repeated notification is deprecated on iOS and will be removed in the next SDK release.');return _context4.abrupt(\"return\",ExponentNotifications.legacyScheduleLocalRepeatingNotification(nativeNotification,options));case 26:return _context4.abrupt(\"return\",ExponentNotifications.scheduleLocalNotification(nativeNotification,options));case 29:if(!nativeNotification.channelId){_context4.next=33;break;}_context4.next=32;return _regeneratorRuntime.awrap(_legacyReadChannel(nativeNotification.channelId));case 32:_channel=_context4.sent;case 33:if(!IS_USING_NEW_BINARY){_context4.next=38;break;}_legacyDeleteChannel(nativeNotification.channelId);return _context4.abrupt(\"return\",ExponentNotifications.scheduleLocalNotificationWithChannel(nativeNotification,options,_channel));case 38:if(_channel){nativeNotification.sound=_channel.sound;nativeNotification.priority=_channel.priority;nativeNotification.vibrate=_channel.vibrate;}return _context4.abrupt(\"return\",ExponentNotifications.scheduleLocalNotification(nativeNotification,options));case 40:case\"end\":return _context4.stop();}}},null,null,null,Promise);},dismissNotificationAsync:function dismissNotificationAsync(notificationId){return _regeneratorRuntime.async(function dismissNotificationAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(ExponentNotifications.dismissNotification){_context5.next=2;break;}throw new UnavailabilityError('Expo.Notifications','dismissNotification');case 2:_context5.next=4;return _regeneratorRuntime.awrap(ExponentNotifications.dismissNotification(notificationId));case 4:return _context5.abrupt(\"return\",_context5.sent);case 5:case\"end\":return _context5.stop();}}},null,null,null,Promise);},dismissAllNotificationsAsync:function dismissAllNotificationsAsync(){return _regeneratorRuntime.async(function dismissAllNotificationsAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(ExponentNotifications.dismissAllNotifications){_context6.next=2;break;}throw new UnavailabilityError('Expo.Notifications','dismissAllNotifications');case 2:_context6.next=4;return _regeneratorRuntime.awrap(ExponentNotifications.dismissAllNotifications());case 4:return _context6.abrupt(\"return\",_context6.sent);case 5:case\"end\":return _context6.stop();}}},null,null,null,Promise);},cancelScheduledNotificationAsync:function cancelScheduledNotificationAsync(notificationId){if(Platform.OS==='android'&&typeof notificationId==='string'){return ExponentNotifications.cancelScheduledNotificationWithStringIdAsync(notificationId);}return ExponentNotifications.cancelScheduledNotificationAsync(notificationId);},cancelAllScheduledNotificationsAsync:function cancelAllScheduledNotificationsAsync(){return ExponentNotifications.cancelAllScheduledNotificationsAsync();},addListener:function addListener(listener){_maybeInitEmitter();if(_initialNotification){var initialNotification=_initialNotification;_initialNotification=null;setTimeout(function(){emitNotification(initialNotification);},0);}return _emitter.addListener('notification',listener);},getBadgeNumberAsync:function getBadgeNumberAsync(){return _regeneratorRuntime.async(function getBadgeNumberAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(ExponentNotifications.getBadgeNumberAsync){_context7.next=2;break;}return _context7.abrupt(\"return\",0);case 2:return _context7.abrupt(\"return\",ExponentNotifications.getBadgeNumberAsync());case 3:case\"end\":return _context7.stop();}}},null,null,null,Promise);},setBadgeNumberAsync:function setBadgeNumberAsync(number){return _regeneratorRuntime.async(function setBadgeNumberAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(ExponentNotifications.setBadgeNumberAsync){_context8.next=2;break;}throw new UnavailabilityError('Expo.Notifications','setBadgeNumberAsync');case 2:return _context8.abrupt(\"return\",ExponentNotifications.setBadgeNumberAsync(number));case 3:case\"end\":return _context8.stop();}}},null,null,null,Promise);},scheduleNotificationWithCalendarAsync:function scheduleNotificationWithCalendarAsync(notification){var options,areOptionsValid,nativeNotification,_args9=arguments;return _regeneratorRuntime.async(function scheduleNotificationWithCalendarAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:options=_args9.length>1&&_args9[1]!==undefined?_args9[1]:{};areOptionsValid=(options.month==null||isInRangeInclusive(options.month,1,12))&&(options.day==null||isInRangeInclusive(options.day,1,31))&&(options.hour==null||isInRangeInclusive(options.hour,0,23))&&(options.minute==null||isInRangeInclusive(options.minute,0,59))&&(options.second==null||isInRangeInclusive(options.second,0,59))&&(options.weekDay==null||isInRangeInclusive(options.weekDay,1,7))&&(options.weekDay==null||options.day==null);if(areOptionsValid){_context9.next=4;break;}throw new CodedError('WRONG_OPTIONS','Options in scheduleNotificationWithCalendarAsync call were incorrect!');case 4:_validateNotification(notification);nativeNotification=_processNotification(notification);return _context9.abrupt(\"return\",ExponentNotifications.scheduleNotificationWithCalendar(nativeNotification,options));case 7:case\"end\":return _context9.stop();}}},null,null,null,Promise);},scheduleNotificationWithTimerAsync:function scheduleNotificationWithTimerAsync(notification,options){var nativeNotification;return _regeneratorRuntime.async(function scheduleNotificationWithTimerAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(!(options.interval<1)){_context10.next=2;break;}throw new CodedError('WRONG_OPTIONS','Interval must be not less then 1');case 2:_validateNotification(notification);nativeNotification=_processNotification(notification);return _context10.abrupt(\"return\",ExponentNotifications.scheduleNotificationWithTimer(nativeNotification,options));case 5:case\"end\":return _context10.stop();}}},null,null,null,Promise);}};function isInRangeInclusive(variable,min,max){return variable>=min&&variable<=max;}","map":{"version":3,"mappings":"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","names":["CodedError","RCTDeviceEventEmitter","UnavailabilityError","Constants","EventEmitter","invariant","ExponentNotifications","Storage","_emitter","_initialNotification","_maybeInitEmitter","addListener","emitNotification","notification","JSON","parse","data","e","emit","_processNotification","hasOwnProperty","count","Platform","OS","android","ios","_displayInForeground","_validateNotification","title","body","ASYNC_STORAGE_PREFIX","IS_USING_NEW_BINARY","createChannel","_legacyReadChannel","id","getItem","channelString","_legacyDeleteChannel","removeItem","clear","callback","getAllKeys","keys","length","filteredKeys","filter","key","startsWith","multiRemove","_legacySaveChannel","channel","setItem","stringify","_setInitialNotification","createCategoryAsync","categoryId","actions","previewPlaceholder","deleteCategoryAsync","getExpoPushTokenAsync","getExponentPushTokenAsync","isDevice","Error","getDevicePushTokenAsync","config","createChannelAndroidAsync","console","warn","Promise","resolve","deleteChannelAndroidAsync","deleteChannel","presentLocalNotificationAsync","nativeNotification","presentLocalNotification","channelId","_channel","presentLocalNotificationWithChannel","sound","priority","vibrate","scheduleLocalNotificationAsync","options","now","Date","time","timeAsDateObj","toString","getTime","intervalMs","repeat","validOptions","Set","has","Number","isInteger","legacyScheduleLocalRepeatingNotification","scheduleLocalNotification","scheduleLocalNotificationWithChannel","dismissNotificationAsync","notificationId","dismissNotification","dismissAllNotificationsAsync","dismissAllNotifications","cancelScheduledNotificationAsync","cancelScheduledNotificationWithStringIdAsync","cancelAllScheduledNotificationsAsync","listener","initialNotification","setTimeout","getBadgeNumberAsync","setBadgeNumberAsync","number","scheduleNotificationWithCalendarAsync","areOptionsValid","month","isInRangeInclusive","day","hour","minute","second","weekDay","scheduleNotificationWithCalendar","scheduleNotificationWithTimerAsync","interval","scheduleNotificationWithTimer","variable","min","max"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo/src/Notifications/Notifications.ts"],"sourcesContent":["import { CodedError, RCTDeviceEventEmitter, UnavailabilityError } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport { EventEmitter, EventSubscription } from 'fbemitter';\nimport invariant from 'invariant';\nimport { Platform } from 'react-native';\n\nimport ExponentNotifications from './ExponentNotifications';\nimport {\n  Notification,\n  LocalNotification,\n  Channel,\n  ActionType,\n  LocalNotificationId,\n} from './Notifications.types';\nimport Storage from './Storage';\n\nlet _emitter;\nlet _initialNotification;\n\nfunction _maybeInitEmitter() {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    RCTDeviceEventEmitter.addListener('Exponent.notification', emitNotification);\n  }\n}\n\nexport function emitNotification(notification) {\n  if (typeof notification === 'string') {\n    notification = JSON.parse(notification);\n  }\n\n  /* Don't mutate the original notification */\n  notification = { ...notification };\n\n  if (typeof notification.data === 'string') {\n    try {\n      notification.data = JSON.parse(notification.data);\n    } catch (e) {\n      // It's actually just a string, that's fine\n    }\n  }\n\n  _emitter.emit('notification', notification);\n}\n\nfunction _processNotification(notification) {\n  notification = Object.assign({}, notification);\n\n  if (!notification.data) {\n    notification.data = {};\n  }\n\n  if (notification.hasOwnProperty('count')) {\n    delete notification.count;\n  }\n\n  // Delete any Android properties on iOS and merge the iOS properties on root notification object\n  if (Platform.OS === 'ios') {\n    if (notification.android) {\n      delete notification.android;\n    }\n\n    if (notification.ios) {\n      notification = Object.assign(notification, notification.ios);\n      notification.data._displayInForeground = notification.ios._displayInForeground;\n      delete notification.ios;\n    }\n  }\n\n  // Delete any iOS properties on Android and merge the Android properties on root notification\n  // object\n  if (Platform.OS === 'android') {\n    if (notification.ios) {\n      delete notification.ios;\n    }\n\n    if (notification.android) {\n      notification = Object.assign(notification, notification.android);\n      delete notification.android;\n    }\n  }\n\n  return notification;\n}\n\nfunction _validateNotification(notification) {\n  if (Platform.OS === 'ios') {\n    invariant(\n      !!notification.title && !!notification.body,\n      'Local notifications on iOS require both a title and a body'\n    );\n  } else if (Platform.OS === 'android') {\n    invariant(!!notification.title, 'Local notifications on Android require a title');\n  }\n}\n\nconst ASYNC_STORAGE_PREFIX = '__expo_internal_channel_';\n// TODO: remove this before releasing\n// this will always be `true` for SDK 28+\nconst IS_USING_NEW_BINARY =\n  ExponentNotifications && typeof ExponentNotifications.createChannel === 'function';\n\nasync function _legacyReadChannel(id: string): Promise<Channel | null> {\n  try {\n    const channelString = await Storage.getItem(`${ASYNC_STORAGE_PREFIX}${id}`);\n    if (channelString) {\n      return JSON.parse(channelString);\n    }\n  } catch (e) {}\n  return null;\n}\n\nfunction _legacyDeleteChannel(id: string): Promise<void> {\n  return Storage.removeItem(`${ASYNC_STORAGE_PREFIX}${id}`);\n}\n\nif (Platform.OS === 'android') {\n  Storage.clear = async function(callback?: (error?: Error) => void): Promise<void> {\n    try {\n      const keys = await Storage.getAllKeys();\n      if (keys && keys.length) {\n        const filteredKeys = keys.filter(key => !key.startsWith(ASYNC_STORAGE_PREFIX));\n        await Storage.multiRemove(filteredKeys);\n      }\n      callback && callback();\n    } catch (e) {\n      callback && callback(e);\n      throw e;\n    }\n  };\n}\n\n// This codepath will never be triggered in SDK 28 and above\n// TODO: remove before releasing\nfunction _legacySaveChannel(id: string, channel: Channel): Promise<void> {\n  return Storage.setItem(`${ASYNC_STORAGE_PREFIX}${id}`, JSON.stringify(channel));\n}\n\nexport default {\n  /* Only used internally to initialize the notification from top level props */\n  _setInitialNotification(notification: Notification) {\n    _initialNotification = notification;\n  },\n\n  // User passes set of actions titles.\n  createCategoryAsync(\n    categoryId: string,\n    actions: ActionType[],\n    previewPlaceholder?: string\n  ): Promise<void> {\n    return Platform.OS === 'ios'\n      ? ExponentNotifications.createCategoryAsync(categoryId, actions, previewPlaceholder)\n      : ExponentNotifications.createCategoryAsync(categoryId, actions);\n  },\n\n  deleteCategoryAsync(categoryId: string): Promise<void> {\n    return ExponentNotifications.deleteCategoryAsync(categoryId);\n  },\n\n  /* Re-export */\n  getExpoPushTokenAsync(): Promise<string> {\n    if (!ExponentNotifications.getExponentPushTokenAsync) {\n      throw new UnavailabilityError('Expo.Notifications', 'getExpoPushTokenAsync');\n    }\n    if (!Constants.isDevice) {\n      throw new Error(`Must be on a physical device to get an Expo Push Token`);\n    }\n    return ExponentNotifications.getExponentPushTokenAsync();\n  },\n\n  getDevicePushTokenAsync: (config: {\n    gcmSenderId?: string;\n  }): Promise<{ type: string; data: string }> => {\n    if (!ExponentNotifications.getDevicePushTokenAsync) {\n      throw new UnavailabilityError('Expo.Notifications', 'getDevicePushTokenAsync');\n    }\n    return ExponentNotifications.getDevicePushTokenAsync(config || {});\n  },\n\n  createChannelAndroidAsync(id: string, channel: Channel): Promise<void> {\n    if (Platform.OS !== 'android') {\n      console.warn(`createChannelAndroidAsync(...) has no effect on ${Platform.OS}`);\n      return Promise.resolve();\n    }\n    // This codepath will never be triggered in SDK 28 and above\n    // TODO: remove before releasing\n    if (!IS_USING_NEW_BINARY) {\n      return _legacySaveChannel(id, channel);\n    }\n    return ExponentNotifications.createChannel(id, channel);\n  },\n\n  deleteChannelAndroidAsync(id: string): Promise<void> {\n    if (Platform.OS !== 'android') {\n      console.warn(`deleteChannelAndroidAsync(...) has no effect on ${Platform.OS}`);\n      return Promise.resolve();\n    }\n    // This codepath will never be triggered in SDK 28 and above\n    // TODO: remove before releasing\n    if (!IS_USING_NEW_BINARY) {\n      return Promise.resolve();\n    }\n    return ExponentNotifications.deleteChannel(id);\n  },\n\n  /* Shows a notification instantly */\n  async presentLocalNotificationAsync(\n    notification: LocalNotification\n  ): Promise<LocalNotificationId> {\n    _validateNotification(notification);\n    const nativeNotification = _processNotification(notification);\n\n    if (Platform.OS !== 'android') {\n      return await ExponentNotifications.presentLocalNotification(nativeNotification);\n    } else {\n      let _channel;\n      if (nativeNotification.channelId) {\n        _channel = await _legacyReadChannel(nativeNotification.channelId);\n      }\n\n      if (IS_USING_NEW_BINARY) {\n        // delete the legacy channel from AsyncStorage so this codepath isn't triggered anymore\n        _legacyDeleteChannel(nativeNotification.channelId);\n        return ExponentNotifications.presentLocalNotificationWithChannel(\n          nativeNotification,\n          _channel\n        );\n      } else {\n        // TODO: remove this codepath before releasing, it will never be triggered on SDK 28+\n        // channel does not actually exist, so add its settings to the individual notification\n        if (_channel) {\n          nativeNotification.sound = _channel.sound;\n          nativeNotification.priority = _channel.priority;\n          nativeNotification.vibrate = _channel.vibrate;\n        }\n        return ExponentNotifications.presentLocalNotification(nativeNotification);\n      }\n    }\n  },\n\n  /* Schedule a notification at a later date */\n  async scheduleLocalNotificationAsync(\n    notification: LocalNotification,\n    options: {\n      time?: Date | number;\n      repeat?: 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n      intervalMs?: number;\n    } = {}\n  ): Promise<LocalNotificationId> {\n    // set now at the beginning of the method, to prevent potential weird warnings when we validate\n    // options.time later on\n    const now = Date.now();\n\n    // Validate and process the notification data\n    _validateNotification(notification);\n    const nativeNotification = _processNotification(notification);\n\n    // Validate `options.time`\n    if (options.time) {\n      let timeAsDateObj: Date | null = null;\n      if (options.time && typeof options.time === 'number') {\n        timeAsDateObj = new Date(options.time);\n        if (timeAsDateObj.toString() === 'Invalid Date') {\n          timeAsDateObj = null;\n        }\n      } else if (options.time && options.time instanceof Date) {\n        timeAsDateObj = options.time;\n      }\n\n      // If we couldn't convert properly, throw an error\n      if (!timeAsDateObj) {\n        throw new Error(\n          `Provided value for \"time\" is invalid. Please verify that it's either a number representing Unix Epoch time in milliseconds, or a valid date object.`\n        );\n      }\n\n      // If someone passes in a value that is too small, say, by an order of 1000 (it's common to\n      // accidently pass seconds instead of ms), display a warning.\n      if (timeAsDateObj.getTime() < now) {\n        console.warn(\n          `Provided value for \"time\" is before the current date. Did you possibly pass number of seconds since Unix Epoch instead of number of milliseconds?`\n        );\n      }\n\n      options = {\n        ...options,\n        time: timeAsDateObj.getTime(),\n      };\n    }\n\n    if (options.intervalMs != null && options.repeat != null) {\n      throw new Error(`Pass either the \"repeat\" option or \"intervalMs\" option, not both`);\n    }\n\n    // Validate options.repeat\n    if (options.repeat != null) {\n      const validOptions = new Set(['minute', 'hour', 'day', 'week', 'month', 'year']);\n      if (!validOptions.has(options.repeat)) {\n        throw new Error(\n          `Pass one of ['minute', 'hour', 'day', 'week', 'month', 'year'] as the value for the \"repeat\" option`\n        );\n      }\n    }\n\n    if (options.intervalMs != null) {\n      if (Platform.OS === 'ios') {\n        throw new Error(`The \"intervalMs\" option is not supported on iOS`);\n      }\n\n      if (options.intervalMs <= 0 || !Number.isInteger(options.intervalMs)) {\n        throw new Error(\n          `Pass an integer greater than zero as the value for the \"intervalMs\" option`\n        );\n      }\n    }\n\n    if (Platform.OS !== 'android') {\n      if (options.repeat) {\n        console.warn(\n          'Ability to schedule an automatically repeated notification is deprecated on iOS and will be removed in the next SDK release.'\n        );\n        return ExponentNotifications.legacyScheduleLocalRepeatingNotification(\n          nativeNotification,\n          options\n        );\n      }\n\n      return ExponentNotifications.scheduleLocalNotification(nativeNotification, options);\n    } else {\n      let _channel;\n      if (nativeNotification.channelId) {\n        _channel = await _legacyReadChannel(nativeNotification.channelId);\n      }\n\n      if (IS_USING_NEW_BINARY) {\n        // delete the legacy channel from AsyncStorage so this codepath isn't triggered anymore\n        _legacyDeleteChannel(nativeNotification.channelId);\n        return ExponentNotifications.scheduleLocalNotificationWithChannel(\n          nativeNotification,\n          options,\n          _channel\n        );\n      } else {\n        // TODO: remove this codepath before releasing, it will never be triggered on SDK 28+\n        // channel does not actually exist, so add its settings to the individual notification\n        if (_channel) {\n          nativeNotification.sound = _channel.sound;\n          nativeNotification.priority = _channel.priority;\n          nativeNotification.vibrate = _channel.vibrate;\n        }\n        return ExponentNotifications.scheduleLocalNotification(nativeNotification, options);\n      }\n    }\n  },\n\n  /* Dismiss currently shown notification with ID (Android only) */\n  async dismissNotificationAsync(notificationId: LocalNotificationId): Promise<void> {\n    if (!ExponentNotifications.dismissNotification) {\n      throw new UnavailabilityError('Expo.Notifications', 'dismissNotification');\n    }\n    return await ExponentNotifications.dismissNotification(notificationId);\n  },\n\n  /* Dismiss all currently shown notifications (Android only) */\n  async dismissAllNotificationsAsync(): Promise<void> {\n    if (!ExponentNotifications.dismissAllNotifications) {\n      throw new UnavailabilityError('Expo.Notifications', 'dismissAllNotifications');\n    }\n    return await ExponentNotifications.dismissAllNotifications();\n  },\n\n  /* Cancel scheduled notification notification with ID */\n  cancelScheduledNotificationAsync(notificationId: LocalNotificationId): Promise<void> {\n    if (Platform.OS === 'android' && typeof notificationId === 'string') {\n      return ExponentNotifications.cancelScheduledNotificationWithStringIdAsync(notificationId);\n    }\n    return ExponentNotifications.cancelScheduledNotificationAsync(notificationId);\n  },\n\n  /* Cancel all scheduled notifications */\n  cancelAllScheduledNotificationsAsync(): Promise<void> {\n    return ExponentNotifications.cancelAllScheduledNotificationsAsync();\n  },\n\n  /* Primary public api */\n  addListener(listener: (notification: Notification) => unknown): EventSubscription {\n    _maybeInitEmitter();\n\n    if (_initialNotification) {\n      const initialNotification = _initialNotification;\n      _initialNotification = null;\n      setTimeout(() => {\n        emitNotification(initialNotification);\n      }, 0);\n    }\n\n    return _emitter.addListener('notification', listener);\n  },\n\n  async getBadgeNumberAsync(): Promise<number> {\n    if (!ExponentNotifications.getBadgeNumberAsync) {\n      return 0;\n    }\n    return ExponentNotifications.getBadgeNumberAsync();\n  },\n\n  async setBadgeNumberAsync(number: number): Promise<void> {\n    if (!ExponentNotifications.setBadgeNumberAsync) {\n      throw new UnavailabilityError('Expo.Notifications', 'setBadgeNumberAsync');\n    }\n    return ExponentNotifications.setBadgeNumberAsync(number);\n  },\n\n  async scheduleNotificationWithCalendarAsync(\n    notification: LocalNotification,\n    options: {\n      year?: number;\n      month?: number;\n      hour?: number;\n      day?: number;\n      minute?: number;\n      second?: number;\n      weekDay?: number;\n      repeat?: boolean;\n    } = {}\n  ): Promise<string> {\n    const areOptionsValid: boolean =\n      (options.month == null || isInRangeInclusive(options.month, 1, 12)) &&\n      (options.day == null || isInRangeInclusive(options.day, 1, 31)) &&\n      (options.hour == null || isInRangeInclusive(options.hour, 0, 23)) &&\n      (options.minute == null || isInRangeInclusive(options.minute, 0, 59)) &&\n      (options.second == null || isInRangeInclusive(options.second, 0, 59)) &&\n      (options.weekDay == null || isInRangeInclusive(options.weekDay, 1, 7)) &&\n      (options.weekDay == null || options.day == null);\n\n    if (!areOptionsValid) {\n      throw new CodedError(\n        'WRONG_OPTIONS',\n        'Options in scheduleNotificationWithCalendarAsync call were incorrect!'\n      );\n    }\n\n    _validateNotification(notification);\n    const nativeNotification = _processNotification(notification);\n\n    return ExponentNotifications.scheduleNotificationWithCalendar(nativeNotification, options);\n  },\n\n  async scheduleNotificationWithTimerAsync(\n    notification: LocalNotification,\n    options: {\n      interval: number;\n      repeat?: boolean;\n    }\n  ): Promise<string> {\n    if (options.interval < 1) {\n      throw new CodedError('WRONG_OPTIONS', 'Interval must be not less then 1');\n    }\n\n    _validateNotification(notification);\n    const nativeNotification = _processNotification(notification);\n\n    return ExponentNotifications.scheduleNotificationWithTimer(nativeNotification, options);\n  },\n};\n\nfunction isInRangeInclusive(variable: number, min: number, max: number): boolean {\n  return variable >= min && variable <= max;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}