{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import RCTEventEmitter from'react-native-web/dist/vendor/react-native/emitter/EventEmitter';import RCTDeviceEventEmitter from'react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter';var SyntheticPlatformEmitter=function(){function SyntheticPlatformEmitter(){_classCallCheck(this,SyntheticPlatformEmitter);this._emitter=new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);}_createClass(SyntheticPlatformEmitter,[{key:\"emit\",value:function emit(eventName,props){this._emitter.emit(eventName,props);}}]);return SyntheticPlatformEmitter;}();export default new SyntheticPlatformEmitter();","map":{"version":3,"mappings":"gIAIA,MAAOA,gBAAP,KAA4B,gEAA5B,CAEA,MAAOC,sBAAP,KAAkC,oFAAlC,C,GAMMC,yB,oGACJC,Q,CAAW,GAAIH,gBAAJ,CAAoBC,qBAAqB,CAACG,gBAA1C,C,yEAENC,S,CAAmBC,K,CAAkB,CACxC,KAAKH,QAAL,CAAcI,IAAd,CAAmBF,SAAnB,CAA8BC,KAA9B,EACD,C,wCAGH,cAAe,IAAIJ,yBAAJ,EAAf","names":["RCTEventEmitter","RCTDeviceEventEmitter","SyntheticPlatformEmitter","_emitter","sharedSubscriber","eventName","props","emit"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/react-native-appearance/lib/module/web/emitter-polyfill.ts"],"sourcesContent":["// Copyright 2018-present 650 Industries. All rights reserved.\n// Polyfill the @unimodules/react-native-adapter used for Expo web.\n\n// @ts-ignore: react-native-web is a peer dependency\nimport RCTEventEmitter from 'react-native-web/dist/vendor/react-native/emitter/EventEmitter';\n// @ts-ignore: react-native-web is a peer dependency\nimport RCTDeviceEventEmitter from 'react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}