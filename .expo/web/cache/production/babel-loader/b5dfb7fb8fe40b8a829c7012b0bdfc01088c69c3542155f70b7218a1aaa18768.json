{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{AppOwnership,UserInterfaceIdiom}from\"./Constants.types\";import ExponentConstants from\"./ExponentConstants\";export{AppOwnership,UserInterfaceIdiom};if(!ExponentConstants){console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");}var manifest=null;if(ExponentConstants&&ExponentConstants.manifest){manifest=ExponentConstants.manifest;if(typeof manifest==='string'){manifest=JSON.parse(manifest);}}var _ref=ExponentConstants||{},name=_ref.name,appOwnership=_ref.appOwnership,constants=_objectWithoutProperties(_ref,[\"name\",\"appOwnership\"]);export default _objectSpread(_objectSpread({},constants),{},{appOwnership:appOwnership!=null?appOwnership:null,manifest:manifest,deviceId:constants.installationId,linkingUrl:constants.linkingUri});","map":{"version":3,"mappings":"65BAAA,OAEEA,YAAY,CAKZC,kBAAkB,yBAGpB,MAAOC,kBAAiB,2BAExB,OAEEF,YAAY,CAKZC,kBAAkB,EAIpB,GAAI,CAACC,iBAAiB,CAAE,CACtBC,OAAO,CAACC,IAAI,CACV,wGAAwG,CACzG,EAIH,GAAIC,SAAQ,CAAG,IAAI,CACnB,GAAIH,iBAAiB,EAAIA,iBAAiB,CAACG,QAAQ,CAAE,CACnDA,QAAQ,CAAGH,iBAAiB,CAACG,QAAQ,CACrC,GAAI,MAAOA,SAAQ,GAAK,QAAQ,CAAE,CAChCA,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,GAElC,SAE6CH,iBAAiB,EAAI,EAAE,CAA7DM,IAAI,MAAJA,IAAI,CAAEC,YAAY,MAAZA,YAAY,CAAKC,SAAS,wDAExC,8CACKA,SAAS,MAEZD,YAAY,CAAEA,YAAY,OAAZA,YAAY,CAAI,IAAI,CAClCJ,QAAQ,CAARA,QAAQ,CAERM,QAAQ,CAAED,SAAS,CAACE,cAAc,CAClCC,UAAU,CAAEH,SAAS,CAACI,UAAU","names":["AppOwnership","UserInterfaceIdiom","ExponentConstants","console","warn","manifest","JSON","parse","name","appOwnership","constants","deviceId","installationId","linkingUrl","linkingUri"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo-constants/src/Constants.ts"],"sourcesContent":["import {\n  AndroidManifest,\n  AppOwnership,\n  Constants,\n  IOSManifest,\n  NativeConstants,\n  PlatformManifest,\n  UserInterfaceIdiom,\n  WebManifest,\n} from './Constants.types';\nimport ExponentConstants from './ExponentConstants';\n\nexport {\n  AndroidManifest,\n  AppOwnership,\n  Constants,\n  IOSManifest,\n  NativeConstants,\n  PlatformManifest,\n  UserInterfaceIdiom,\n  WebManifest,\n};\n\nif (!ExponentConstants) {\n  console.warn(\n    \"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\"\n  );\n}\n\n// On Android we pass the manifest in JSON form so this step is necessary\nlet manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nconst { name, appOwnership, ...constants } = (ExponentConstants || {}) as any;\n\nexport default {\n  ...constants,\n  // Ensure this is null in bare workflow\n  appOwnership: appOwnership ?? null,\n  manifest,\n  // Legacy aliases\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri,\n} as Constants;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}