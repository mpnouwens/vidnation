{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';var BaseRouter={getStateForAction:function getStateForAction(state,action){switch(action.type){case'SET_PARAMS':{var index=action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}return _objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(r,i){return i===index?_objectSpread(_objectSpread({},r),{},{params:_objectSpread(_objectSpread({},r.params),action.payload.params)}):r;})});}case'RESET':{var nextState=action.payload;if(nextState.routes.length===0||nextState.routes.some(function(route){return!state.routeNames.includes(route.name);})){return null;}if(nextState.stale===false){if(state.routeNames.length!==nextState.routeNames.length||nextState.routeNames.some(function(name){return!state.routeNames.includes(name);})){return null;}return _objectSpread(_objectSpread({},nextState),{},{routes:nextState.routes.map(function(route){return route.key?route:_objectSpread(_objectSpread({},route),{},{key:\"\".concat(route.name,\"-\").concat(nanoid())});})});}return nextState;}default:return null;}},shouldActionChangeFocus:function shouldActionChangeFocus(action){return action.type==='NAVIGATE';}};export default BaseRouter;","map":{"version":3,"mappings":"w0BAAA,OAASA,MAAT,KAAuB,mBAAvB,CAWA,GAAMC,WAAU,CAAG,CACjBC,iBAAiB,4BACfC,KADe,CAEfC,MAFe,CAGqB,CACpC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,YAAL,CAAmB,CACjB,GAAMC,MAAK,CAAGF,MAAM,CAACG,MAAP,CACVJ,KAAK,CAACK,MAAN,CAAaC,SAAb,CAAwBC,UAAD,QAAOA,EAAC,CAACC,GAAF,GAAUP,MAAM,CAACG,MAA/C,GADU,CAEVJ,KAAK,CAACG,KAFV,CAIA,GAAIA,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChB,MAAO,KAAP,CACD,CAED,sCACKH,KADE,MAELK,MAAM,CAAEL,KAAK,CAACK,MAAN,CAAaI,GAAb,CAAiB,SAACF,CAAD,CAAIG,CAAJ,QACvBA,EAAC,GAAKP,KAAN,gCACSI,CAAL,MAAQI,MAAM,gCAAOJ,CAAC,CAACI,MAAP,EAAkBV,MAAM,CAACW,OAAP,CAAeD,OAAjC,GAChBJ,CAHE,MAMX,CAED,IAAK,OAAL,CAAc,CACZ,GAAMM,UAAS,CAAGZ,MAAM,CAACW,OAAzB,CAEA,GACEC,SAAS,CAACR,MAAV,CAAiBS,MAAjB,GAA4B,CAA5B,EACAD,SAAS,CAACR,MAAV,CAAiBU,IAAjB,CACGC,cAAD,QAA6B,CAAChB,KAAK,CAACiB,UAAN,CAAiBC,QAAjB,CAA0BF,KAAK,CAACG,IAAhC,CADhC,GAFF,CAKE,CACA,MAAO,KAAP,CACD,CAED,GAAIN,SAAS,CAACO,KAAV,GAAoB,KAAxB,CAA+B,CAC7B,GACEpB,KAAK,CAACiB,UAAN,CAAiBH,MAAjB,GAA4BD,SAAS,CAACI,UAAV,CAAqBH,MAAjD,EACAD,SAAS,CAACI,UAAV,CAAqBF,IAArB,CACGI,aAAD,QAAU,CAACnB,KAAK,CAACiB,UAAN,CAAiBC,QAAjB,CAA0BC,IAA1B,CADb,GAFF,CAKE,CACA,MAAO,KAAP,CACD,CAED,sCACKN,SADE,MAELR,MAAM,CAAEQ,SAAS,CAACR,MAAV,CAAiBI,GAAjB,CAAsBO,cAAD,QAC3BA,MAAK,CAACR,GAAN,CAAYQ,KAAZ,gCAAyBA,KAAL,MAAYR,GAAG,WAAKQ,KAAK,CAACG,IAAX,aAAmBtB,MAAM,EAAzB,GAD7B,MAIX,CAED,MAAOgB,UAAP,CACD,CAED,QACE,MAAO,KAAP,EAEL,CA7DgB,CA+DjBQ,uBAAuB,kCAACpB,MAAD,CAAiC,CACtD,MAAOA,OAAM,CAACC,IAAP,GAAgB,UAAvB,CACD,CAjEgB,CAAnB,CAoEA,cAAeJ,WAAf","names":["nanoid","BaseRouter","getStateForAction","state","action","type","index","source","routes","findIndex","r","key","map","i","params","payload","nextState","length","some","route","routeNames","includes","name","stale","shouldActionChangeFocus"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/routers/lib/module/BaseRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}