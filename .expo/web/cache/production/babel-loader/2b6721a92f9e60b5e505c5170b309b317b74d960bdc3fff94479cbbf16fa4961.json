{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import*as SplashScreen from'expo-splash-screen';import React from'react';var AppLoading=function(_React$Component){_inherits(AppLoading,_React$Component);var _super=_createSuper(AppLoading);function AppLoading(props){var _this;_classCallCheck(this,AppLoading);_this=_super.call(this,props);SplashScreen.preventAutoHideAsync();return _this;}_createClass(AppLoading,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.props.autoHideSplash===undefined||this.props.autoHideSplash){if(global.__E2E__){SplashScreen.hideAsync();}else{setTimeout(function(){SplashScreen.hideAsync();},200);}}}},{key:\"render\",value:function render(){return null;}}]);return AppLoading;}(React.Component);export{AppLoading as default};","map":{"version":3,"mappings":"qgCAAA,MAAO,GAAKA,aAAY,KAAM,oBAAoB,CAClD,MAAOC,MAAK,KAAM,OAAO,CAAC,GAMLC,WAAW,uGAC9B,oBAAYC,KAAY,6CACtB,uBAAMA,KAAK,EACXH,YAAY,CAACI,oBAAoB,EAAE,CAAC,aACtC,CAAC,0FAEmB,CAClB,GAAI,IAAI,CAACD,KAAK,CAACE,cAAc,GAAKC,SAAS,EAAI,IAAI,CAACH,KAAK,CAACE,cAAc,CAAE,CAExE,GAAIE,MAAM,CAACC,OAAO,CAAE,CAClBR,YAAY,CAACS,SAAS,EAAE,EACzB,IAAM,CACLC,UAAU,CAAC,UAAK,CACdV,YAAY,CAACS,SAAS,EAAE,CAC1B,CAAC,CAAE,GAAG,CAAC,GAGb,CAAC,uCAEK,CACJ,MAAO,KAAI,CACb,CAAC,wBArBqCR,KAAK,CAACU,SAAgB,SAAzCT,UAAW","names":["SplashScreen","React","AppLoading","props","preventAutoHideAsync","autoHideSplash","undefined","global","__E2E__","hideAsync","setTimeout","Component"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo/src/launch/AppLoadingNativeWrapper.tsx"],"sourcesContent":["import * as SplashScreen from 'expo-splash-screen';\nimport React from 'react';\n\ntype Props = {\n  autoHideSplash?: boolean;\n};\n\nexport default class AppLoading extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    SplashScreen.preventAutoHideAsync();\n  }\n\n  componentWillUnmount() {\n    if (this.props.autoHideSplash === undefined || this.props.autoHideSplash) {\n      // Hide immediately in E2E tests\n      if (global.__E2E__) {\n        SplashScreen.hideAsync();\n      } else {\n        setTimeout(() => {\n          SplashScreen.hideAsync();\n        }, 200);\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}