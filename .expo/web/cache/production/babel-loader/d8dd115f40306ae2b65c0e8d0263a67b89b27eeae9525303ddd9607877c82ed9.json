{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";var Screens;try{Screens=require('react-native-screens');}catch(e){}var WebScreen=function(_React$Component){_inherits(WebScreen,_React$Component);var _super=_createSuper(WebScreen);function WebScreen(){_classCallCheck(this,WebScreen);return _super.apply(this,arguments);}_createClass(WebScreen,[{key:\"render\",value:function render(){var _this$props=this.props,active=_this$props.active,style=_this$props.style,rest=_objectWithoutProperties(_this$props,[\"active\",\"style\"]);return React.createElement(View,_extends({hidden:!active,style:[style,{display:active?'flex':'none'}]},rest));}}]);return WebScreen;}(React.Component);var AnimatedWebScreen=Animated.createAnimatedComponent(WebScreen);export var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,[\"enabled\"]);if(enabled&&Platform.OS!=='web'&&Screens&&Screens.screensEnabled()){return React.createElement(Screens.ScreenContainer,rest);}return React.createElement(View,rest);};export var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,[\"enabled\",\"active\"]);if(enabled&&Platform.OS==='web'){return React.createElement(AnimatedWebScreen,_extends({active:active},rest));}if(enabled&&Screens&&Screens.screensEnabled()){return React.createElement(Screens.Screen,_extends({active:active},rest));}return React.createElement(View,rest);};","map":{"version":3,"mappings":"i3CAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,gLAGA,GAAIC,QAAJ,CAEA,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAC,sBAAD,CAAjB,CACD,CAAC,MAAOC,CAAP,CAAU,CAEX,C,GAKKC,UAAN,4PAMW,iBAC4B,KAAKC,KAAxC,CAAQC,MAAF,aAAEA,MAAF,CAAUC,KAAV,aAAUA,KAAV,CAAoBC,8DAE1B,MACER,qBAACS,IAAD,WAEEC,MAAM,CAAE,CAACJ,MAFX,CAGEC,KAAK,CAAE,CAACA,KAAD,CAAQ,CAAEI,OAAO,CAAEL,MAAM,CAAG,MAAH,CAAY,MAA7B,CAAR,CAHT,EAIME,IAJN,EADF,CAQD,wBAjBqBR,KAAK,CAACY,SAA9B,EAoBA,GAAMC,kBAAiB,CAAGC,QAAQ,CAACC,uBAAT,CAAiCX,SAAjC,CAA1B,CAEA,MAAO,IAAMY,qBAAoB,CAAG,QAAvBA,qBAAoB,MAM3B,IALJC,QADmC,MACnCA,OADmC,CAEhCT,gDAKH,GAAIS,OAAO,EAAIC,QAAQ,CAACC,EAAT,GAAgB,KAA3B,EAAoClB,OAApC,EAA+CA,OAAO,CAACmB,cAAR,EAAnD,CAA6E,CAC3E,MAAOpB,qBAACC,OAAD,CAASoB,eAAT,CAA6Bb,IAA7B,CAAP,CACD,CAED,MAAOR,qBAACS,IAAD,CAAUD,IAAV,CAAP,CACD,CAZM,CAcP,MAAO,IAAMc,YAAW,CAAG,QAAdA,YAAW,OAQlB,IAPJL,QAD0B,OAC1BA,OAD0B,CAE1BX,MAF0B,OAE1BA,MAF0B,CAGvBE,0DAMH,GAAIS,OAAO,EAAIC,QAAQ,CAACC,EAAT,GAAgB,KAA/B,CAAsC,CACpC,MAAOnB,qBAACa,iBAAD,WAAmBP,MAAM,CAAEA,MAA3B,EAAuCE,IAAvC,EAAP,CACD,CAED,GAAIS,OAAO,EAAIhB,OAAX,EAAsBA,OAAO,CAACmB,cAAR,EAA1B,CAAoD,CAElD,MAAOpB,qBAACC,OAAD,CAASsB,MAAT,WAAgBjB,MAAM,CAAEA,MAAxB,EAAoCE,IAApC,EAAP,CACD,CAED,MAAOR,qBAACS,IAAD,CAAUD,IAAV,CAAP,CACD,CAnBM","names":["React","Screens","require","e","WebScreen","props","active","style","rest","View","hidden","display","Component","AnimatedWebScreen","Animated","createAnimatedComponent","MaybeScreenContainer","enabled","Platform","OS","screensEnabled","ScreenContainer","MaybeScreen","Screen"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/stack/lib/module/views/Screens.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, Platform, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\n// The web implementation in react-native-screens seems buggy.\n// The view doesn't become visible after coming back in some cases.\n// So we use our custom implementation.\nclass WebScreen extends React.Component<\n  ViewProps & {\n    active: number;\n    children: React.ReactNode;\n  }\n> {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!active}\n        style={[style, { display: active ? 'flex' : 'none' }]}\n        {...rest}\n      />\n    );\n  }\n}\n\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS !== 'web' && Screens && Screens.screensEnabled()) {\n    return <Screens.ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS === 'web') {\n    return <AnimatedWebScreen active={active} {...rest} />;\n  }\n\n  if (enabled && Screens && Screens.screensEnabled()) {\n    // @ts-expect-error: stackPresentation is incorrectly marked as required\n    return <Screens.Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}