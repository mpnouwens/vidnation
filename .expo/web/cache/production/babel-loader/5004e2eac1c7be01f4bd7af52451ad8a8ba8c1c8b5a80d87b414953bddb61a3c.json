{"ast":null,"code":"import*as React from'react';import CurrentRenderContext from\"./CurrentRenderContext\";export default function useCurrentRender(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors;var current=React.useContext(CurrentRenderContext);if(current&&navigation.isFocused()){current.options=descriptors[state.routes[state.index].key].options;}}","map":{"version":3,"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAEA,MAAOC,qBAAP,8BAeA,cAAe,SAASC,iBAAT,MAIH,IAHVC,MADuC,MACvCA,KADuC,CAEvCC,UAFuC,MAEvCA,UAFuC,CAGvCC,6BAEA,GAAMC,QAAO,CAAGN,KAAK,CAACO,UAAN,CAAiBN,oBAAjB,CAAhB,CAEA,GAAIK,OAAO,EAAIF,UAAU,CAACI,SAAX,EAAf,CAAuC,CACrCF,OAAO,CAACG,OAAR,CAAkBJ,WAAW,CAACF,KAAK,CAACO,MAAN,CAAaP,KAAK,CAACQ,KAAnB,EAA0BC,GAA3B,CAAX,CAA2CH,OAA7D,CACD,CACF","names":["React","CurrentRenderContext","useCurrentRender","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/core/lib/module/useCurrentRender.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type { Descriptor, NavigationHelpers } from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: {\n    [key: string]: Descriptor<ParamListBase, string, NavigationState, object>;\n  };\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}