{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";export default function useIsKeyboardShown(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isKeyboardShown=_React$useState2[0],setIsKeyboardShown=_React$useState2[1];React.useEffect(function(){var handleKeyboardShow=function handleKeyboardShow(){return setIsKeyboardShown(true);};var handleKeyboardHide=function handleKeyboardHide(){return setIsKeyboardShown(false);};if(Platform.OS==='ios'){Keyboard.addListener('keyboardWillShow',handleKeyboardShow);Keyboard.addListener('keyboardWillHide',handleKeyboardHide);}else{Keyboard.addListener('keyboardDidShow',handleKeyboardShow);Keyboard.addListener('keyboardDidHide',handleKeyboardHide);}return function(){if(Platform.OS==='ios'){Keyboard.removeListener('keyboardWillShow',handleKeyboardShow);Keyboard.removeListener('keyboardWillHide',handleKeyboardHide);}else{Keyboard.removeListener('keyboardDidShow',handleKeyboardShow);Keyboard.removeListener('keyboardDidHide',handleKeyboardHide);}};},[]);return isKeyboardShown;}","map":{"version":3,"mappings":"iEAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,2HAGA,cAAe,SAASC,mBAAT,EAA8B,qBACGD,KAAK,CAACE,QAAN,CAAe,KAAf,CAA9C,oDAAOC,eAAD,qBAAkBC,kBAAlB,qBAENJ,KAAK,CAACK,SAAN,CAAgB,UAAM,CACpB,GAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,SAASF,mBAAkB,CAAC,IAAD,CAAnD,GACA,GAAMG,mBAAkB,CAAG,QAArBA,mBAAkB,SAASH,mBAAkB,CAAC,KAAD,CAAnD,GAEA,GAAII,QAAQ,CAACC,EAAT,GAAgB,KAApB,CAA2B,CACzBC,QAAQ,CAACC,WAAT,CAAqB,kBAArB,CAAyCL,kBAAzC,EACAI,QAAQ,CAACC,WAAT,CAAqB,kBAArB,CAAyCJ,kBAAzC,EACD,CAHD,IAGO,CACLG,QAAQ,CAACC,WAAT,CAAqB,iBAArB,CAAwCL,kBAAxC,EACAI,QAAQ,CAACC,WAAT,CAAqB,iBAArB,CAAwCJ,kBAAxC,EACD,CAED,MAAO,WAAM,CACX,GAAIC,QAAQ,CAACC,EAAT,GAAgB,KAApB,CAA2B,CACzBC,QAAQ,CAACE,cAAT,CAAwB,kBAAxB,CAA4CN,kBAA5C,EACAI,QAAQ,CAACE,cAAT,CAAwB,kBAAxB,CAA4CL,kBAA5C,EACD,CAHD,IAGO,CACLG,QAAQ,CAACE,cAAT,CAAwB,iBAAxB,CAA2CN,kBAA3C,EACAI,QAAQ,CAACE,cAAT,CAAwB,iBAAxB,CAA2CL,kBAA3C,EACD,CACF,CARD,CASD,CArBD,CAqBG,EArBH,EAuBA,MAAOJ,gBAAP,CACD","names":["React","useIsKeyboardShown","useState","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","Platform","OS","Keyboard","addListener","removeListener"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/bottom-tabs/lib/module/utils/useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}