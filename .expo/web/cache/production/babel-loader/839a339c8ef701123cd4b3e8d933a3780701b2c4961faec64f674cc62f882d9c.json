{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'@unimodules/core';import ExpoSplashScreen from\"./ExpoSplashScreen\";export function preventAutoHideAsync(){return _regeneratorRuntime.async(function preventAutoHideAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(ExpoSplashScreen.preventAutoHideAsync){_context.next=2;break;}throw new UnavailabilityError('expo-splash-screen','preventAutoHideAsync');case 2:_context.next=4;return _regeneratorRuntime.awrap(ExpoSplashScreen.preventAutoHideAsync());case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function hideAsync(){return _regeneratorRuntime.async(function hideAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(ExpoSplashScreen.hideAsync){_context2.next=2;break;}throw new UnavailabilityError('expo-splash-screen','hideAsync');case 2:_context2.next=4;return _regeneratorRuntime.awrap(ExpoSplashScreen.hideAsync());case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function hide(){console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');hideAsync();}export function preventAutoHide(){console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');preventAutoHideAsync();}","map":{"version":3,"mappings":"4DAAA,OAASA,mBAAmB,KAAQ,kBAAkB,CAEtD,MAAOC,iBAAgB,0BAsBvB,MAAO,SAAeC,qBAAoB,oIACnCD,gBAAgB,CAACC,oBAAoB,8BAClC,IAAIF,oBAAmB,CAAC,oBAAoB,CAAE,sBAAsB,CAAC,yDAEhEC,gBAAgB,CAACC,oBAAoB,EAAE,6HAGtD,MAAO,SAAeC,UAAS,4HACxBF,gBAAgB,CAACE,SAAS,+BACvB,IAAIH,oBAAmB,CAAC,oBAAoB,CAAE,WAAW,CAAC,0DAErDC,gBAAgB,CAACE,SAAS,EAAE,gIAM3C,MAAM,SAAUC,KAAI,GAClBC,OAAO,CAACC,IAAI,CAAC,yEAAyE,CAAC,CACvFH,SAAS,EAAE,CACb,CAKA,MAAM,SAAUI,gBAAe,GAC7BF,OAAO,CAACC,IAAI,CACV,+FAA+F,CAChG,CACDJ,oBAAoB,EAAE,CACxB","names":["UnavailabilityError","ExpoSplashScreen","preventAutoHideAsync","hideAsync","hide","console","warn","preventAutoHide"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo-splash-screen/src/SplashScreen.ts"],"sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n/**\n * Makes the native splash screen stay visible until `SplashScreen.hideAsync()` is called.\n * It has to be called before any view is rendered.\n *\n * @example\n * ```typescript\n * // top level component\n *\n * SplashScreen.preventAutoHideAsync()\n *  .then(result => console.log(`SplashScreen.preventAutoHideAsync() succeeded: ${result}`))\n *  .catch(console.warn); // it's good to explicitly catch and inspect any error\n *\n * class App extends React.Component {\n *   ...\n *   // Hide SplashScreen once your app content is ready to be displayed.\n *   await SplashScreen.hideAsync()\n *   ...\n * }\n * ```\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}