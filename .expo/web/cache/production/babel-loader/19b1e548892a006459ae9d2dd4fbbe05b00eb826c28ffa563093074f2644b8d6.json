{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";var CSSTransitions={WebkitTransition:'webkitTransitionEnd',Transition:'transitionEnd',MozTransition:'transitionend',MSTransition:'msTransitionEnd',OTransition:'oTransitionEnd'};export default function NativeSafeAreaView(_ref){var children=_ref.children,style=_ref.style,onInsetsChange=_ref.onInsetsChange;React.useEffect(function(){if(typeof document==='undefined'){return;}var element=createContextElement();document.body.appendChild(element);var onEnd=function onEnd(){var _window$getComputedSt=window.getComputedStyle(element),paddingTop=_window$getComputedSt.paddingTop,paddingBottom=_window$getComputedSt.paddingBottom,paddingLeft=_window$getComputedSt.paddingLeft,paddingRight=_window$getComputedSt.paddingRight;var insets={top:paddingTop?parseInt(paddingTop,10):0,bottom:paddingBottom?parseInt(paddingBottom,10):0,left:paddingLeft?parseInt(paddingLeft,10):0,right:paddingRight?parseInt(paddingRight,10):0};var frame={x:0,y:0,width:document.documentElement.offsetWidth,height:document.documentElement.offsetHeight};onInsetsChange({nativeEvent:{insets:insets,frame:frame}});};element.addEventListener(getSupportedTransitionEvent(),onEnd);onEnd();return function(){document.body.removeChild(element);element.removeEventListener(getSupportedTransitionEvent(),onEnd);};},[onInsetsChange]);return React.createElement(View,{style:style},children);}var _supportedTransitionEvent=null;function getSupportedTransitionEvent(){if(_supportedTransitionEvent!==null){return _supportedTransitionEvent;}var element=document.createElement('invalidtype');_supportedTransitionEvent=CSSTransitions.Transition;for(var key in CSSTransitions){if(element.style[key]!==undefined){_supportedTransitionEvent=CSSTransitions[key];break;}}return _supportedTransitionEvent;}var _supportedEnv=null;function getSupportedEnv(){if(_supportedEnv!==null){return _supportedEnv;}var _window=window,CSS=_window.CSS;if(CSS&&CSS.supports&&CSS.supports('top: constant(safe-area-inset-top)')){_supportedEnv='constant';}else{_supportedEnv='env';}return _supportedEnv;}function getInset(side){return\"\".concat(getSupportedEnv(),\"(safe-area-inset-\").concat(side,\")\");}function createContextElement(){var element=document.createElement('div');var style=element.style;style.position='fixed';style.left='0';style.top='0';style.width='0';style.height='0';style.zIndex='-1';style.overflow='hidden';style.visibility='hidden';style.transitionDuration='0.05s';style.transitionProperty='padding';style.transitionDelay='0s';style.paddingTop=getInset('top');style.paddingBottom=getInset('bottom');style.paddingLeft=getInset('left');style.paddingRight=getInset('right');return element;}","map":{"version":3,"mappings":"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","names":["React","CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaView","children","style","onInsetsChange","useEffect","document","element","createContextElement","body","appendChild","onEnd","window","getComputedStyle","paddingTop","paddingBottom","paddingLeft","paddingRight","insets","top","parseInt","bottom","left","right","frame","x","y","width","documentElement","offsetWidth","height","offsetHeight","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","View","_supportedTransitionEvent","createElement","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/react-native-safe-area-context/lib/module/NativeSafeAreaProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport { NativeSafeAreaProviderProps } from './SafeArea.types';\n\n/**\n * TODO:\n * Currently insets and frame are based on the window and are not\n * relative to the provider view. This is inconsistent with iOS and Android.\n * However in most cases if the provider view covers the screen this is not\n * an issue.\n */\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport default function NativeSafeAreaView({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaProviderProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const {\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n      } = window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets, frame } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent !== null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}