{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';import BaseRouter from\"./BaseRouter\";var TYPE_ROUTE='route';export var TabActions={jumpTo:function jumpTo(name,params){return{type:'JUMP_TO',payload:{name:name,params:params}};}};var getRouteHistory=function getRouteHistory(routes,index,backBehavior,initialRouteName){var history=[{type:TYPE_ROUTE,key:routes[index].key}];var initialRouteIndex;switch(backBehavior){case'order':for(var i=index;i>0;i--){history.unshift({type:TYPE_ROUTE,key:routes[i-1].key});}break;case'initialRoute':initialRouteIndex=routes.findIndex(function(route){return route.name===initialRouteName;});initialRouteIndex=initialRouteIndex===-1?0:initialRouteIndex;if(initialRouteIndex!==index){history.unshift({type:TYPE_ROUTE,key:routes[initialRouteIndex].key});}break;case'history':break;}return history;};var changeIndex=function changeIndex(state,index,backBehavior,initialRouteName){var history;if(backBehavior==='history'){var currentKey=state.routes[index].key;history=state.history.filter(function(it){return it.type==='route'?it.key!==currentKey:false;}).concat({type:TYPE_ROUTE,key:currentKey});}else{history=getRouteHistory(state.routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{index:index,history:history});};export default function TabRouter(_ref){var initialRouteName=_ref.initialRouteName,_ref$backBehavior=_ref.backBehavior,backBehavior=_ref$backBehavior===void 0?'history':_ref$backBehavior;var router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'tab',getInitialState:function getInitialState(_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var index=initialRouteName!==undefined&&routeNames.includes(initialRouteName)?routeNames.indexOf(initialRouteName):0;var routes=routeNames.map(function(name){return{name:name,key:\"\".concat(name,\"-\").concat(nanoid()),params:routeParamList[name]};});var history=getRouteHistory(routes,index,backBehavior,initialRouteName);return{stale:false,type:'tab',key:\"tab-\".concat(nanoid()),index:index,routeNames:routeNames,history:history,routes:routes};},getRehydratedState:function getRehydratedState(partialState,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList;var _state$routes,_state$index,_state$history$filter,_state$history;var state=partialState;if(state.stale===false){return state;}var routes=routeNames.map(function(name){var route=state.routes.find(function(r){return r.name===name;});return _objectSpread(_objectSpread({},route),{},{name:name,key:route&&route.name===name&&route.key?route.key:\"\".concat(name,\"-\").concat(nanoid()),params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),route?route.params:undefined):route?route.params:undefined});});var index=Math.min(Math.max(routeNames.indexOf((_state$routes=state.routes[(_state$index=state===null||state===void 0?void 0:state.index)!==null&&_state$index!==void 0?_state$index:0])===null||_state$routes===void 0?void 0:_state$routes.name),0),routes.length-1);var history=(_state$history$filter=(_state$history=state.history)===null||_state$history===void 0?void 0:_state$history.filter(function(it){return routes.find(function(r){return r.key===it.key;});}))!==null&&_state$history$filter!==void 0?_state$history$filter:[];return changeIndex({stale:false,type:'tab',key:\"tab-\".concat(nanoid()),index:index,routeNames:routeNames,history:history,routes:routes},index,backBehavior,initialRouteName);},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref4){var routeNames=_ref4.routeNames,routeParamList=_ref4.routeParamList;var routes=routeNames.map(function(name){return state.routes.find(function(r){return r.name===name;})||{name:name,key:\"\".concat(name,\"-\").concat(nanoid()),params:routeParamList[name]};});var index=Math.max(0,routeNames.indexOf(state.routes[state.index].name));var history=state.history.filter(function(it){return it.type!=='route'||routes.find(function(r){return r.key===it.key;});});if(!history.length){history=getRouteHistory(routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{history:history,routeNames:routeNames,routes:routes,index:index});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return changeIndex(state,index,backBehavior,initialRouteName);},getStateForAction:function getStateForAction(state,action){switch(action.type){case'JUMP_TO':case'NAVIGATE':{var index=-1;if(action.type==='NAVIGATE'&&action.payload.key){index=state.routes.findIndex(function(route){return route.key===action.payload.key;});}else{index=state.routes.findIndex(function(route){return route.name===action.payload.name;});}if(index===-1){return null;}return changeIndex(_objectSpread(_objectSpread({},state),{},{routes:action.payload.params!==undefined?state.routes.map(function(route,i){return i===index?_objectSpread(_objectSpread({},route),{},{params:_objectSpread(_objectSpread({},route.params),action.payload.params)}):route;}):state.routes}),index,backBehavior,initialRouteName);}case'GO_BACK':{if(state.history.length===1){return null;}var previousKey=state.history[state.history.length-2].key;var _index=state.routes.findIndex(function(route){return route.key===previousKey;});if(_index===-1){return null;}return _objectSpread(_objectSpread({},state),{},{history:state.history.slice(0,-1),index:_index});}default:return BaseRouter.getStateForAction(state,action);}},shouldActionChangeFocus:function shouldActionChangeFocus(action){return action.type==='NAVIGATE';},actionCreators:TabActions});return router;}","map":{"version":3,"mappings":"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","names":["nanoid","BaseRouter","TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","getRouteHistory","routes","index","backBehavior","initialRouteName","history","key","initialRouteIndex","i","unshift","findIndex","route","changeIndex","state","currentKey","filter","it","concat","TabRouter","router","getInitialState","routeNames","routeParamList","undefined","includes","indexOf","map","stale","getRehydratedState","partialState","find","r","Math","min","max","_state$routes","length","_state$history","getStateForRouteNamesChange","getStateForRouteFocus","getStateForAction","action","previousKey","slice","shouldActionChangeFocus","actionCreators"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/routers/lib/module/TabRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nimport type {\n  NavigationState,\n  PartialState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n  ParamListBase,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior = 'initialRoute' | 'order' | 'history' | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState = Omit<NavigationState, 'history'> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (initialRouteIndex !== index) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'history',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (state as PartialState<TabNavigationState>).routes.find(\n          (r) => r.name === name\n        );\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find((r) => r.name === name) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes:\n                action.payload.params !== undefined\n                  ? state.routes.map((route, i) =>\n                      i === index\n                        ? {\n                            ...route,\n                            params: {\n                              ...route.params,\n                              ...action.payload.params,\n                            },\n                          }\n                        : route\n                    )\n                  : state.routes,\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}