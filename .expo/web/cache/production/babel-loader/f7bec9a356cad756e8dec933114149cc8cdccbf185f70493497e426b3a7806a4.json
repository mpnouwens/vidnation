{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';import Platform from\"react-native-web/dist/exports/Platform\";import{getRecoveryPropsToSave}from\"./ErroRecoveryStore\";import ExpoErrorRecovery from\"./ExpoErrorRecovery\";if(Platform.OS!=='web'){var globalHandler=ErrorUtils.getGlobalHandler();ErrorUtils.setGlobalHandler(function _callee(error,isFatal){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!ExpoErrorRecovery.saveRecoveryProps){_context.next=3;break;}_context.next=3;return _regeneratorRuntime.awrap(ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave()));case 3:globalHandler(error,isFatal);case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);});}else if(Platform.OS==='web'&&canUseDOM){window.addEventListener('error',function(){ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());});}","map":{"version":3,"mappings":"4DAAA,OAASA,SAAS,KAAQ,+BAA+B,CAAC,6DAG1D,OAASC,sBAAsB,2BAC/B,MAAOC,kBAAiB,2BAExB,GAAIC,QAAQ,CAACC,EAAE,GAAK,KAAK,CAAE,CACzB,GAAMC,cAAa,CAAGC,UAAU,CAACC,gBAAgB,EAAE,CAGnDD,UAAU,CAACE,gBAAgB,CAAC,iBAAOC,KAAK,CAAEC,OAAO,uHAC3CR,iBAAiB,CAACS,iBAAiB,0EAC/BT,iBAAiB,CAACS,iBAAiB,CAACV,sBAAsB,EAAE,CAAC,SAErEI,aAAa,CAACI,KAAK,CAAEC,OAAO,CAAC,CAAC,qEAC/B,CAAC,EACH,IAAM,IAAIP,QAAQ,CAACC,EAAE,GAAK,KAAK,EAAIJ,SAAS,CAAE,CAC7CY,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAE,UAAK,CACpCX,iBAAiB,CAACS,iBAAiB,CAACV,sBAAsB,EAAE,CAAC,CAC/D,CAAC,CAAC","names":["canUseDOM","getRecoveryPropsToSave","ExpoErrorRecovery","Platform","OS","globalHandler","ErrorUtils","getGlobalHandler","setGlobalHandler","error","isFatal","saveRecoveryProps","window","addEventListener"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo-error-recovery/src/ErrorRecovery.fx.ts"],"sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Platform } from 'react-native';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && canUseDOM) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}