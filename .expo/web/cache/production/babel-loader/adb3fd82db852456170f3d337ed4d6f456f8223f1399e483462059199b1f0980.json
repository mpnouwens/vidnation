{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import createMultiStyleIconSet from\"./createMultiStyleIconSet\";export var FA5Style={regular:'regular',light:'light',solid:'solid',brand:'brand'};export function createFA5iconSet(glyphMap){var metadata=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var fonts=arguments.length>2?arguments[2]:undefined;var pro=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var metadataKeys=Object.keys(metadata);var fontFamily=\"FontAwesome5\"+(pro?'Pro':'Free');function fallbackFamily(glyph){for(var i=0;i<metadataKeys.length;i+=1){var family=metadataKeys[i];if(metadata[family].indexOf(glyph)!==-1){return family==='brands'?'brand':family;}}return'regular';}function glyphValidator(glyph,style){var family=style==='brand'?'brands':style;if(metadataKeys.indexOf(family)===-1)return false;return metadata[family].indexOf(glyph)!==-1;}function createFontAwesomeStyle(styleName,fontWeight){var family=arguments.length>2&&arguments[2]!==undefined?arguments[2]:fontFamily;var fontFile=fonts[styleName];return{fontFamily:family+\"-\"+styleName,fontFile:fontFile,fontStyle:Platform.select({ios:{fontWeight:fontWeight},default:{}}),glyphMap:glyphMap};}var brandIcons=createFontAwesomeStyle('Brand','400');var lightIcons=createFontAwesomeStyle('Light','100');var regularIcons=createFontAwesomeStyle('Regular','400');var solidIcons=createFontAwesomeStyle('Solid','700');var Icon=createMultiStyleIconSet({brand:brandIcons,light:lightIcons,regular:regularIcons,solid:solidIcons},{defaultStyle:'regular',fallbackFamily:fallbackFamily,glyphValidator:glyphValidator});return Icon;}","map":{"version":3,"mappings":"6DACA,MAAOA,wBAAuB,iCAE9B,MAAO,IAAMC,SAAQ,CAAG,CACtBC,OAAO,CAAE,SAAS,CAClBC,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,QACR,CAED,MAAM,SAAUC,iBAAgB,CAACC,QAAQ,CAAmC,IAAjCC,SAAQ,2DAAG,EAAE,IAAEC,MAAK,8CAAEC,IAAG,2DAAG,KAAK,CAC1E,GAAMC,aAAY,CAAGC,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC,CAC1C,GAAMM,WAAU,iBAAkBJ,GAAG,CAAG,KAAK,CAAG,MAAM,CAAE,CAExD,QAASK,eAAc,CAACC,KAAK,EAC3B,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,YAAY,CAACO,MAAM,CAAED,CAAC,EAAI,CAAC,CAAE,CAC/C,GAAME,OAAM,CAAGR,YAAY,CAACM,CAAC,CAAC,CAC9B,GAAIT,QAAQ,CAACW,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAK,CAAC,CAAC,CAAE,CAC1C,MAAOG,OAAM,GAAK,QAAQ,CAAG,OAAO,CAAGA,MAAM,GAIjD,MAAO,SAAS,CAClB,CAEA,QAASE,eAAc,CAACL,KAAK,CAAEM,KAAK,EAClC,GAAMH,OAAM,CAAGG,KAAK,GAAK,OAAO,CAAG,QAAQ,CAAGA,KAAK,CACnD,GAAIX,YAAY,CAACS,OAAO,CAACD,MAAM,CAAC,GAAK,CAAC,CAAC,CAAE,MAAO,MAAK,CACrD,MAAOX,SAAQ,CAACW,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAK,CAAC,CAAC,CAC/C,CAEA,QAASO,uBAAsB,CAACC,SAAS,CAAEC,UAAU,CAAqB,IAAnBN,OAAM,2DAAGL,UAAU,CACxE,GAAIY,SAAQ,CAAGjB,KAAK,CAACe,SAAS,CAAC,CAE/B,MAAO,CACLV,UAAU,CAAKK,MAAM,KAAIK,SAAW,CACpCE,QAAQ,CAARA,QAAQ,CACRC,SAAS,CAAEC,QAAQ,CAACC,MAAM,CAAC,CACzBC,GAAG,CAAE,CACHL,UAAU,CAAVA,WACD,CACDM,OAAO,CAAE,GACV,CAAC,CACFxB,QAAQ,CAARA,SACD,CACH,CAEA,GAAMyB,WAAU,CAAGT,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,GAAMU,WAAU,CAAGV,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,GAAMW,aAAY,CAAGX,sBAAsB,CAAC,SAAS,CAAE,KAAK,CAAC,CAC7D,GAAMY,WAAU,CAAGZ,sBAAsB,CAAC,OAAO,CAAE,KAAK,CAAC,CACzD,GAAMa,KAAI,CAAGpC,uBAAuB,CAClC,CACEK,KAAK,CAAE2B,UAAU,CACjB7B,KAAK,CAAE8B,UAAU,CACjB/B,OAAO,CAAEgC,YAAY,CACrB9B,KAAK,CAAE+B,WACR,CACD,CACEE,YAAY,CAAE,SAAS,CACvBtB,cAAc,CAAdA,cAAc,CACdM,cAAc,CAAdA,eACD,CACF,CAED,MAAOe,KAAI,CACb","names":["createMultiStyleIconSet","FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","fonts","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","styleName","fontWeight","fontFile","fontStyle","Platform","select","ios","default","brandIcons","lightIcons","regularIcons","solidIcons","Icon","defaultStyle"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@expo/vector-icons/src/createIconSetFromFontAwesome5.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport createMultiStyleIconSet from './createMultiStyleIconSet';\n\nexport const FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n};\n\nexport function createFA5iconSet(glyphMap, metadata = {}, fonts, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(styleName, fontWeight, family = fontFamily) {\n    let fontFile = fonts[styleName];\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle('Brand', '400');\n  const lightIcons = createFontAwesomeStyle('Light', '100');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '700');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    },\n  );\n\n  return Icon;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}