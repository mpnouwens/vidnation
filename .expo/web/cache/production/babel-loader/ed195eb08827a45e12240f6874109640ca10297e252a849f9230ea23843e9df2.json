{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{useTheme}from'@react-navigation/native';export default function Badge(_ref){var _ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,_ref$size=_ref.size,size=_ref$size===void 0?18:_ref$size,children=_ref.children,style=_ref.style,rest=_objectWithoutProperties(_ref,[\"visible\",\"size\",\"children\",\"style\"]);var _React$useState=React.useState(function(){return new Animated.Value(visible?1:0);}),_React$useState2=_slicedToArray(_React$useState,1),opacity=_React$useState2[0];var _React$useState3=React.useState(visible?true:false),_React$useState4=_slicedToArray(_React$useState3,2),rendered=_React$useState4[0],setRendered=_React$useState4[1];var theme=useTheme();React.useEffect(function(){if(!rendered){return;}Animated.timing(opacity,{toValue:visible?1:0,duration:150,useNativeDriver:true}).start(function(_ref2){var finished=_ref2.finished;if(finished&&!visible){setRendered(false);}});},[opacity,rendered,visible]);if(visible&&!rendered){setRendered(true);}if(!visible&&!rendered){return null;}var _ref3=StyleSheet.flatten(style)||{},_ref3$backgroundColor=_ref3.backgroundColor,backgroundColor=_ref3$backgroundColor===void 0?theme.colors.notification:_ref3$backgroundColor,restStyle=_objectWithoutProperties(_ref3,[\"backgroundColor\"]);var textColor=color(backgroundColor).isLight()?'black':'white';var borderRadius=size/2;var fontSize=Math.floor(size*3/4);return React.createElement(Animated.Text,_extends({numberOfLines:1,style:[{opacity:opacity,transform:[{scale:opacity.interpolate({inputRange:[0,1],outputRange:[0.5,1]})}],backgroundColor:backgroundColor,color:textColor,fontSize:fontSize,lineHeight:size-1,height:size,minWidth:size,borderRadius:borderRadius},styles.container,restStyle]},rest),children);}var styles=StyleSheet.create({container:{alignSelf:'flex-end',textAlign:'center',paddingHorizontal:4,overflow:'hidden'}});","map":{"version":3,"mappings":"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","names":["React","color","useTheme","Badge","visible","size","children","style","rest","useState","Animated","Value","opacity","rendered","setRendered","theme","useEffect","timing","toValue","duration","useNativeDriver","start","finished","StyleSheet","flatten","backgroundColor","colors","notification","restStyle","textColor","isLight","borderRadius","fontSize","Math","floor","Text","numberOfLines","transform","scale","interpolate","inputRange","outputRange","lineHeight","height","minWidth","styles","container","create","alignSelf","textAlign","paddingHorizontal","overflow"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/bottom-tabs/lib/module/views/Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport { useTheme } from '@react-navigation/native';\n\ntype Props = {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  /**\n   * Style object for the tab bar container.\n   */\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function Badge({\n  visible = true,\n  size = 18,\n  children,\n  style,\n  ...rest\n}: Props) {\n  const [opacity] = React.useState(() => new Animated.Value(visible ? 1 : 0));\n  const [rendered, setRendered] = React.useState(visible ? true : false);\n\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (!rendered) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished && !visible) {\n        setRendered(false);\n      }\n    });\n  }, [opacity, rendered, visible]);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  if (!visible && !rendered) {\n    return null;\n  }\n\n  // @ts-expect-error: backgroundColor definitely exists\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor = color(backgroundColor).isLight() ? 'black' : 'white';\n\n  const borderRadius = size / 2;\n  const fontSize = Math.floor((size * 3) / 4);\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          transform: [\n            {\n              scale: opacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0.5, 1],\n              }),\n            },\n          ],\n          backgroundColor,\n          color: textColor,\n          fontSize,\n          lineHeight: size - 1,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}