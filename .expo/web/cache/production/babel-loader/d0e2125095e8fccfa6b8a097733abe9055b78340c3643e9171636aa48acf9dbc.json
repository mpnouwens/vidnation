{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import invariant from'invariant';import NativeEventEmitter from\"react-native-web/dist/exports/NativeEventEmitter\";import Platform from\"react-native-web/dist/exports/Platform\";var nativeEmitterSubscriptionKey='@@nativeEmitterSubscription@@';export var EventEmitter=function(){function EventEmitter(nativeModule){_classCallCheck(this,EventEmitter);this._listenerCount=0;this._nativeModule=nativeModule;this._eventEmitter=new NativeEventEmitter(nativeModule);}_createClass(EventEmitter,[{key:\"addListener\",value:function addListener(eventName,listener){var _this=this,_subscription;if(!this._listenerCount&&Platform.OS!=='ios'&&this._nativeModule.startObserving){this._nativeModule.startObserving();}this._listenerCount++;var nativeEmitterSubscription=this._eventEmitter.addListener(eventName,listener);var subscription=(_subscription={},_defineProperty(_subscription,nativeEmitterSubscriptionKey,nativeEmitterSubscription),_defineProperty(_subscription,\"remove\",function remove(){_this.removeSubscription(subscription);}),_subscription);return subscription;}},{key:\"removeAllListeners\",value:function removeAllListeners(eventName){var removedListenerCount=this._eventEmitter.listeners(eventName).length;this._eventEmitter.removeAllListeners(eventName);this._listenerCount-=removedListenerCount;invariant(this._listenerCount>=0,\"EventEmitter must have a non-negative number of listeners\");if(!this._listenerCount&&Platform.OS!=='ios'&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}},{key:\"removeSubscription\",value:function removeSubscription(subscription){var nativeEmitterSubscription=subscription[nativeEmitterSubscriptionKey];if(!nativeEmitterSubscription){return;}this._eventEmitter.removeSubscription(nativeEmitterSubscription);this._listenerCount--;delete subscription[nativeEmitterSubscriptionKey];subscription.remove=function(){};if(!this._listenerCount&&Platform.OS!=='ios'&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}},{key:\"emit\",value:function emit(eventName){var _this$_eventEmitter;for(var _len=arguments.length,params=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){params[_key-1]=arguments[_key];}(_this$_eventEmitter=this._eventEmitter).emit.apply(_this$_eventEmitter,[eventName].concat(params));}}]);return EventEmitter;}();","map":{"version":3,"mappings":"mMAAA,MAAOA,UAAS,KAAM,WAAW,CAAC,8IAGlC,GAAMC,6BAA4B,CAAG,+BAA+B,CAapE,UAAaC,aAAY,YAKvB,sBAAYC,YAA0B,qCAJtC,mBAAc,CAAG,CAAC,CAKhB,IAAI,CAACC,aAAa,CAAGD,YAAY,CACjC,IAAI,CAACE,aAAa,CAAG,GAAIC,mBAAkB,CAACH,YAAmB,CAAC,CAClE,CAAC,yEAEcI,SAAiB,CAAEC,QAA4B,+BAC5D,GAAI,CAAC,IAAI,CAACC,cAAc,EAAIC,QAAQ,CAACC,EAAE,GAAK,KAAK,EAAI,IAAI,CAACP,aAAa,CAACQ,cAAc,CAAE,CACtF,IAAI,CAACR,aAAa,CAACQ,cAAc,EAAE,EAGrC,IAAI,CAACH,cAAc,EAAE,CACrB,GAAMI,0BAAyB,CAAG,IAAI,CAACR,aAAa,CAACS,WAAW,CAACP,SAAS,CAAEC,QAAQ,CAAC,CACrF,GAAMO,aAAY,iDACfd,4BAA4B,CAAGY,yBAAyB,yCACjD,iBAAK,CACX,KAAI,CAACG,kBAAkB,CAACD,YAAY,CAAC,CACvC,CAAC,gBACF,CACD,MAAOA,aAAY,CACrB,CAAC,8DAEkBR,SAAiB,EAClC,GAAMU,qBAAoB,CAAG,IAAI,CAACZ,aAAa,CAACa,SAAS,CAACX,SAAS,CAAC,CAACY,MAAM,CAC3E,IAAI,CAACd,aAAa,CAACe,kBAAkB,CAACb,SAAS,CAAC,CAChD,IAAI,CAACE,cAAc,EAAIQ,oBAAoB,CAC3CjB,SAAS,CACP,IAAI,CAACS,cAAc,EAAI,CAAC,6DAEzB,CAED,GAAI,CAAC,IAAI,CAACA,cAAc,EAAIC,QAAQ,CAACC,EAAE,GAAK,KAAK,EAAI,IAAI,CAACP,aAAa,CAACiB,aAAa,CAAE,CACrF,IAAI,CAACjB,aAAa,CAACiB,aAAa,EAAE,EAEtC,CAAC,8DAEkBN,YAA0B,EAC3C,GAAMF,0BAAyB,CAAGE,YAAY,CAACd,4BAA4B,CAAC,CAC5E,GAAI,CAACY,yBAAyB,CAAE,CAC9B,QAGF,IAAI,CAACR,aAAa,CAACW,kBAAkB,CAACH,yBAA0B,CAAC,CACjE,IAAI,CAACJ,cAAc,EAAE,CAIrB,MAAOM,aAAY,CAACd,4BAA4B,CAAC,CAGjDc,YAAY,CAACO,MAAM,CAAG,UAAK,CAAE,CAAC,CAE9B,GAAI,CAAC,IAAI,CAACb,cAAc,EAAIC,QAAQ,CAACC,EAAE,GAAK,KAAK,EAAI,IAAI,CAACP,aAAa,CAACiB,aAAa,CAAE,CACrF,IAAI,CAACjB,aAAa,CAACiB,aAAa,EAAE,EAEtC,CAAC,kCAEId,SAAiB,CAAkB,uDAAbgB,MAAa,qDAAbA,MAAa,0BACtC,yBAAI,CAAClB,aAAa,EAACmB,IAAI,4BAACjB,SAAS,SAAKgB,MAAM,EAAC,CAC/C,CAAC","names":["invariant","nativeEmitterSubscriptionKey","EventEmitter","nativeModule","_nativeModule","_eventEmitter","NativeEventEmitter","eventName","listener","_listenerCount","Platform","OS","startObserving","nativeEmitterSubscription","addListener","subscription","removeSubscription","removedListenerCount","listeners","length","removeAllListeners","stopObserving","remove","params","emit"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@unimodules/react-native-adapter/src/EventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  startObserving?: () => void;\n  stopObserving?: () => void;\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n};\n\nexport type Subscription = {\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    const removedListenerCount = this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    this._eventEmitter.removeSubscription(nativeEmitterSubscription!);\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}