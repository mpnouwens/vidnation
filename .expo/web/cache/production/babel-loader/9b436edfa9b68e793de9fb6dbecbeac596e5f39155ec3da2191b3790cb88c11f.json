{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import{nanoid}from'nanoid/non-secure';import{SingleNavigatorContext}from\"./EnsureSingleNavigator\";export default function useRegisterNavigator(){var _React$useState=React.useState(function(){return nanoid();}),_React$useState2=_slicedToArray(_React$useState,1),key=_React$useState2[0];var container=React.useContext(SingleNavigatorContext);if(container===undefined){throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\");}React.useEffect(function(){var register=container.register,unregister=container.unregister;register(key);return function(){return unregister(key);};},[container,key]);return key;}","map":{"version":3,"mappings":"iEAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,OAASC,sBAAT,+BAMA,cAAe,SAASC,qBAAT,EAAgC,qBAC/BH,KAAK,CAACI,QAAN,CAAe,iBAAMH,OAAM,EAA3B,GAAd,oDAAOI,GAAD,qBACN,GAAMC,UAAS,CAAGN,KAAK,CAACO,UAAN,CAAiBL,sBAAjB,CAAlB,CAEA,GAAII,SAAS,GAAKE,SAAlB,CAA6B,CAC3B,KAAM,IAAIC,MAAJ,CACJ,wFADI,CAAN,CAGD,CAEDT,KAAK,CAACU,SAAN,CAAgB,UAAM,IACZC,SAAF,CAA2BL,SAAjC,CAAQK,QAAF,CAAYC,WAAeN,SAAjC,CAAkBM,WAElBD,QAAQ,CAACN,GAAD,CAAR,CAEA,MAAO,kBAAMO,WAAU,CAACP,GAAD,CAAvB,GACD,CAND,CAMG,CAACC,SAAD,CAAYD,GAAZ,CANH,EAQA,MAAOA,IAAP,CACD","names":["React","nanoid","SingleNavigatorContext","useRegisterNavigator","useState","key","container","useContext","undefined","Error","useEffect","register","unregister"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/core/lib/module/useRegisterNavigator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}