{"ast":null,"code":"function murmurhash2_32_gc(str,seed){var l=str.length,h=seed^l,i=0,k;while(l>=4){k=str.charCodeAt(i)&0xff|(str.charCodeAt(++i)&0xff)<<8|(str.charCodeAt(++i)&0xff)<<16|(str.charCodeAt(++i)&0xff)<<24;k=(k&0xffff)*0x5bd1e995+(((k>>>16)*0x5bd1e995&0xffff)<<16);k^=k>>>24;k=(k&0xffff)*0x5bd1e995+(((k>>>16)*0x5bd1e995&0xffff)<<16);h=(h&0xffff)*0x5bd1e995+(((h>>>16)*0x5bd1e995&0xffff)<<16)^k;l-=4;++i;}switch(l){case 3:h^=(str.charCodeAt(i+2)&0xff)<<16;case 2:h^=(str.charCodeAt(i+1)&0xff)<<8;case 1:h^=str.charCodeAt(i)&0xff;h=(h&0xffff)*0x5bd1e995+(((h>>>16)*0x5bd1e995&0xffff)<<16);}h^=h>>>13;h=(h&0xffff)*0x5bd1e995+(((h>>>16)*0x5bd1e995&0xffff)<<16);h^=h>>>15;return h>>>0;}var hash=function hash(str){return murmurhash2_32_gc(str,1).toString(36);};export default hash;","map":{"version":3,"names":["murmurhash2_32_gc","str","seed","l","length","h","i","k","charCodeAt","hash","toString"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/react-native-web/dist/vendor/hash/index.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * JS Implementation of MurmurHash2\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\nfunction murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\n\nvar hash = function hash(str) {\n  return murmurhash2_32_gc(str, 1).toString(36);\n};\n\nexport default hash;"],"mappings":"AAcA,QAASA,kBAAiB,CAACC,GAAG,CAAEC,IAAI,CAAE,CACpC,GAAIC,EAAC,CAAGF,GAAG,CAACG,MAAM,CACdC,CAAC,CAAGH,IAAI,CAAGC,CAAC,CACZG,CAAC,CAAG,CAAC,CACLC,CAAC,CAEL,MAAOJ,CAAC,EAAI,CAAC,CAAE,CACbI,CAAC,CAAGN,GAAG,CAACO,UAAU,CAACF,CAAC,CAAC,CAAG,IAAI,CAAG,CAACL,GAAG,CAACO,UAAU,CAAC,EAAEF,CAAC,CAAC,CAAG,IAAI,GAAK,CAAC,CAAG,CAACL,GAAG,CAACO,UAAU,CAAC,EAAEF,CAAC,CAAC,CAAG,IAAI,GAAK,EAAE,CAAG,CAACL,GAAG,CAACO,UAAU,CAAC,EAAEF,CAAC,CAAC,CAAG,IAAI,GAAK,EAAE,CAC1IC,CAAC,CAAG,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAAC,CAACA,CAAC,GAAK,EAAE,EAAI,UAAU,CAAG,MAAM,GAAK,EAAE,CAAC,CAC1EA,CAAC,EAAIA,CAAC,GAAK,EAAE,CACbA,CAAC,CAAG,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAAC,CAACA,CAAC,GAAK,EAAE,EAAI,UAAU,CAAG,MAAM,GAAK,EAAE,CAAC,CAC1EF,CAAC,CAAG,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAAC,CAACA,CAAC,GAAK,EAAE,EAAI,UAAU,CAAG,MAAM,GAAK,EAAE,CAAC,CAAGE,CAAC,CAC9EJ,CAAC,EAAI,CAAC,CACN,EAAEG,CAAC,CACL,CAEA,OAAQH,CAAC,EACP,IAAK,EAAC,CACJE,CAAC,EAAI,CAACJ,GAAG,CAACO,UAAU,CAACF,CAAC,CAAG,CAAC,CAAC,CAAG,IAAI,GAAK,EAAE,CAE3C,IAAK,EAAC,CACJD,CAAC,EAAI,CAACJ,GAAG,CAACO,UAAU,CAACF,CAAC,CAAG,CAAC,CAAC,CAAG,IAAI,GAAK,CAAC,CAE1C,IAAK,EAAC,CACJD,CAAC,EAAIJ,GAAG,CAACO,UAAU,CAACF,CAAC,CAAC,CAAG,IAAI,CAC7BD,CAAC,CAAG,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAAC,CAACA,CAAC,GAAK,EAAE,EAAI,UAAU,CAAG,MAAM,GAAK,EAAE,CAAC,CAAC,CAG/EA,CAAC,EAAIA,CAAC,GAAK,EAAE,CACbA,CAAC,CAAG,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAAC,CAACA,CAAC,GAAK,EAAE,EAAI,UAAU,CAAG,MAAM,GAAK,EAAE,CAAC,CAC1EA,CAAC,EAAIA,CAAC,GAAK,EAAE,CACb,MAAOA,EAAC,GAAK,CAAC,CAChB,CAEA,GAAII,KAAI,CAAG,QAASA,KAAI,CAACR,GAAG,CAAE,CAC5B,MAAOD,kBAAiB,CAACC,GAAG,CAAE,CAAC,CAAC,CAACS,QAAQ,CAAC,EAAE,CAAC,CAC/C,CAAC,CAED,cAAeD,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}