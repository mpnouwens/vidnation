{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{useNavigationBuilder,createNavigatorFactory,StackRouter,StackActions}from'@react-navigation/native';import StackView from\"../views/Stack/StackView\";function StackNavigator(_ref){var initialRouteName=_ref.initialRouteName,children=_ref.children,screenOptions=_ref.screenOptions,rest=_objectWithoutProperties(_ref,[\"initialRouteName\",\"children\",\"screenOptions\"]);var defaultOptions={gestureEnabled:Platform.OS==='ios',animationEnabled:Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos'};var _useNavigationBuilder=useNavigationBuilder(StackRouter,{initialRouteName:initialRouteName,children:children,screenOptions:typeof screenOptions==='function'?function(){return _objectSpread(_objectSpread({},defaultOptions),screenOptions.apply(void 0,arguments));}:_objectSpread(_objectSpread({},defaultOptions),screenOptions)}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation;React.useEffect(function(){var _navigation$addListen;return(_navigation$addListen=navigation.addListener)===null||_navigation$addListen===void 0?void 0:_navigation$addListen.call(navigation,'tabPress',function(e){var isFocused=navigation.isFocused();requestAnimationFrame(function(){if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.popToTop()),{},{target:state.key}));}});});},[navigation,state.index,state.key]);return React.createElement(StackView,_extends({},rest,{state:state,descriptors:descriptors,navigation:navigation}));}export default createNavigatorFactory(StackNavigator);","map":{"version":3,"mappings":"orCAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,8DAEA,OACEC,oBADF,CAEEC,sBAFF,CAKEC,WALF,CAQEC,YARF,KASO,0BATP,CAUA,MAAOC,UAAP,gCAWA,QAASC,eAAT,MAKU,IAJRC,iBADsB,MACtBA,gBADsB,CAEtBC,QAFsB,MAEtBA,QAFsB,CAGtBC,aAHsB,MAGtBA,aAHsB,CAInBC,oFAEH,GAAMC,eAAc,CAAG,CACrBC,cAAc,CAAEC,QAAQ,CAACC,EAAT,GAAgB,KADX,CAErBC,gBAAgB,CACdF,QAAQ,CAACC,EAAT,GAAgB,KAAhB,EACAD,QAAQ,CAACC,EAAT,GAAgB,SADhB,EAEAD,QAAQ,CAACC,EAAT,GAAgB,OALG,CAAvB,2BAQ2Cb,oBAAoB,CAK7DE,WAL6D,CAKhD,CACbI,gBADa,CACbA,gBADa,CAEbC,QAFa,CAEbA,QAFa,CAGbC,aAAa,CACX,MAAOA,cAAP,GAAyB,UAAzB,CACI,iDACKE,cADS,EAETF,aAAa,2BAHtB,gCAMSE,cADL,EAEKF,cAXE,CALgD,CAA/D,CAAQO,KAAF,uBAAEA,KAAF,CAASC,WAAT,uBAASA,WAAT,CAAsBC,4CAoB5BlB,KAAK,CAACmB,SAAN,CACE,kEACED,UAAU,CAACE,WADb,gDACEC,qCAAU,CAAe,UAAf,CAA4BC,UAAD,CAAO,CAC1C,GAAMC,UAAS,CAAGL,UAAU,CAACK,SAAX,EAAlB,CAIAC,qBAAqB,CAAC,UAAM,CAC1B,GACER,KAAK,CAACS,KAAN,CAAc,CAAd,EACAF,SADA,EAEA,CAAED,CAAD,CAAkCI,gBAHrC,CAIE,CAGAR,UAAU,CAACS,QAAX,gCACKvB,YAAY,CAACwB,QAAb,EADe,MAElBC,MAAM,CAAEb,KAAK,CAACc,MAFhB,CAID,CACF,CAboB,CAArB,CAcD,CAnBS,CADZ,EADF,CAsBE,CAACZ,UAAD,CAAaF,KAAK,CAACS,KAAnB,CAA0BT,KAAK,CAACc,GAAhC,CAtBF,EAyBA,MACE9B,qBAACK,SAAD,aACMK,IADN,EAEEM,KAAK,CAAEA,KAFT,CAGEC,WAAW,CAAEA,WAHf,CAIEC,UAAU,CAAEA,UAJd,GADF,CAQD,CAED,cAAehB,uBAAsB,CAKnCI,cALmC,CAArC","names":["React","useNavigationBuilder","createNavigatorFactory","StackRouter","StackActions","StackView","StackNavigator","initialRouteName","children","screenOptions","rest","defaultOptions","gestureEnabled","Platform","OS","animationEnabled","state","descriptors","navigation","useEffect","addListener","_navigation$addListen","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","popToTop","target","key"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/stack/lib/module/navigators/createStackNavigator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport {\n  useNavigationBuilder,\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  EventArg,\n  StackRouter,\n  StackRouterOptions,\n  StackNavigationState,\n  StackActions,\n} from '@react-navigation/native';\nimport StackView from '../views/Stack/StackView';\nimport type {\n  StackNavigationConfig,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<StackNavigationOptions> &\n  StackRouterOptions &\n  StackNavigationConfig;\n\nfunction StackNavigator({\n  initialRouteName,\n  children,\n  screenOptions,\n  ...rest\n}: Props) {\n  const defaultOptions = {\n    gestureEnabled: Platform.OS === 'ios',\n    animationEnabled:\n      Platform.OS !== 'web' &&\n      Platform.OS !== 'windows' &&\n      Platform.OS !== 'macos',\n  };\n\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    StackNavigationState,\n    StackRouterOptions,\n    StackNavigationOptions,\n    StackNavigationEventMap\n  >(StackRouter, {\n    initialRouteName,\n    children,\n    screenOptions:\n      typeof screenOptions === 'function'\n        ? (...args) => ({\n            ...defaultOptions,\n            ...screenOptions(...args),\n          })\n        : {\n            ...defaultOptions,\n            ...screenOptions,\n          },\n  });\n\n  React.useEffect(\n    () =>\n      navigation.addListener?.('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <StackView\n      {...rest}\n      state={state}\n      descriptors={descriptors}\n      navigation={navigation}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n  typeof StackNavigator\n>(StackNavigator);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}