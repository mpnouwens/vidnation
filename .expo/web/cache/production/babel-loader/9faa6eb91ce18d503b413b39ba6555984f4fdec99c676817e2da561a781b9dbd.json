{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';import{v4 as uuidv4}from'uuid';var ID_KEY='EXPO_CONSTANTS_INSTALLATION_ID';var _sessionId=uuidv4();function getBrowserName(){if(canUseDOM){var agent=navigator.userAgent.toLowerCase();if(agent.includes('edge')){return'Edge';}else if(agent.includes('edg')){return'Chromium Edge';}else if(agent.includes('opr')&&!!window['opr']){return'Opera';}else if(agent.includes('chrome')&&!!window['chrome']){return'Chrome';}else if(agent.includes('trident')){return'IE';}else if(agent.includes('firefox')){return'Firefox';}else if(agent.includes('safari')){return'Safari';}}return undefined;}export default{get name(){return'ExponentConstants';},get appOwnership(){return null;},get installationId(){var installationId;try{installationId=localStorage.getItem(ID_KEY);if(installationId==null||typeof installationId!=='string'){installationId=uuidv4();localStorage.setItem(ID_KEY,installationId);}}catch(error){installationId=_sessionId;}finally{return installationId;}},get sessionId(){return _sessionId;},get platform(){return{web:canUseDOM?{ua:navigator.userAgent}:undefined};},get isHeadless(){if(!canUseDOM)return true;return /\\bHeadlessChrome\\//.test(navigator.userAgent);},get isDevice(){return true;},get expoVersion(){return this.manifest.sdkVersion||null;},get linkingUri(){if(canUseDOM){return location.origin;}else{return'';}},get expoRuntimeVersion(){return this.expoVersion;},get deviceName(){return getBrowserName();},get nativeAppVersion(){return null;},get nativeBuildVersion(){return null;},get systemFonts(){return[];},get statusBarHeight(){return 0;},get deviceYearClass(){return null;},get manifest(){return process.env.APP_MANIFEST||{};},get experienceUrl(){if(canUseDOM){return location.origin;}else{return'';}},get debugMode(){return __DEV__;},getWebViewUserAgentAsync:function getWebViewUserAgentAsync(){return _regeneratorRuntime.async(function getWebViewUserAgentAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!canUseDOM){_context.next=4;break;}return _context.abrupt(\"return\",navigator.userAgent);case 4:return _context.abrupt(\"return\",null);case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}};","map":{"version":3,"mappings":"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","names":["canUseDOM","v4","uuidv4","ID_KEY","_sessionId","getBrowserName","agent","navigator","userAgent","toLowerCase","includes","window","undefined","name","appOwnership","installationId","localStorage","getItem","setItem","error","sessionId","platform","web","ua","isHeadless","test","isDevice","expoVersion","manifest","sdkVersion","linkingUri","location","origin","expoRuntimeVersion","deviceName","nativeAppVersion","nativeBuildVersion","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","experienceUrl","debugMode","__DEV__","getWebViewUserAgentAsync"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo-constants/src/ExponentConstants.web.ts"],"sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { NativeConstants, PlatformManifest, WebManifest } from './Constants.types';\n\nconst ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\n\ndeclare var __DEV__: boolean;\ndeclare var process: { env: any };\ndeclare var navigator: Navigator;\ndeclare var location: Location;\ndeclare var localStorage: Storage;\n\nconst _sessionId = uuidv4();\n\nfunction getBrowserName(): string | undefined {\n  if (canUseDOM) {\n    const agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentConstants';\n  },\n  get appOwnership() {\n    return null;\n  },\n  get installationId(): string {\n    let installationId;\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(ID_KEY, installationId as string);\n      }\n    } catch (error) {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n  get sessionId(): string {\n    return _sessionId;\n  },\n  get platform(): PlatformManifest {\n    return { web: canUseDOM ? { ua: navigator.userAgent } : undefined };\n  },\n  get isHeadless(): boolean {\n    if (!canUseDOM) return true;\n\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n  get isDevice(): true {\n    // TODO: Bacon: Possibly want to add information regarding simulators\n    return true;\n  },\n  get expoVersion(): string | null {\n    return this.manifest.sdkVersion || null;\n  },\n  get linkingUri(): string {\n    if (canUseDOM) {\n      // On native this is `exp://`\n      // On web we should use the protocol and hostname (location.origin)\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion(): string | null {\n    return this.expoVersion;\n  },\n  get deviceName(): string | undefined {\n    return getBrowserName();\n  },\n  get nativeAppVersion(): null {\n    return null;\n  },\n  get nativeBuildVersion(): null {\n    return null;\n  },\n  get systemFonts(): string[] {\n    // TODO: Bacon: Maybe possible.\n    return [];\n  },\n  get statusBarHeight(): number {\n    return 0;\n  },\n  get deviceYearClass(): number | null {\n    // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n    return null;\n  },\n  get manifest(): WebManifest {\n    // This is defined by @expo/webpack-config.\n    // If your site is bundled with a different config then you may not have access to the app.json automatically.\n    return process.env.APP_MANIFEST || {};\n  },\n  get experienceUrl(): string {\n    if (canUseDOM) {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode(): boolean {\n    return __DEV__;\n  },\n  async getWebViewUserAgentAsync(): Promise<string | null> {\n    if (canUseDOM) {\n      return navigator.userAgent;\n    } else {\n      return null;\n    }\n  },\n} as NativeConstants;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}