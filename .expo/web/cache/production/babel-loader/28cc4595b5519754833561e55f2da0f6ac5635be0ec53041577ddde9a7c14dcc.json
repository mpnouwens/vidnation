{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}export default function getActionFromState(state){if(state.routes.length===0){return undefined;}var route=state.routes[state.routes.length-1];var payload={name:route.name,params:_objectSpread({},route.params)};var current=route.state;var params=payload.params;while(current){if(current.routes.length===0){return undefined;}route=current.routes[current.routes.length-1];params.initial=current.routes.length===1;params.screen=route.name;if(route.state){params.params=_objectSpread({},route.params);params=params.params;}else{params.params=route.params;}current=route.state;}return{type:'NAVIGATE',payload:payload};}","map":{"version":3,"mappings":"w0BAaA,cAAe,SAASA,mBAAT,CACbC,KADa,CAEe,CAC5B,GAAIA,KAAK,CAACC,MAAN,CAAaC,MAAb,GAAwB,CAA5B,CAA+B,CAC7B,MAAOC,UAAP,CACD,CAID,GAAIC,MAAK,CAAGJ,KAAK,CAACC,MAAN,CAAaD,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAsB,CAAnC,CAAZ,CAEA,GAAIG,QAAiD,CAAG,CACtDC,IAAI,CAAEF,KAAK,CAACE,IAD0C,CAEtDC,MAAM,kBAAOH,KAAK,CAACG,OAFmC,CAAxD,CAKA,GAAIC,QAAO,CAAGJ,KAAK,CAACJ,KAApB,CACA,GAAIO,OAAM,CAAGF,OAAO,CAACE,MAArB,CAEA,MAAOC,OAAP,CAAgB,CACd,GAAIA,OAAO,CAACP,MAAR,CAAeC,MAAf,GAA0B,CAA9B,CAAiC,CAC/B,MAAOC,UAAP,CACD,CAEDC,KAAK,CAAGI,OAAO,CAACP,MAAR,CAAeO,OAAO,CAACP,MAAR,CAAeC,MAAf,CAAwB,CAAvC,CAAR,CACAK,MAAM,CAACE,OAAP,CAAiBD,OAAO,CAACP,MAAR,CAAeC,MAAf,GAA0B,CAA3C,CACAK,MAAM,CAACG,MAAP,CAAgBN,KAAK,CAACE,IAAtB,CAEA,GAAIF,KAAK,CAACJ,KAAV,CAAiB,CACfO,MAAM,CAACA,MAAP,kBAAqBH,KAAK,CAACG,OAA3B,CACAA,MAAM,CAAGA,MAAM,CAACA,MAAhB,CACD,CAHD,IAGO,CACLA,MAAM,CAACA,MAAP,CAAgBH,KAAK,CAACG,MAAtB,CACD,CAEDC,OAAO,CAAGJ,KAAK,CAACJ,KAAhB,CACD,CAED,MAAO,CACLW,IAAI,CAAE,UADD,CAELN,eAFK,CAAP,CAID","names":["getActionFromState","state","routes","length","undefined","route","payload","name","params","current","initial","screen","type"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/core/lib/module/getActionFromState.tsx"],"sourcesContent":["import type { PartialState, NavigationState } from '@react-navigation/routers';\n\ntype NavigateParams = {\n  screen?: string;\n  params?: NavigateParams;\n  initial?: boolean;\n};\n\ntype NavigateAction = {\n  type: 'NAVIGATE';\n  payload: { name: string; params: NavigateParams };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>\n): NavigateAction | undefined {\n  if (state.routes.length === 0) {\n    return undefined;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  let route = state.routes[state.routes.length - 1];\n\n  let payload: { name: string; params: NavigateParams } = {\n    name: route.name,\n    params: { ...route.params },\n  };\n\n  let current = route.state;\n  let params = payload.params;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    route = current.routes[current.routes.length - 1];\n    params.initial = current.routes.length === 1;\n    params.screen = route.name;\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params;\n    } else {\n      params.params = route.params;\n    }\n\n    current = route.state;\n  }\n\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}