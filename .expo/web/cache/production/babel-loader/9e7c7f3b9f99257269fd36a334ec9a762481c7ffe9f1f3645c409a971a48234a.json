{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import{MaybeScreenContainer,MaybeScreen}from\"../Screens\";import{getDefaultHeaderHeight}from\"../Header/HeaderSegment\";import CardContainer from\"./CardContainer\";import{DefaultTransition,ModalTransition}from\"../../TransitionConfigs/TransitionPresets\";import{forNoAnimation as forNoAnimationHeader}from\"../../TransitionConfigs/HeaderStyleInterpolators\";import{forNoAnimation as forNoAnimationCard}from\"../../TransitionConfigs/CardStyleInterpolators\";import HeaderShownContext from\"../../utils/HeaderShownContext\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";var EPSILON=0.01;var FALLBACK_DESCRIPTOR=Object.freeze({options:{}});var getHeaderHeights=function getHeaderHeights(routes,insets,descriptors,layout,previous){return routes.reduce(function(acc,curr){var _ref=descriptors[curr.key]||{},_ref$options=_ref.options,options=_ref$options===void 0?{}:_ref$options;var style=StyleSheet.flatten(options.headerStyle||{});var height=typeof style.height==='number'?style.height:previous[curr.key];var safeAreaInsets=_objectSpread(_objectSpread({},insets),options.safeAreaInsets);var _options$headerStatus=options.headerStatusBarHeight,headerStatusBarHeight=_options$headerStatus===void 0?safeAreaInsets.top:_options$headerStatus;acc[curr.key]=typeof height==='number'?height:getDefaultHeaderHeight(layout,headerStatusBarHeight);return acc;},{});};var getDistanceFromOptions=function getDistanceFromOptions(mode,layout,descriptor){var _ref2=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},_ref2$gestureDirectio=_ref2.gestureDirection,gestureDirection=_ref2$gestureDirectio===void 0?mode==='modal'?ModalTransition.gestureDirection:DefaultTransition.gestureDirection:_ref2$gestureDirectio;return getDistanceForDirection(layout,gestureDirection);};var getProgressFromGesture=function getProgressFromGesture(mode,gesture,layout,descriptor){var distance=getDistanceFromOptions(mode,{width:Math.max(1,layout.width),height:Math.max(1,layout.height)},descriptor);if(distance>0){return gesture.interpolate({inputRange:[0,distance],outputRange:[1,0]});}return gesture.interpolate({inputRange:[distance,0],outputRange:[0,1]});};var CardStack=function(_React$Component){_inherits(CardStack,_React$Component);var _super=_createSuper(CardStack);_createClass(CardStack,null,[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.routes===state.routes&&props.descriptors===state.descriptors){return null;}var gestures=props.routes.reduce(function(acc,curr){var descriptor=props.descriptors[curr.key];var _ref3=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},animationEnabled=_ref3.animationEnabled;acc[curr.key]=state.gestures[curr.key]||new Animated.Value(props.openingRouteKeys.includes(curr.key)&&animationEnabled!==false?getDistanceFromOptions(props.mode,state.layout,descriptor):0);return acc;},{});return{routes:props.routes,scenes:props.routes.map(function(route,index,self){var previousRoute=self[index-1];var nextRoute=self[index+1];var oldScene=state.scenes[index];var currentGesture=gestures[route.key];var previousGesture=previousRoute?gestures[previousRoute.key]:undefined;var nextGesture=nextRoute?gestures[nextRoute.key]:undefined;var descriptor=props.descriptors[route.key]||state.descriptors[route.key]||(oldScene?oldScene.descriptor:FALLBACK_DESCRIPTOR);var nextDescriptor=props.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key]||state.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key];var previousDescriptor=props.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key]||state.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key];var scene={route:route,descriptor:descriptor,progress:{current:getProgressFromGesture(props.mode,currentGesture,state.layout,descriptor),next:nextGesture?getProgressFromGesture(props.mode,nextGesture,state.layout,nextDescriptor):undefined,previous:previousGesture?getProgressFromGesture(props.mode,previousGesture,state.layout,previousDescriptor):undefined},__memo:[route,state.layout,descriptor,nextDescriptor,previousDescriptor,currentGesture,nextGesture,previousGesture]};if(oldScene&&scene.__memo.every(function(it,i){return oldScene.__memo[i]===it;})){return oldScene;}return scene;}),gestures:gestures,descriptors:props.descriptors,headerHeights:getHeaderHeights(props.routes,props.insets,state.descriptors,state.layout,state.headerHeights)};}}]);function CardStack(_props){var _this;_classCallCheck(this,CardStack);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"handleLayout\",function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;var layout={width:width,height:height};_this.setState(function(state,props){if(height===state.layout.height&&width===state.layout.width){return null;}return{layout:layout,headerHeights:getHeaderHeights(props.routes,props.insets,state.descriptors,layout,state.headerHeights)};});});_defineProperty(_assertThisInitialized(_this),\"handleHeaderLayout\",function(_ref4){var route=_ref4.route,height=_ref4.height;_this.setState(function(_ref5){var headerHeights=_ref5.headerHeights;var previousHeight=headerHeights[route.key];if(previousHeight===height){return null;}return{headerHeights:_objectSpread(_objectSpread({},headerHeights),{},_defineProperty2({},route.key,height))};});});_defineProperty(_assertThisInitialized(_this),\"getFocusedRoute\",function(){var state=_this.props.state;return state.routes[state.index];});_defineProperty(_assertThisInitialized(_this),\"getPreviousScene\",function(_ref6){var route=_ref6.route;var getPreviousRoute=_this.props.getPreviousRoute;var scenes=_this.state.scenes;var previousRoute=getPreviousRoute({route:route});if(previousRoute){var previousScene=scenes.find(function(scene){return scene.route.key===previousRoute.key;});return previousScene;}return undefined;});var _Dimensions$get=Dimensions.get('window'),_Dimensions$get$heigh=_Dimensions$get.height,_height=_Dimensions$get$heigh===void 0?0:_Dimensions$get$heigh,_Dimensions$get$width=_Dimensions$get.width,_width=_Dimensions$get$width===void 0?0:_Dimensions$get$width;_this.state={routes:[],scenes:[],gestures:{},layout:{height:_height,width:_width},descriptors:_this.props.descriptors,headerHeights:{}};return _this;}_createClass(CardStack,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,mode=_this$props.mode,insets=_this$props.insets,descriptors=_this$props.descriptors,state=_this$props.state,routes=_this$props.routes,closingRouteKeys=_this$props.closingRouteKeys,onOpenRoute=_this$props.onOpenRoute,onCloseRoute=_this$props.onCloseRoute,getGesturesEnabled=_this$props.getGesturesEnabled,renderHeader=_this$props.renderHeader,renderScene=_this$props.renderScene,headerMode=_this$props.headerMode,onTransitionStart=_this$props.onTransitionStart,onTransitionEnd=_this$props.onTransitionEnd,onPageChangeStart=_this$props.onPageChangeStart,onPageChangeConfirm=_this$props.onPageChangeConfirm,onPageChangeCancel=_this$props.onPageChangeCancel,onGestureStart=_this$props.onGestureStart,onGestureEnd=_this$props.onGestureEnd,onGestureCancel=_this$props.onGestureCancel;var _this$state=this.state,scenes=_this$state.scenes,layout=_this$state.layout,gestures=_this$state.gestures,headerHeights=_this$state.headerHeights;var focusedRoute=state.routes[state.index];var focusedDescriptor=descriptors[focusedRoute.key];var focusedOptions=focusedDescriptor?focusedDescriptor.options:{};var defaultTransitionPreset=mode==='modal'?ModalTransition:DefaultTransition;if(headerMode==='screen'){defaultTransitionPreset=_objectSpread(_objectSpread({},defaultTransitionPreset),{},{headerStyleInterpolator:forNoAnimationHeader});}var _ref7=focusedOptions.safeAreaInsets||{},_ref7$top=_ref7.top,top=_ref7$top===void 0?insets.top:_ref7$top,_ref7$right=_ref7.right,right=_ref7$right===void 0?insets.right:_ref7$right,_ref7$bottom=_ref7.bottom,bottom=_ref7$bottom===void 0?insets.bottom:_ref7$bottom,_ref7$left=_ref7.left,left=_ref7$left===void 0?insets.left:_ref7$left;var isScreensEnabled=Platform.OS!=='ios'&&mode!=='modal';return React.createElement(HeaderShownContext.Consumer,null,function(isParentHeaderShown){var isFloatHeaderAbsolute=headerMode==='float'?_this2.state.scenes.slice(-2).some(function(scene){var descriptor=scene.descriptor;var options=descriptor?descriptor.options:{};var headerTransparent=options.headerTransparent,_options$headerShown=options.headerShown,headerShown=_options$headerShown===void 0?isParentHeaderShown===false:_options$headerShown;if(headerTransparent||headerShown===false){return true;}return false;}):false;var floatingHeader=headerMode==='float'?React.createElement(React.Fragment,{key:\"header\"},renderHeader({mode:'float',layout:layout,insets:{top:top,right:right,bottom:bottom,left:left},scenes:scenes,getPreviousScene:_this2.getPreviousScene,getFocusedRoute:_this2.getFocusedRoute,onContentHeightChange:_this2.handleHeaderLayout,gestureDirection:focusedOptions.gestureDirection!==undefined?focusedOptions.gestureDirection:defaultTransitionPreset.gestureDirection,styleInterpolator:focusedOptions.headerStyleInterpolator!==undefined?focusedOptions.headerStyleInterpolator:defaultTransitionPreset.headerStyleInterpolator,style:[styles.floating,isFloatHeaderAbsolute&&styles.absolute]})):null;return React.createElement(React.Fragment,null,isFloatHeaderAbsolute?null:floatingHeader,React.createElement(MaybeScreenContainer,{enabled:isScreensEnabled,style:styles.container,onLayout:_this2.handleLayout},routes.map(function(route,index,self){var focused=focusedRoute.key===route.key;var gesture=gestures[route.key];var scene=scenes[index];var isScreenActive=scene.progress.next?scene.progress.next.interpolate({inputRange:[0,1-EPSILON,1],outputRange:[1,1,0],extrapolate:'clamp'}):1;var _ref8=scene.descriptor?scene.descriptor.options:{},safeAreaInsets=_ref8.safeAreaInsets,_ref8$headerShown=_ref8.headerShown,headerShown=_ref8$headerShown===void 0?isParentHeaderShown===false:_ref8$headerShown,headerTransparent=_ref8.headerTransparent,cardShadowEnabled=_ref8.cardShadowEnabled,cardOverlayEnabled=_ref8.cardOverlayEnabled,cardOverlay=_ref8.cardOverlay,cardStyle=_ref8.cardStyle,animationEnabled=_ref8.animationEnabled,gestureResponseDistance=_ref8.gestureResponseDistance,gestureVelocityImpact=_ref8.gestureVelocityImpact,_ref8$gestureDirectio=_ref8.gestureDirection,gestureDirection=_ref8$gestureDirectio===void 0?defaultTransitionPreset.gestureDirection:_ref8$gestureDirectio,_ref8$transitionSpec=_ref8.transitionSpec,transitionSpec=_ref8$transitionSpec===void 0?defaultTransitionPreset.transitionSpec:_ref8$transitionSpec,_ref8$cardStyleInterp=_ref8.cardStyleInterpolator,cardStyleInterpolator=_ref8$cardStyleInterp===void 0?animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_ref8$cardStyleInterp,_ref8$headerStyleInte=_ref8.headerStyleInterpolator,headerStyleInterpolator=_ref8$headerStyleInte===void 0?defaultTransitionPreset.headerStyleInterpolator:_ref8$headerStyleInte;var transitionConfig={gestureDirection:gestureDirection,transitionSpec:transitionSpec,cardStyleInterpolator:cardStyleInterpolator,headerStyleInterpolator:headerStyleInterpolator};if(index!==self.length-1){var nextScene=scenes[index+1];if(nextScene){var _ref9=nextScene.descriptor?nextScene.descriptor.options:{},_animationEnabled=_ref9.animationEnabled,_ref9$gestureDirectio=_ref9.gestureDirection,_gestureDirection=_ref9$gestureDirectio===void 0?defaultTransitionPreset.gestureDirection:_ref9$gestureDirectio,_ref9$transitionSpec=_ref9.transitionSpec,_transitionSpec=_ref9$transitionSpec===void 0?defaultTransitionPreset.transitionSpec:_ref9$transitionSpec,_ref9$cardStyleInterp=_ref9.cardStyleInterpolator,_cardStyleInterpolator=_ref9$cardStyleInterp===void 0?_animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_ref9$cardStyleInterp,_ref9$headerStyleInte=_ref9.headerStyleInterpolator,_headerStyleInterpolator=_ref9$headerStyleInte===void 0?defaultTransitionPreset.headerStyleInterpolator:_ref9$headerStyleInte;transitionConfig={gestureDirection:_gestureDirection,transitionSpec:_transitionSpec,cardStyleInterpolator:_cardStyleInterpolator,headerStyleInterpolator:_headerStyleInterpolator};}}var _ref10=safeAreaInsets||{},_ref10$top=_ref10.top,safeAreaInsetTop=_ref10$top===void 0?insets.top:_ref10$top,_ref10$right=_ref10.right,safeAreaInsetRight=_ref10$right===void 0?insets.right:_ref10$right,_ref10$bottom=_ref10.bottom,safeAreaInsetBottom=_ref10$bottom===void 0?insets.bottom:_ref10$bottom,_ref10$left=_ref10.left,safeAreaInsetLeft=_ref10$left===void 0?insets.left:_ref10$left;var headerHeight=headerMode!=='none'&&headerShown!==false?headerHeights[route.key]:0;return React.createElement(MaybeScreen,{key:route.key,style:StyleSheet.absoluteFill,enabled:isScreensEnabled,active:isScreenActive,pointerEvents:\"box-none\"},React.createElement(CardContainer,_extends({index:index,active:index===self.length-1,focused:focused,closing:closingRouteKeys.includes(route.key),layout:layout,gesture:gesture,scene:scene,safeAreaInsetTop:safeAreaInsetTop,safeAreaInsetRight:safeAreaInsetRight,safeAreaInsetBottom:safeAreaInsetBottom,safeAreaInsetLeft:safeAreaInsetLeft,cardOverlay:cardOverlay,cardOverlayEnabled:cardOverlayEnabled,cardShadowEnabled:cardShadowEnabled,cardStyle:cardStyle,onPageChangeStart:onPageChangeStart,onPageChangeConfirm:onPageChangeConfirm,onPageChangeCancel:onPageChangeCancel,onGestureStart:onGestureStart,onGestureCancel:onGestureCancel,onGestureEnd:onGestureEnd,gestureResponseDistance:gestureResponseDistance,headerHeight:headerHeight,onHeaderHeightChange:_this2.handleHeaderLayout,getPreviousScene:_this2.getPreviousScene,getFocusedRoute:_this2.getFocusedRoute,mode:mode,headerMode:headerMode,headerShown:headerShown,hasAbsoluteHeader:isFloatHeaderAbsolute&&!headerTransparent,renderHeader:renderHeader,renderScene:renderScene,onOpenRoute:onOpenRoute,onCloseRoute:onCloseRoute,onTransitionStart:onTransitionStart,onTransitionEnd:onTransitionEnd,gestureEnabled:index!==0&&getGesturesEnabled({route:route}),gestureVelocityImpact:gestureVelocityImpact},transitionConfig)));})),isFloatHeaderAbsolute?floatingHeader:null);});}}]);return CardStack;}(React.Component);export{CardStack as default};var styles=StyleSheet.create({container:{flex:1},absolute:{position:'absolute',top:0,left:0,right:0},floating:{zIndex:1}});","map":{"version":3,"mappings":"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","names":["React","MaybeScreenContainer","MaybeScreen","getDefaultHeaderHeight","CardContainer","DefaultTransition","ModalTransition","forNoAnimation","forNoAnimationHeader","forNoAnimationCard","HeaderShownContext","getDistanceForDirection","EPSILON","FALLBACK_DESCRIPTOR","Object","freeze","options","getHeaderHeights","routes","insets","descriptors","layout","previous","reduce","acc","curr","key","style","StyleSheet","flatten","headerStyle","height","safeAreaInsets","headerStatusBarHeight","top","getDistanceFromOptions","mode","descriptor","gestureDirection","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","props","state","gestures","animationEnabled","Animated","Value","openingRouteKeys","includes","scenes","map","route","index","self","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","undefined","nextGesture","nextDescriptor","previousDescriptor","scene","progress","current","next","__memo","every","it","i","headerHeights","constructor","_defineProperty","e","nativeEvent","setState","previousHeight","getPreviousRoute","previousScene","find","Dimensions","get","closingRouteKeys","onOpenRoute","onCloseRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","onGestureStart","onGestureEnd","onGestureCancel","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","right","bottom","left","isScreensEnabled","Platform","OS","Consumer","isParentHeaderShown","isFloatHeaderAbsolute","slice","some","headerTransparent","headerShown","floatingHeader","Fragment","getPreviousScene","getFocusedRoute","onContentHeightChange","handleHeaderLayout","styleInterpolator","styles","floating","absolute","enabled","container","onLayout","handleLayout","focused","isScreenActive","extrapolate","cardShadowEnabled","cardOverlayEnabled","cardOverlay","cardStyle","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","transitionConfig","length","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","headerHeight","absoluteFill","active","pointerEvents","closing","onHeaderHeightChange","hasAbsoluteHeader","gestureEnabled","Component","create","flex","position","zIndex"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/stack/lib/module/views/Stack/CardStack.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\nimport type { Route, StackNavigationState } from '@react-navigation/native';\n\nimport { MaybeScreenContainer, MaybeScreen } from '../Screens';\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport type {\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n  onGestureStart?: (props: { route: Route<string> }) => void;\n  onGestureEnd?: (props: { route: Route<string> }) => void;\n  onGestureCancel?: (props: { route: Route<string> }) => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 0.01;\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const style: any = StyleSheet.flatten(options.headerStyle || {});\n\n    const height =\n      typeof style.height === 'number' ? style.height : previous[curr.key];\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(\n    mode,\n    {\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height),\n    },\n    descriptor\n  );\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: { height, width },\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {},\n    };\n  }\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          state.headerHeights\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  private getPreviousScene = ({ route }: { route: Route<string> }) => {\n    const { getPreviousRoute } = this.props;\n    const { scenes } = this.state;\n\n    const previousRoute = getPreviousRoute({ route });\n\n    if (previousRoute) {\n      const previousScene = scenes.find(\n        (scene) => scene.route.key === previousRoute.key\n      );\n\n      return previousScene;\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n      onGestureStart,\n      onGestureEnd,\n      onGestureCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    // Screens is buggy on iOS and web, so we only enable it on Android\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n    const isScreensEnabled = Platform.OS !== 'ios' && mode !== 'modal';\n\n    return (\n      <HeaderShownContext.Consumer>\n        {(isParentHeaderShown) => {\n          const isFloatHeaderAbsolute =\n            headerMode === 'float'\n              ? this.state.scenes.slice(-2).some((scene) => {\n                  const { descriptor } = scene;\n                  const options = descriptor ? descriptor.options : {};\n                  const {\n                    headerTransparent,\n                    headerShown = isParentHeaderShown === false,\n                  } = options;\n\n                  if (headerTransparent || headerShown === false) {\n                    return true;\n                  }\n\n                  return false;\n                })\n              : false;\n\n          const floatingHeader =\n            headerMode === 'float' ? (\n              <React.Fragment key=\"header\">\n                {renderHeader({\n                  mode: 'float',\n                  layout,\n                  insets: { top, right, bottom, left },\n                  scenes,\n                  getPreviousScene: this.getPreviousScene,\n                  getFocusedRoute: this.getFocusedRoute,\n                  onContentHeightChange: this.handleHeaderLayout,\n                  gestureDirection:\n                    focusedOptions.gestureDirection !== undefined\n                      ? focusedOptions.gestureDirection\n                      : defaultTransitionPreset.gestureDirection,\n                  styleInterpolator:\n                    focusedOptions.headerStyleInterpolator !== undefined\n                      ? focusedOptions.headerStyleInterpolator\n                      : defaultTransitionPreset.headerStyleInterpolator,\n                  style: [\n                    styles.floating,\n                    isFloatHeaderAbsolute && styles.absolute,\n                  ],\n                })}\n              </React.Fragment>\n            ) : null;\n\n          return (\n            <React.Fragment>\n              {isFloatHeaderAbsolute ? null : floatingHeader}\n              <MaybeScreenContainer\n                enabled={isScreensEnabled}\n                style={styles.container}\n                onLayout={this.handleLayout}\n              >\n                {routes.map((route, index, self) => {\n                  const focused = focusedRoute.key === route.key;\n                  const gesture = gestures[route.key];\n                  const scene = scenes[index];\n\n                  const isScreenActive = scene.progress.next\n                    ? scene.progress.next.interpolate({\n                        inputRange: [0, 1 - EPSILON, 1],\n                        outputRange: [1, 1, 0],\n                        extrapolate: 'clamp',\n                      })\n                    : 1;\n\n                  const {\n                    safeAreaInsets,\n                    headerShown = isParentHeaderShown === false,\n                    headerTransparent,\n                    cardShadowEnabled,\n                    cardOverlayEnabled,\n                    cardOverlay,\n                    cardStyle,\n                    animationEnabled,\n                    gestureResponseDistance,\n                    gestureVelocityImpact,\n                    gestureDirection = defaultTransitionPreset.gestureDirection,\n                    transitionSpec = defaultTransitionPreset.transitionSpec,\n                    cardStyleInterpolator = animationEnabled === false\n                      ? forNoAnimationCard\n                      : defaultTransitionPreset.cardStyleInterpolator,\n                    headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                  } = scene.descriptor\n                    ? scene.descriptor.options\n                    : ({} as StackNavigationOptions);\n\n                  let transitionConfig = {\n                    gestureDirection,\n                    transitionSpec,\n                    cardStyleInterpolator,\n                    headerStyleInterpolator,\n                  };\n\n                  // When a screen is not the last, it should use next screen's transition config\n                  // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n                  // For example combining a slide and a modal transition would look wrong otherwise\n                  // With this approach, combining different transition styles in the same navigator mostly looks right\n                  // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n                  // but majority of the transitions look alright\n                  if (index !== self.length - 1) {\n                    const nextScene = scenes[index + 1];\n\n                    if (nextScene) {\n                      const {\n                        animationEnabled,\n                        gestureDirection = defaultTransitionPreset.gestureDirection,\n                        transitionSpec = defaultTransitionPreset.transitionSpec,\n                        cardStyleInterpolator = animationEnabled === false\n                          ? forNoAnimationCard\n                          : defaultTransitionPreset.cardStyleInterpolator,\n                        headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                      } = nextScene.descriptor\n                        ? nextScene.descriptor.options\n                        : ({} as StackNavigationOptions);\n\n                      transitionConfig = {\n                        gestureDirection,\n                        transitionSpec,\n                        cardStyleInterpolator,\n                        headerStyleInterpolator,\n                      };\n                    }\n                  }\n\n                  const {\n                    top: safeAreaInsetTop = insets.top,\n                    right: safeAreaInsetRight = insets.right,\n                    bottom: safeAreaInsetBottom = insets.bottom,\n                    left: safeAreaInsetLeft = insets.left,\n                  } = safeAreaInsets || {};\n\n                  const headerHeight =\n                    headerMode !== 'none' && headerShown !== false\n                      ? headerHeights[route.key]\n                      : 0;\n\n                  return (\n                    <MaybeScreen\n                      key={route.key}\n                      style={StyleSheet.absoluteFill}\n                      enabled={isScreensEnabled}\n                      active={isScreenActive}\n                      pointerEvents=\"box-none\"\n                    >\n                      <CardContainer\n                        index={index}\n                        active={index === self.length - 1}\n                        focused={focused}\n                        closing={closingRouteKeys.includes(route.key)}\n                        layout={layout}\n                        gesture={gesture}\n                        scene={scene}\n                        safeAreaInsetTop={safeAreaInsetTop}\n                        safeAreaInsetRight={safeAreaInsetRight}\n                        safeAreaInsetBottom={safeAreaInsetBottom}\n                        safeAreaInsetLeft={safeAreaInsetLeft}\n                        cardOverlay={cardOverlay}\n                        cardOverlayEnabled={cardOverlayEnabled}\n                        cardShadowEnabled={cardShadowEnabled}\n                        cardStyle={cardStyle}\n                        onPageChangeStart={onPageChangeStart}\n                        onPageChangeConfirm={onPageChangeConfirm}\n                        onPageChangeCancel={onPageChangeCancel}\n                        onGestureStart={onGestureStart}\n                        onGestureCancel={onGestureCancel}\n                        onGestureEnd={onGestureEnd}\n                        gestureResponseDistance={gestureResponseDistance}\n                        headerHeight={headerHeight}\n                        onHeaderHeightChange={this.handleHeaderLayout}\n                        getPreviousScene={this.getPreviousScene}\n                        getFocusedRoute={this.getFocusedRoute}\n                        mode={mode}\n                        headerMode={headerMode}\n                        headerShown={headerShown}\n                        hasAbsoluteHeader={\n                          isFloatHeaderAbsolute && !headerTransparent\n                        }\n                        renderHeader={renderHeader}\n                        renderScene={renderScene}\n                        onOpenRoute={onOpenRoute}\n                        onCloseRoute={onCloseRoute}\n                        onTransitionStart={onTransitionStart}\n                        onTransitionEnd={onTransitionEnd}\n                        gestureEnabled={\n                          index !== 0 && getGesturesEnabled({ route })\n                        }\n                        gestureVelocityImpact={gestureVelocityImpact}\n                        {...transitionConfig}\n                      />\n                    </MaybeScreen>\n                  );\n                })}\n              </MaybeScreenContainer>\n              {isFloatHeaderAbsolute ? floatingHeader : null}\n            </React.Fragment>\n          );\n        }}\n      </HeaderShownContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  floating: {\n    zIndex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}