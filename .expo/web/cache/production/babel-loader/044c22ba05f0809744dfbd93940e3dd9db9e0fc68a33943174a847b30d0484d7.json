{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{Platform}from'@unimodules/core';import{getAssetByID}from\"./AssetRegistry\";import*as AssetSources from\"./AssetSources\";import*as AssetUris from\"./AssetUris\";import{getEmbeddedAssetUri}from\"./EmbeddedAssets\";import*as ImageAssets from\"./ImageAssets\";import{downloadAsync as _downloadAsync,IS_ENV_WITH_UPDATES_ENABLED}from\"./PlatformUtils\";import resolveAssetSource from\"./resolveAssetSource\";var Asset=function(){var Asset=function(){function Asset(_ref){var name=_ref.name,type=_ref.type,_ref$hash=_ref.hash,hash=_ref$hash===void 0?null:_ref$hash,uri=_ref.uri,width=_ref.width,height=_ref.height;_classCallCheck(this,Asset);this.hash=null;this.localUri=null;this.width=null;this.height=null;this.downloading=false;this.downloaded=false;this._downloadCallbacks=[];this.name=name;this.type=type;this.hash=hash;this.uri=uri;if(typeof width==='number'){this.width=width;}if(typeof height==='number'){this.height=height;}if(hash){this.localUri=getEmbeddedAssetUri(hash,type);if(this.localUri){this.downloaded=true;}}if(Platform.OS==='web'){if(!name){this.name=AssetUris.getFilename(uri);}if(!type){this.type=AssetUris.getFileExtension(uri);}}}_createClass(Asset,[{key:\"downloadAsync\",value:function downloadAsync(){var _this=this;var _await$ImageAssets$ge,width,height,name;return _regeneratorRuntime.async(function downloadAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!this.downloaded){_context.next=2;break;}return _context.abrupt(\"return\",this);case 2:if(!this.downloading){_context.next=6;break;}_context.next=5;return _regeneratorRuntime.awrap(new Promise(function(resolve,reject){_this._downloadCallbacks.push({resolve:resolve,reject:reject});}));case 5:return _context.abrupt(\"return\",this);case 6:this.downloading=true;_context.prev=7;if(!(Platform.OS==='web')){_context.next=22;break;}if(!ImageAssets.isImageType(this.type)){_context.next=21;break;}_context.next=12;return _regeneratorRuntime.awrap(ImageAssets.getImageInfoAsync(this.uri));case 12:_await$ImageAssets$ge=_context.sent;width=_await$ImageAssets$ge.width;height=_await$ImageAssets$ge.height;name=_await$ImageAssets$ge.name;this.width=width;this.height=height;this.name=name;_context.next=22;break;case 21:this.name=AssetUris.getFilename(this.uri);case 22:_context.next=24;return _regeneratorRuntime.awrap(_downloadAsync(this.uri,this.hash,this.type,this.name));case 24:this.localUri=_context.sent;this.downloaded=true;this._downloadCallbacks.forEach(function(_ref2){var resolve=_ref2.resolve;return resolve();});_context.next=33;break;case 29:_context.prev=29;_context.t0=_context[\"catch\"](7);this._downloadCallbacks.forEach(function(_ref3){var reject=_ref3.reject;return reject(_context.t0);});throw _context.t0;case 33:_context.prev=33;this.downloading=false;this._downloadCallbacks=[];return _context.finish(33);case 37:return _context.abrupt(\"return\",this);case 38:case\"end\":return _context.stop();}}},null,this,[[7,29,33,37]],Promise);}}],[{key:\"loadAsync\",value:function loadAsync(moduleId){var moduleIds=Array.isArray(moduleId)?moduleId:[moduleId];return Promise.all(moduleIds.map(function(moduleId){return Asset.fromModule(moduleId).downloadAsync();}));}},{key:\"fromModule\",value:function fromModule(virtualAssetModule){if(typeof virtualAssetModule==='string'){return Asset.fromURI(virtualAssetModule);}var meta=getAssetByID(virtualAssetModule);if(!meta){throw new Error(\"Module \\\"\"+virtualAssetModule+\"\\\" is missing from the asset registry\");}if(!IS_ENV_WITH_UPDATES_ENABLED){var _resolveAssetSource=resolveAssetSource(virtualAssetModule),uri=_resolveAssetSource.uri;var asset=new Asset({name:meta.name,type:meta.type,hash:meta.hash,uri:uri,width:meta.width,height:meta.height});if(Platform.OS==='android'&&!uri.includes(':')&&(meta.width||meta.height)){asset.localUri=asset.uri;asset.downloaded=true;}Asset.byHash[meta.hash]=asset;return asset;}return Asset.fromMetadata(meta);}},{key:\"fromMetadata\",value:function fromMetadata(meta){var metaHash=meta.hash;if(Asset.byHash[metaHash]){return Asset.byHash[metaHash];}var _AssetSources$selectA=AssetSources.selectAssetSource(meta),uri=_AssetSources$selectA.uri,hash=_AssetSources$selectA.hash;var asset=new Asset({name:meta.name,type:meta.type,hash:hash,uri:uri,width:meta.width,height:meta.height});Asset.byHash[metaHash]=asset;return asset;}},{key:\"fromURI\",value:function fromURI(uri){if(Asset.byUri[uri]){return Asset.byUri[uri];}var type='';if(uri.indexOf(';base64')>-1){type=uri.split(';')[0].split('/')[1];}else{var extension=AssetUris.getFileExtension(uri);type=extension.startsWith('.')?extension.substring(1):extension;}var asset=new Asset({name:'',type:type,hash:null,uri:uri});Asset.byUri[uri]=asset;return asset;}}]);return Asset;}();Asset.byHash={};Asset.byUri={};return Asset;}();export{Asset};","map":{"version":3,"mappings":"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","names":["Platform","getAssetByID","AssetSources","AssetUris","getEmbeddedAssetUri","ImageAssets","downloadAsync","IS_ENV_WITH_UPDATES_ENABLED","resolveAssetSource","Asset","name","type","hash","uri","width","height","localUri","downloaded","OS","getFilename","getFileExtension","downloading","Promise","resolve","reject","_downloadCallbacks","push","isImageType","getImageInfoAsync","forEach","moduleId","moduleIds","Array","isArray","all","map","fromModule","virtualAssetModule","fromURI","meta","Error","asset","includes","byHash","fromMetadata","metaHash","selectAssetSource","byUri","indexOf","split","extension","startsWith","substring"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo-asset/src/Asset.ts"],"sourcesContent":["import { Platform } from '@unimodules/core';\n\nimport { getAssetByID } from './AssetRegistry';\nimport * as AssetSources from './AssetSources';\nimport * as AssetUris from './AssetUris';\nimport { getEmbeddedAssetUri } from './EmbeddedAssets';\nimport * as ImageAssets from './ImageAssets';\nimport { downloadAsync, IS_ENV_WITH_UPDATES_ENABLED } from './PlatformUtils';\nimport resolveAssetSource from './resolveAssetSource';\n\ntype AssetDescriptor = {\n  name: string;\n  type: string;\n  hash?: string | null;\n  uri: string;\n  width?: number | null;\n  height?: number | null;\n};\n\ntype DownloadPromiseCallbacks = {\n  resolve: () => void;\n  reject: (error: Error) => void;\n};\n\nexport type AssetMetadata = AssetSources.AssetMetadata;\n\nexport class Asset {\n  static byHash = {};\n  static byUri = {};\n\n  name: string;\n  type: string;\n  hash: string | null = null;\n  uri: string;\n  localUri: string | null = null;\n  width: number | null = null;\n  height: number | null = null;\n  downloading: boolean = false;\n  downloaded: boolean = false;\n  _downloadCallbacks: DownloadPromiseCallbacks[] = [];\n\n  constructor({ name, type, hash = null, uri, width, height }: AssetDescriptor) {\n    this.name = name;\n    this.type = type;\n    this.hash = hash;\n    this.uri = uri;\n\n    if (typeof width === 'number') {\n      this.width = width;\n    }\n    if (typeof height === 'number') {\n      this.height = height;\n    }\n\n    if (hash) {\n      this.localUri = getEmbeddedAssetUri(hash, type);\n      if (this.localUri) {\n        this.downloaded = true;\n      }\n    }\n\n    if (Platform.OS === 'web') {\n      if (!name) {\n        this.name = AssetUris.getFilename(uri);\n      }\n      if (!type) {\n        this.type = AssetUris.getFileExtension(uri);\n      }\n    }\n  }\n\n  static loadAsync(moduleId: number | number[] | string | string[]): Promise<Asset[]> {\n    const moduleIds = Array.isArray(moduleId) ? moduleId : [moduleId];\n    return Promise.all(moduleIds.map(moduleId => Asset.fromModule(moduleId).downloadAsync()));\n  }\n\n  static fromModule(virtualAssetModule: number | string): Asset {\n    if (typeof virtualAssetModule === 'string') {\n      return Asset.fromURI(virtualAssetModule);\n    }\n\n    const meta = getAssetByID(virtualAssetModule);\n    if (!meta) {\n      throw new Error(`Module \"${virtualAssetModule}\" is missing from the asset registry`);\n    }\n\n    // Outside of the managed env we need the moduleId to initialize the asset\n    // because resolveAssetSource depends on it\n    if (!IS_ENV_WITH_UPDATES_ENABLED) {\n      const { uri } = resolveAssetSource(virtualAssetModule);\n      const asset = new Asset({\n        name: meta.name,\n        type: meta.type,\n        hash: meta.hash,\n        uri,\n        width: meta.width,\n        height: meta.height,\n      });\n\n      // TODO: FileSystem should probably support 'downloading' from drawable\n      // resources But for now it doesn't (it only supports raw resources) and\n      // React Native's Image works fine with drawable resource names for\n      // images.\n      if (Platform.OS === 'android' && !uri.includes(':') && (meta.width || meta.height)) {\n        asset.localUri = asset.uri;\n        asset.downloaded = true;\n      }\n\n      Asset.byHash[meta.hash] = asset;\n      return asset;\n    }\n\n    return Asset.fromMetadata(meta);\n  }\n\n  static fromMetadata(meta: AssetMetadata): Asset {\n    // The hash of the whole asset, not to be confused with the hash of a specific file returned\n    // from `selectAssetSource`\n    const metaHash = meta.hash;\n    if (Asset.byHash[metaHash]) {\n      return Asset.byHash[metaHash];\n    }\n\n    const { uri, hash } = AssetSources.selectAssetSource(meta);\n    const asset = new Asset({\n      name: meta.name,\n      type: meta.type,\n      hash,\n      uri,\n      width: meta.width,\n      height: meta.height,\n    });\n    Asset.byHash[metaHash] = asset;\n    return asset;\n  }\n\n  static fromURI(uri: string): Asset {\n    if (Asset.byUri[uri]) {\n      return Asset.byUri[uri];\n    }\n\n    // Possibly a Base64-encoded URI\n    let type = '';\n    if (uri.indexOf(';base64') > -1) {\n      type = uri.split(';')[0].split('/')[1];\n    } else {\n      const extension = AssetUris.getFileExtension(uri);\n      type = extension.startsWith('.') ? extension.substring(1) : extension;\n    }\n\n    const asset = new Asset({\n      name: '',\n      type,\n      hash: null,\n      uri,\n    });\n\n    Asset.byUri[uri] = asset;\n\n    return asset;\n  }\n\n  async downloadAsync(): Promise<this> {\n    if (this.downloaded) {\n      return this;\n    }\n    if (this.downloading) {\n      await new Promise((resolve, reject) => {\n        this._downloadCallbacks.push({ resolve, reject });\n      });\n      return this;\n    }\n    this.downloading = true;\n\n    try {\n      if (Platform.OS === 'web') {\n        if (ImageAssets.isImageType(this.type)) {\n          const { width, height, name } = await ImageAssets.getImageInfoAsync(this.uri);\n          this.width = width;\n          this.height = height;\n          this.name = name;\n        } else {\n          this.name = AssetUris.getFilename(this.uri);\n        }\n      }\n      this.localUri = await downloadAsync(this.uri, this.hash, this.type, this.name);\n\n      this.downloaded = true;\n      this._downloadCallbacks.forEach(({ resolve }) => resolve());\n    } catch (e) {\n      this._downloadCallbacks.forEach(({ reject }) => reject(e));\n      throw e;\n    } finally {\n      this.downloading = false;\n      this._downloadCallbacks = [];\n    }\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}