{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{Link,useTheme}from'@react-navigation/native';import Color from'color';import TabBarIcon from\"./TabBarIcon\";export default function BottomTabBarItem(_ref){var focused=_ref.focused,route=_ref.route,label=_ref.label,icon=_ref.icon,badge=_ref.badge,to=_ref.to,_ref$button=_ref.button,button=_ref$button===void 0?function(_ref2){var children=_ref2.children,style=_ref2.style,_onPress=_ref2.onPress,to=_ref2.to,accessibilityRole=_ref2.accessibilityRole,rest=_objectWithoutProperties(_ref2,[\"children\",\"style\",\"onPress\",\"to\",\"accessibilityRole\"]);if(Platform.OS==='web'&&to){return React.createElement(Link,_extends({},rest,{to:to,style:[styles.button,style],onPress:function onPress(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&(e.button==null||e.button===0)){e.preventDefault();_onPress===null||_onPress===void 0?void 0:_onPress(e);}}}),children);}else{return React.createElement(TouchableWithoutFeedback,_extends({},rest,{accessibilityRole:accessibilityRole,onPress:_onPress}),React.createElement(View,{style:style},children));}}:_ref$button,accessibilityLabel=_ref.accessibilityLabel,testID=_ref.testID,onPress=_ref.onPress,onLongPress=_ref.onLongPress,horizontal=_ref.horizontal,customActiveTintColor=_ref.activeTintColor,customInactiveTintColor=_ref.inactiveTintColor,_ref$activeBackground=_ref.activeBackgroundColor,activeBackgroundColor=_ref$activeBackground===void 0?'transparent':_ref$activeBackground,_ref$inactiveBackgrou=_ref.inactiveBackgroundColor,inactiveBackgroundColor=_ref$inactiveBackgrou===void 0?'transparent':_ref$inactiveBackgrou,_ref$showLabel=_ref.showLabel,showLabel=_ref$showLabel===void 0?true:_ref$showLabel,allowFontScaling=_ref.allowFontScaling,labelStyle=_ref.labelStyle,iconStyle=_ref.iconStyle,style=_ref.style;var _useTheme=useTheme(),colors=_useTheme.colors;var activeTintColor=customActiveTintColor===undefined?colors.primary:customActiveTintColor;var inactiveTintColor=customInactiveTintColor===undefined?Color(colors.text).mix(Color(colors.card),0.5).hex():customInactiveTintColor;var renderLabel=function renderLabel(_ref3){var focused=_ref3.focused;if(showLabel===false){return null;}var color=focused?activeTintColor:inactiveTintColor;if(typeof label==='string'){return React.createElement(Text,{numberOfLines:1,style:[styles.label,{color:color},horizontal?styles.labelBeside:styles.labelBeneath,labelStyle],allowFontScaling:allowFontScaling},label);}return label({focused:focused,color:color,position:horizontal?'beside-icon':'below-icon'});};var renderIcon=function renderIcon(_ref4){var focused=_ref4.focused;if(icon===undefined){return null;}var activeOpacity=focused?1:0;var inactiveOpacity=focused?0:1;return React.createElement(TabBarIcon,{route:route,horizontal:horizontal,badge:badge,activeOpacity:activeOpacity,inactiveOpacity:inactiveOpacity,activeTintColor:activeTintColor,inactiveTintColor:inactiveTintColor,renderIcon:icon,style:iconStyle});};var scene={route:route,focused:focused};var backgroundColor=focused?activeBackgroundColor:inactiveBackgroundColor;return button({to:to,onPress:onPress,onLongPress:onLongPress,testID:testID,accessibilityLabel:accessibilityLabel,accessibilityRole:'button',accessibilityState:{selected:focused},accessibilityStates:focused?['selected']:[],style:[styles.tab,{backgroundColor:backgroundColor},horizontal?styles.tabLandscape:styles.tabPortrait,style],children:React.createElement(React.Fragment,null,renderIcon(scene),renderLabel(scene))});}var styles=StyleSheet.create({tab:{flex:1,alignItems:'center'},tabPortrait:{justifyContent:'flex-end',flexDirection:'column'},tabLandscape:{justifyContent:'center',flexDirection:'row'},label:{textAlign:'center',backgroundColor:'transparent'},labelBeneath:{fontSize:10},labelBeside:{fontSize:13,marginLeft:20,marginTop:3},button:{display:'flex'}});","map":{"version":3,"mappings":"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","names":["React","Link","useTheme","Color","TabBarIcon","BottomTabBarItem","focused","route","label","icon","badge","to","button","children","style","onPress","accessibilityRole","rest","Platform","OS","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","TouchableWithoutFeedback","View","accessibilityLabel","testID","onLongPress","horizontal","customActiveTintColor","activeTintColor","customInactiveTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","allowFontScaling","labelStyle","iconStyle","colors","undefined","primary","text","mix","card","hex","renderLabel","color","Text","numberOfLines","labelBeside","labelBeneath","position","renderIcon","activeOpacity","inactiveOpacity","scene","backgroundColor","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/bottom-tabs/lib/module/views/BottomTabItem.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\nimport { Link, Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\n\nimport TabBarIcon from './TabBarIcon';\nimport type { BottomTabBarButtonProps, LabelPosition } from '../types';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: {\n        focused: boolean;\n        color: string;\n        position: LabelPosition;\n      }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Text to show in a badge on the tab icon.\n   */\n  badge?: number | string;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the icon element.\n   */\n  iconStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  label,\n  icon,\n  badge,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return (\n        <Link\n          {...rest}\n          to={to}\n          style={[styles.button, style]}\n          onPress={(e: any) => {\n            if (\n              !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n              (e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress?.(e);\n            }\n          }}\n        >\n          {children}\n        </Link>\n      );\n    } else {\n      return (\n        <TouchableWithoutFeedback\n          {...rest}\n          accessibilityRole={accessibilityRole}\n          onPress={onPress}\n        >\n          <View style={style}>{children}</View>\n        </TouchableWithoutFeedback>\n      );\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Text>\n      );\n    }\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n    });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        horizontal={horizontal}\n        badge={badge}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={iconStyle}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityState: { selected: focused },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 10,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}