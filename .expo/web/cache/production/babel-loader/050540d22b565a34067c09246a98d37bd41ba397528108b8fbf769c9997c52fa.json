{"ast":null,"code":"import invariant from'fbjs/lib/invariant';import requestIdleCallback,{cancelIdleCallback}from\"../../modules/requestIdleCallback\";var InteractionManager={Events:{interactionStart:'interactionStart',interactionComplete:'interactionComplete'},runAfterInteractions:function runAfterInteractions(task){var handle;var promise=new Promise(function(resolve){handle=requestIdleCallback(function(){if(task){resolve(task());}else{resolve();}});});return{then:promise.then.bind(promise),done:promise.then.bind(promise),cancel:function cancel(){cancelIdleCallback(handle);}};},createInteractionHandle:function createInteractionHandle(){return 1;},clearInteractionHandle:function clearInteractionHandle(handle){invariant(!!handle,'Must provide a handle to clear.');},addListener:function addListener(){}};export default InteractionManager;","map":{"version":3,"names":["invariant","requestIdleCallback","cancelIdleCallback","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","then","bind","done","cancel","createInteractionHandle","clearInteractionHandle","addListener"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/react-native-web/dist/exports/InteractionManager/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        } else {\n          resolve();\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nexport default InteractionManager;"],"mappings":"AASA,MAAOA,UAAS,KAAM,oBAAoB,CAC1C,MAAOC,oBAAmB,EAAIC,kBAAkB,yCAChD,GAAIC,mBAAkB,CAAG,CACvBC,MAAM,CAAE,CACNC,gBAAgB,CAAE,kBAAkB,CACpCC,mBAAmB,CAAE,qBACvB,CAAC,CAKDC,oBAAoB,CAAE,QAASA,qBAAoB,CAACC,IAAI,CAAE,CACxD,GAAIC,OAAM,CACV,GAAIC,QAAO,CAAG,GAAIC,QAAO,CAAC,SAAUC,OAAO,CAAE,CAC3CH,MAAM,CAAGR,mBAAmB,CAAC,UAAY,CACvC,GAAIO,IAAI,CAAE,CACRI,OAAO,CAACJ,IAAI,EAAE,CAAC,CACjB,CAAC,IAAM,CACLI,OAAO,EAAE,CACX,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,MAAO,CACLC,IAAI,CAAEH,OAAO,CAACG,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAC,CAChCK,IAAI,CAAEL,OAAO,CAACG,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAC,CAChCM,MAAM,CAAE,QAASA,OAAM,EAAG,CACxBd,kBAAkB,CAACO,MAAM,CAAC,CAC5B,CACF,CAAC,CACH,CAAC,CAKDQ,uBAAuB,CAAE,QAASA,wBAAuB,EAAG,CAC1D,MAAO,EAAC,CACV,CAAC,CAKDC,sBAAsB,CAAE,QAASA,uBAAsB,CAACT,MAAM,CAAE,CAC9DT,SAAS,CAAC,CAAC,CAACS,MAAM,CAAE,iCAAiC,CAAC,CACxD,CAAC,CACDU,WAAW,CAAE,QAASA,YAAW,EAAG,CAAC,CACvC,CAAC,CACD,cAAehB,mBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}