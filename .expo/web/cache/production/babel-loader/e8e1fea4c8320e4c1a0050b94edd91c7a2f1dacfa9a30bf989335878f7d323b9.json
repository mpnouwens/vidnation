{"ast":null,"code":"import*as React from'react';import NavigationRouteContext from\"./NavigationRouteContext\";export default function useRoute(){var route=React.useContext(NavigationRouteContext);if(route===undefined){throw new Error(\"Couldn't find a route object. Is your component inside a screen in a navigator?\");}return route;}","map":{"version":3,"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAEA,MAAOC,uBAAP,gCAQA,cAAe,SAASC,SAAT,EAER,CACL,GAAMC,MAAK,CAAGH,KAAK,CAACI,UAAN,CAAiBH,sBAAjB,CAAd,CAEA,GAAIE,KAAK,GAAKE,SAAd,CAAyB,CACvB,KAAM,IAAIC,MAAJ,CACJ,iFADI,CAAN,CAGD,CAED,MAAOH,MAAP,CACD","names":["React","NavigationRouteContext","useRoute","route","useContext","undefined","Error"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/core/lib/module/useRoute.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { ParamListBase } from '@react-navigation/routers';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<\n  T extends RouteProp<ParamListBase, string>\n>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}