{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{NavigationContext,NavigationRouteContext}from'@react-navigation/native';import Header from\"./Header\";import{forSlideLeft,forSlideUp,forNoAnimation,forSlideRight}from\"../../TransitionConfigs/HeaderStyleInterpolators\";import HeaderShownContext from\"../../utils/HeaderShownContext\";import PreviousSceneContext from\"../../utils/PreviousSceneContext\";export default function HeaderContainer(_ref){var mode=_ref.mode,scenes=_ref.scenes,layout=_ref.layout,insets=_ref.insets,getPreviousScene=_ref.getPreviousScene,getFocusedRoute=_ref.getFocusedRoute,onContentHeightChange=_ref.onContentHeightChange,gestureDirection=_ref.gestureDirection,styleInterpolator=_ref.styleInterpolator,style=_ref.style;var focusedRoute=getFocusedRoute();var isParentHeaderShown=React.useContext(HeaderShownContext);var parentPreviousScene=React.useContext(PreviousSceneContext);return React.createElement(View,{pointerEvents:\"box-none\",style:style},scenes.slice(-3).map(function(scene,i,self){var _getPreviousScene;if(mode==='screen'&&i!==self.length-1||!scene){return null;}var _ref2=scene.descriptor.options||{},header=_ref2.header,_ref2$headerShown=_ref2.headerShown,headerShown=_ref2$headerShown===void 0?isParentHeaderShown===false:_ref2$headerShown,headerTransparent=_ref2.headerTransparent;if(!headerShown){return null;}var isFocused=focusedRoute.key===scene.route.key;var previous=(_getPreviousScene=getPreviousScene({route:scene.route}))!==null&&_getPreviousScene!==void 0?_getPreviousScene:parentPreviousScene;var previousScene=self[i-1];var nextScene=self[i+1];var _ref3=(previousScene===null||previousScene===void 0?void 0:previousScene.descriptor.options)||{},_ref3$headerShown=_ref3.headerShown,previousHeaderShown=_ref3$headerShown===void 0?isParentHeaderShown===false:_ref3$headerShown;var _ref4=(nextScene===null||nextScene===void 0?void 0:nextScene.descriptor.options)||{},_ref4$headerShown=_ref4.headerShown,nextHeaderShown=_ref4$headerShown===void 0?isParentHeaderShown===false:_ref4$headerShown;var isHeaderStatic=previousHeaderShown===false&&!nextScene||nextHeaderShown===false;var props={mode:mode,layout:layout,insets:insets,scene:scene,previous:previous,navigation:scene.descriptor.navigation,styleInterpolator:mode==='float'?isHeaderStatic?gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?forSlideUp:gestureDirection==='horizontal-inverted'?forSlideRight:forSlideLeft:styleInterpolator:forNoAnimation};return React.createElement(NavigationContext.Provider,{key:scene.route.key,value:scene.descriptor.navigation},React.createElement(NavigationRouteContext.Provider,{value:scene.route},React.createElement(View,{onLayout:onContentHeightChange?function(e){return onContentHeightChange({route:scene.route,height:e.nativeEvent.layout.height});}:undefined,pointerEvents:isFocused?'box-none':'none',accessibilityElementsHidden:!isFocused,importantForAccessibility:isFocused?'auto':'no-hide-descendants',style:mode==='float'&&!isFocused||headerTransparent?styles.header:null},header!==undefined?header(props):React.createElement(Header,props))));}));}var styles=StyleSheet.create({header:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"mappings":"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","names":["React","NavigationContext","NavigationRouteContext","Header","forSlideLeft","forSlideUp","forNoAnimation","forSlideRight","HeaderShownContext","PreviousSceneContext","HeaderContainer","mode","scenes","layout","insets","getPreviousScene","getFocusedRoute","onContentHeightChange","gestureDirection","styleInterpolator","style","focusedRoute","isParentHeaderShown","useContext","parentPreviousScene","View","pointerEvents","slice","map","scene","i","self","length","descriptor","options","header","headerShown","headerTransparent","isFocused","key","route","previous","previousScene","nextScene","previousHeaderShown","nextHeaderShown","isHeaderStatic","props","navigation","Provider","value","onLayout","e","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","styles","StyleSheet","create","position","top","left","right"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/stack/lib/module/views/Header/HeaderContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  Route,\n  ParamListBase,\n} from '@react-navigation/native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport Header from './Header';\nimport {\n  forSlideLeft,\n  forSlideUp,\n  forNoAnimation,\n  forSlideRight,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nimport type {\n  Layout,\n  Scene,\n  StackHeaderStyleInterpolator,\n  StackNavigationProp,\n  GestureDirection,\n} from '../../types';\n\nexport type Props = {\n  mode: 'float' | 'screen';\n  layout: Layout;\n  insets: EdgeInsets;\n  scenes: (Scene<Route<string>> | undefined)[];\n  getPreviousScene: (props: {\n    route: Route<string>;\n  }) => Scene<Route<string>> | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  styleInterpolator: StackHeaderStyleInterpolator;\n  gestureDirection: GestureDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentPreviousScene = React.useContext(PreviousSceneContext);\n\n  return (\n    <View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const {\n          header,\n          headerShown = isParentHeaderShown === false,\n          headerTransparent,\n        } = scene.descriptor.options || {};\n\n        if (!headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.route.key;\n        const previous =\n          getPreviousScene({ route: scene.route }) ?? parentPreviousScene;\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousScene = self[i - 1];\n        const nextScene = self[i + 1];\n\n        const {\n          headerShown: previousHeaderShown = isParentHeaderShown === false,\n        } = previousScene?.descriptor.options || {};\n\n        const { headerShown: nextHeaderShown = isParentHeaderShown === false } =\n          nextScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          (previousHeaderShown === false &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextScene) ||\n          nextHeaderShown === false;\n\n        const props = {\n          mode,\n          layout,\n          insets,\n          scene,\n          previous,\n          navigation: scene.descriptor.navigation as StackNavigationProp<\n            ParamListBase\n          >,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? gestureDirection === 'vertical' ||\n                  gestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : gestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : styleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) =>\n                        onContentHeightChange({\n                          route: scene.route,\n                          height: e.nativeEvent.layout.height,\n                        })\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}