{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Color from'color';import CardSheet from\"./CardSheet\";import{PanGestureHandler,GestureState}from\"../GestureHandler\";import CardAnimationContext from\"../../utils/CardAnimationContext\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";import getInvertedMultiplier from\"../../utils/getInvertedMultiplier\";import memoize from\"../../utils/memoize\";var GESTURE_VELOCITY_IMPACT=0.3;var TRUE=1;var FALSE=0;var GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;var GESTURE_RESPONSE_DISTANCE_VERTICAL=135;var useNativeDriver=Platform.OS!=='web';var Card=function(_React$Component){_inherits(Card,_React$Component);var _super=_createSuper(Card);function Card(){var _this;_classCallCheck(this,Card);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"isCurrentlyMounted\",false);_defineProperty(_assertThisInitialized(_this),\"isClosing\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"inverted\",new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));_defineProperty(_assertThisInitialized(_this),\"layout\",{width:new Animated.Value(_this.props.layout.width),height:new Animated.Value(_this.props.layout.height)});_defineProperty(_assertThisInitialized(_this),\"isSwiping\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"interactionHandle\",void 0);_defineProperty(_assertThisInitialized(_this),\"pendingGestureCallback\",void 0);_defineProperty(_assertThisInitialized(_this),\"lastToValue\",void 0);_defineProperty(_assertThisInitialized(_this),\"animate\",function(_ref){var closing=_ref.closing,velocity=_ref.velocity;var _this$props=_this.props,gesture=_this$props.gesture,transitionSpec=_this$props.transitionSpec,onOpen=_this$props.onOpen,onClose=_this$props.onClose,onTransitionStart=_this$props.onTransitionStart;var toValue=_this.getAnimateToValue(_objectSpread(_objectSpread({},_this.props),{},{closing:closing}));_this.lastToValue=toValue;var spec=closing?transitionSpec.close:transitionSpec.open;var animation=spec.animation==='spring'?Animated.spring:Animated.timing;_this.setPointerEventsEnabled(!closing);_this.handleStartInteraction();clearTimeout(_this.pendingGestureCallback);onTransitionStart===null||onTransitionStart===void 0?void 0:onTransitionStart({closing:closing});animation(gesture,_objectSpread(_objectSpread({},spec.config),{},{velocity:velocity,toValue:toValue,useNativeDriver:useNativeDriver,isInteraction:false})).start(function(_ref2){var finished=_ref2.finished;_this.handleEndInteraction();clearTimeout(_this.pendingGestureCallback);if(finished){if(closing){onClose();}else{onOpen();}if(_this.isCurrentlyMounted){_this.forceUpdate();}}});});_defineProperty(_assertThisInitialized(_this),\"getAnimateToValue\",function(_ref3){var closing=_ref3.closing,layout=_ref3.layout,gestureDirection=_ref3.gestureDirection;if(!closing){return 0;}return getDistanceForDirection(layout,gestureDirection);});_defineProperty(_assertThisInitialized(_this),\"setPointerEventsEnabled\",function(enabled){var _this$contentRef$curr;var pointerEvents=enabled?'box-none':'none';(_this$contentRef$curr=_this.contentRef.current)===null||_this$contentRef$curr===void 0?void 0:_this$contentRef$curr.setNativeProps({pointerEvents:pointerEvents});});_defineProperty(_assertThisInitialized(_this),\"handleStartInteraction\",function(){if(_this.interactionHandle===undefined){_this.interactionHandle=InteractionManager.createInteractionHandle();}});_defineProperty(_assertThisInitialized(_this),\"handleEndInteraction\",function(){if(_this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=undefined;}});_defineProperty(_assertThisInitialized(_this),\"handleGestureStateChange\",function(_ref4){var nativeEvent=_ref4.nativeEvent;var _this$props2=_this.props,layout=_this$props2.layout,onClose=_this$props2.onClose,onGestureBegin=_this$props2.onGestureBegin,onGestureCanceled=_this$props2.onGestureCanceled,onGestureEnd=_this$props2.onGestureEnd,gestureDirection=_this$props2.gestureDirection,gestureVelocityImpact=_this$props2.gestureVelocityImpact;switch(nativeEvent.state){case GestureState.BEGAN:_this.isSwiping.setValue(TRUE);_this.handleStartInteraction();onGestureBegin===null||onGestureBegin===void 0?void 0:onGestureBegin();break;case GestureState.CANCELLED:{_this.isSwiping.setValue(FALSE);_this.handleEndInteraction();var velocity=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?nativeEvent.velocityY:nativeEvent.velocityX;_this.animate({closing:_this.props.closing,velocity:velocity});onGestureCanceled===null||onGestureCanceled===void 0?void 0:onGestureCanceled();break;}case GestureState.END:{_this.isSwiping.setValue(FALSE);var distance;var translation;var _velocity;if(gestureDirection==='vertical'||gestureDirection==='vertical-inverted'){distance=layout.height;translation=nativeEvent.translationY;_velocity=nativeEvent.velocityY;}else{distance=layout.width;translation=nativeEvent.translationX;_velocity=nativeEvent.velocityX;}var closing=(translation+_velocity*gestureVelocityImpact)*getInvertedMultiplier(gestureDirection)>distance/2?_velocity!==0||translation!==0:_this.props.closing;_this.animate({closing:closing,velocity:_velocity});if(closing){_this.pendingGestureCallback=setTimeout(function(){onClose();_this.forceUpdate();},32);}onGestureEnd===null||onGestureEnd===void 0?void 0:onGestureEnd();break;}}});_defineProperty(_assertThisInitialized(_this),\"getInterpolatedStyle\",memoize(function(styleInterpolator,index,current,next,layout,insetTop,insetRight,insetBottom,insetLeft){return styleInterpolator({index:index,current:{progress:current},next:next&&{progress:next},closing:_this.isClosing,swiping:_this.isSwiping,inverted:_this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}});}));_defineProperty(_assertThisInitialized(_this),\"getCardAnimationContext\",memoize(function(index,current,next,layout,insetTop,insetRight,insetBottom,insetLeft){return{index:index,current:{progress:current},next:next&&{progress:next},closing:_this.isClosing,swiping:_this.isSwiping,inverted:_this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}};}));_defineProperty(_assertThisInitialized(_this),\"contentRef\",React.createRef());return _this;}_createClass(Card,[{key:\"componentDidMount\",value:function componentDidMount(){this.animate({closing:this.props.closing});this.isCurrentlyMounted=true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props3=this.props,layout=_this$props3.layout,gestureDirection=_this$props3.gestureDirection,closing=_this$props3.closing;var width=layout.width,height=layout.height;if(width!==prevProps.layout.width){this.layout.width.setValue(width);}if(height!==prevProps.layout.height){this.layout.height.setValue(height);}if(gestureDirection!==prevProps.gestureDirection){this.inverted.setValue(getInvertedMultiplier(gestureDirection));}var toValue=this.getAnimateToValue(this.props);if(this.getAnimateToValue(prevProps)!==toValue||this.lastToValue!==toValue){this.animate({closing:closing});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.isCurrentlyMounted=false;this.handleEndInteraction();}},{key:\"gestureActivationCriteria\",value:function gestureActivationCriteria(){var _this$props4=this.props,layout=_this$props4.layout,gestureDirection=_this$props4.gestureDirection,gestureResponseDistance=_this$props4.gestureResponseDistance;var distance=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?(gestureResponseDistance===null||gestureResponseDistance===void 0?void 0:gestureResponseDistance.vertical)!==undefined?gestureResponseDistance.vertical:GESTURE_RESPONSE_DISTANCE_VERTICAL:(gestureResponseDistance===null||gestureResponseDistance===void 0?void 0:gestureResponseDistance.horizontal)!==undefined?gestureResponseDistance.horizontal:GESTURE_RESPONSE_DISTANCE_HORIZONTAL;if(gestureDirection==='vertical'){return{maxDeltaX:15,minOffsetY:5,hitSlop:{bottom:-layout.height+distance}};}else if(gestureDirection==='vertical-inverted'){return{maxDeltaX:15,minOffsetY:-5,hitSlop:{top:-layout.height+distance}};}else{var hitSlop=-layout.width+distance;var invertedMultiplier=getInvertedMultiplier(gestureDirection);if(invertedMultiplier===1){return{minOffsetX:5,maxDeltaY:20,hitSlop:{right:hitSlop}};}else{return{minOffsetX:-5,maxDeltaY:20,hitSlop:{left:hitSlop}};}}}},{key:\"render\",value:function render(){var _this$props5=this.props,styleInterpolator=_this$props5.styleInterpolator,index=_this$props5.index,current=_this$props5.current,gesture=_this$props5.gesture,next=_this$props5.next,layout=_this$props5.layout,insets=_this$props5.insets,overlay=_this$props5.overlay,overlayEnabled=_this$props5.overlayEnabled,shadowEnabled=_this$props5.shadowEnabled,gestureEnabled=_this$props5.gestureEnabled,gestureDirection=_this$props5.gestureDirection,pageOverflowEnabled=_this$props5.pageOverflowEnabled,children=_this$props5.children,customContainerStyle=_this$props5.containerStyle,contentStyle=_this$props5.contentStyle,rest=_objectWithoutProperties(_this$props5,[\"styleInterpolator\",\"index\",\"current\",\"gesture\",\"next\",\"layout\",\"insets\",\"overlay\",\"overlayEnabled\",\"shadowEnabled\",\"gestureEnabled\",\"gestureDirection\",\"pageOverflowEnabled\",\"children\",\"containerStyle\",\"contentStyle\"]);var interpolatedStyle=this.getInterpolatedStyle(styleInterpolator,index,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);var animationContext=this.getCardAnimationContext(index,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);var containerStyle=interpolatedStyle.containerStyle,cardStyle=interpolatedStyle.cardStyle,overlayStyle=interpolatedStyle.overlayStyle,shadowStyle=interpolatedStyle.shadowStyle;var handleGestureEvent=gestureEnabled?Animated.event([{nativeEvent:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?{translationY:gesture}:{translationX:gesture}}],{useNativeDriver:useNativeDriver}):undefined;var _StyleSheet$flatten=StyleSheet.flatten(contentStyle||{}),backgroundColor=_StyleSheet$flatten.backgroundColor;var isTransparent=typeof backgroundColor==='string'?Color(backgroundColor).alpha()===0:false;return React.createElement(CardAnimationContext.Provider,{value:animationContext},React.createElement(Animated.View,{style:{opacity:current},collapsable:false}),React.createElement(View,_extends({pointerEvents:\"box-none\"},rest),overlayEnabled?React.createElement(View,{pointerEvents:\"box-none\",style:StyleSheet.absoluteFill},overlay({style:overlayStyle})):null,React.createElement(Animated.View,{style:[styles.container,containerStyle,customContainerStyle],pointerEvents:\"box-none\"},React.createElement(PanGestureHandler,_extends({enabled:layout.width!==0&&gestureEnabled,onGestureEvent:handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange},this.gestureActivationCriteria()),React.createElement(Animated.View,{style:[styles.container,cardStyle]},shadowEnabled&&shadowStyle&&!isTransparent?React.createElement(Animated.View,{style:[styles.shadow,gestureDirection==='horizontal'?[styles.shadowHorizontal,styles.shadowLeft]:gestureDirection==='horizontal-inverted'?[styles.shadowHorizontal,styles.shadowRight]:gestureDirection==='vertical'?[styles.shadowVertical,styles.shadowTop]:[styles.shadowVertical,styles.shadowBottom],{backgroundColor:backgroundColor},shadowStyle],pointerEvents:\"none\"}):null,React.createElement(CardSheet,{ref:this.contentRef,enabled:pageOverflowEnabled,layout:layout,style:contentStyle},children))))));}}]);return Card;}(React.Component);export{Card as default};_defineProperty(Card,\"defaultProps\",{overlayEnabled:Platform.OS!=='ios',shadowEnabled:true,gestureEnabled:true,gestureVelocityImpact:GESTURE_VELOCITY_IMPACT,overlay:function overlay(_ref5){var style=_ref5.style;return style?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.overlay,style]}):null;}});var styles=StyleSheet.create({container:{flex:1},overlay:{flex:1,backgroundColor:'#000'},shadow:{position:'absolute',shadowRadius:5,shadowColor:'#000',shadowOpacity:0.3},shadowHorizontal:{top:0,bottom:0,width:3,shadowOffset:{width:-1,height:1}},shadowLeft:{left:0},shadowRight:{right:0},shadowVertical:{left:0,right:0,height:3,shadowOffset:{width:1,height:-1}},shadowTop:{top:0},shadowBottom:{bottom:0}});","map":{"version":3,"mappings":"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","names":["React","Color","CardSheet","PanGestureHandler","GestureState","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","Card","Animated","Value","props","gestureDirection","width","layout","height","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransitionStart","toValue","getAnimateToValue","lastToValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","config","isInteraction","start","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","enabled","pointerEvents","contentRef","current","setNativeProps","interactionHandle","undefined","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","BEGAN","isSwiping","setValue","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","index","next","insetTop","insetRight","insetBottom","insetLeft","progress","isClosing","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","prevProps","gestureResponseDistance","vertical","horizontal","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","interpolatedStyle","getInterpolatedStyle","animationContext","getCardAnimationContext","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","StyleSheet","flatten","backgroundColor","isTransparent","alpha","Provider","value","View","style","opacity","collapsable","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","handleGestureStateChange","gestureActivationCriteria","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","ref","Component","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/@react-navigation/stack/lib/module/views/Stack/Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\n\nimport CardSheet from './CardSheet';\nimport {\n  PanGestureHandler,\n  GestureState,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport type {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransitionStart?.({ closing });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = (setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any) as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={animationContext}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View style={[styles.container, cardStyle]}>\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}