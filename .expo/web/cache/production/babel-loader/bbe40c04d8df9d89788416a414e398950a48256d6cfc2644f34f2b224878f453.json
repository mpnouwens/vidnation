{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';import invariant from'fbjs/lib/invariant';var EventTypes=['url'];var listeners=[];export default{addEventListener:function addEventListener(type,listener){invariant(EventTypes.indexOf(type)!==-1,\"Linking.addEventListener(): \"+type+\" is not a valid event\");var nativeListener=function nativeListener(nativeEvent){return listener({url:window.location.href,nativeEvent:nativeEvent});};listeners.push({listener:listener,nativeListener:nativeListener});window.addEventListener('message',nativeListener,false);},removeEventListener:function removeEventListener(type,listener){invariant(EventTypes.indexOf(type)!==-1,\"Linking.removeEventListener(): \"+type+\" is not a valid event.\");var listenerIndex=listeners.findIndex(function(pair){return pair.listener===listener;});invariant(listenerIndex!==-1,'Linking.removeEventListener(): cannot remove an unregistered event listener.');var nativeListener=listeners[listenerIndex].nativeListener;window.removeEventListener('message',nativeListener,false);listeners.splice(listenerIndex,1);},canOpenURL:function canOpenURL(url){return _regeneratorRuntime.async(function canOpenURL$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",true);case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);},getInitialURL:function getInitialURL(){return _regeneratorRuntime.async(function getInitialURL$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(canUseDOM){_context2.next=2;break;}return _context2.abrupt(\"return\",'');case 2:return _context2.abrupt(\"return\",window.location.href);case 3:case\"end\":return _context2.stop();}}},null,null,null,Promise);},openURL:function openURL(url){return _regeneratorRuntime.async(function openURL$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(canUseDOM){window.location=new URL(url,window.location).toString();}case 1:case\"end\":return _context3.stop();}}},null,null,null,Promise);}};","map":{"version":3,"mappings":"4DAAA,OAASA,SAAS,KAAQ,+BAA+B,CACzD,MAAOC,UAAS,KAAM,oBAAoB,CAI1C,GAAMC,WAAU,CAAG,CAAC,KAAK,CAAC,CAE1B,GAAMC,UAAS,CAAmE,EAAE,CAEpF,cAAe,CACbC,gBAAgB,2BAACC,IAAW,CAAEC,QAAqB,EACjDL,SAAS,CACPC,UAAU,CAACK,OAAO,CAACF,IAAI,CAAC,GAAK,CAAC,CAAC,gCACAA,IAAI,yBACpC,CACD,GAAMG,eAAc,CAAsB,QAApCA,eAAc,CAAsBC,WAAW,QACnDH,SAAQ,CAAC,CAAEI,GAAG,CAAEC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAEJ,WAAW,CAAXA,WAAW,CAAE,CAAC,GACtDN,SAAS,CAACW,IAAI,CAAC,CAAER,QAAQ,CAARA,QAAQ,CAAEE,cAAc,CAAdA,cAAc,CAAE,CAAC,CAC5CG,MAAM,CAACP,gBAAgB,CAAC,SAAS,CAAEI,cAAc,CAAE,KAAK,CAAC,CAC3D,CAAC,CAEDO,mBAAmB,8BAACV,IAAW,CAAEC,QAAqB,EACpDL,SAAS,CACPC,UAAU,CAACK,OAAO,CAACF,IAAI,CAAC,GAAK,CAAC,CAAC,mCACGA,IAAI,0BACvC,CACD,GAAMW,cAAa,CAAGb,SAAS,CAACc,SAAS,CAAC,aAAI,QAAIC,KAAI,CAACZ,QAAQ,GAAKA,QAAQ,GAAC,CAC7EL,SAAS,CACPe,aAAa,GAAK,CAAC,CAAC,CACpB,8EAA8E,CAC/E,CACD,GAAMR,eAAc,CAAGL,SAAS,CAACa,aAAa,CAAC,CAACR,cAAc,CAC9DG,MAAM,CAACI,mBAAmB,CAAC,SAAS,CAAEP,cAAc,CAAE,KAAK,CAAC,CAC5DL,SAAS,CAACgB,MAAM,CAACH,aAAa,CAAE,CAAC,CAAC,CACpC,CAAC,CAEKI,UAAU,qBAACV,GAAW,sJAEnB,IAAI,wEAGPW,aAAa,uJACZrB,SAAS,2DAAS,EAAE,0CAClBW,MAAM,CAACC,QAAQ,CAACC,IAAI,yEAGvBS,OAAO,kBAACZ,GAAW,sHACvB,GAAIV,SAAS,CAAE,CAEbW,MAAM,CAACC,QAAQ,CAAG,GAAIW,IAAG,CAACb,GAAG,CAAEC,MAAM,CAACC,QAAQ,CAAC,CAACY,QAAQ,EAAE,EAC3D,uEAEJ","names":["canUseDOM","invariant","EventTypes","listeners","addEventListener","type","listener","indexOf","nativeListener","nativeEvent","url","window","location","href","push","removeEventListener","listenerIndex","findIndex","pair","splice","canOpenURL","getInitialURL","openURL","URL","toString"],"sources":["/Users/michaeladmin/Documents/GitHub/vidnation/node_modules/expo-linking/src/ExpoLinking.web.ts"],"sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\n\nimport { NativeURLListener, URLListener } from './Linking.types';\n\nconst EventTypes = ['url'];\n\nconst listeners: { listener: URLListener; nativeListener: NativeURLListener }[] = [];\n\nexport default {\n  addEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.addEventListener(): ${type} is not a valid event`\n    );\n    const nativeListener: NativeURLListener = nativeEvent =>\n      listener({ url: window.location.href, nativeEvent });\n    listeners.push({ listener, nativeListener });\n    window.addEventListener('message', nativeListener, false);\n  },\n\n  removeEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.removeEventListener(): ${type} is not a valid event.`\n    );\n    const listenerIndex = listeners.findIndex(pair => pair.listener === listener);\n    invariant(\n      listenerIndex !== -1,\n      'Linking.removeEventListener(): cannot remove an unregistered event listener.'\n    );\n    const nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n\n  async canOpenURL(url: string): Promise<boolean> {\n    // In reality this should be able to return false for links like `chrome://` on chrome.\n    return true;\n  },\n\n  async getInitialURL(): Promise<string> {\n    if (!canUseDOM) return '';\n    return window.location.href;\n  },\n\n  async openURL(url: string): Promise<void> {\n    if (canUseDOM) {\n      // @ts-ignore\n      window.location = new URL(url, window.location).toString();\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}