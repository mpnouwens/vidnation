{"version":3,"sources":["assets/movies.png","assets/series.png","assets/episodes.png","store/models.ts","store/search.ts","store/index.ts","components/TextInput/index.tsx","screens/Movies/index.tsx","screens/Series/index.tsx","screens/Episodes/index.tsx","navigation/TabNavigator.tsx","App.tsx","assets/icon.png","assets/logo.png"],"names":["module","exports","models","search","createModel","state","reducers","searchText","effects","dispatch","searchAsync","payload","console","log","Promise","resolve","setTimeout","store","init","TextInput","placeholder","onChangeText","padding","marginBottom","secureTextEntry","onTouchStart","backgroundColor","color","borderColor","fontSize","style","borderRadius","height","width","Movies","View","styles","container","input","props","setSearchText","flex","alignItems","Image","source","require","logo","Text","React","Component","StyleSheet","create","margin","connect","Series","Episodes","enableScreens","Tab","createBottomTabNavigator","MovieStack","createStackNavigator","MovieStackScreen","Navigator","Screen","name","component","options","title","SeriesStack","SeriesStackScreen","EpisodeStack","EpisodeStackScreen","MyTabs","initialRouteName","tabBarOptions","showLabel","activeTintColor","inactiveTintColor","tabBarLabel","tabBarIcon","focused","MaterialCommunityIcons","size","FontAwesome","App","isReady","this","NavigationContainer","TabNavigator","AppLoading","startAsync","_cacheResourcesAsync","onFinish","setState","onError","warn","images","cacheImages","map","image","Asset","fromModule","downloadAsync","all"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,8NCO9BC,EAAoB,CAAEC,OCJbC,cAAyB,CAC3CC,MAAO,GACPC,SAAU,CACNC,WADM,SACKF,EAAOE,GACd,MAAO,CACHF,QACAE,gBAIZC,QAAS,SAACC,GAAD,MAAe,CAGdC,YAHc,SAGFC,EAAiBN,GAHf,yEAIhBO,QAAQC,IAAI,6BAA8BF,GAC1CC,QAAQC,IAAI,6BAA8BR,GAL1B,mBAMV,IAAIS,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,SANjC,OAOhBN,EAASN,OAAOI,WAAWI,GAPX,kECVfM,EAAQC,YAAK,CACtBhB,W,0EC6CWiB,EAjCsC,SAAC,GAW/C,IAVLC,EAUI,EAVJA,YACAC,EASI,EATJA,aACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,gBACAC,EAKI,EALJA,aACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,SAEA,OACE,kBAAC,IAAD,CACEC,MAAO,CACLJ,gBAAiBA,EACjBC,MAAOA,EACPJ,aAAcA,EACdQ,aAAc,GACdT,QAASA,EACTO,SAAUA,EACVG,OAAQ,GACRJ,YAAaA,EACbK,MAAO,QAETb,YAAaA,EACbC,aAAcA,EACdG,gBAAiBA,EACjBC,aAAcA,K,0aCrCpB,IAaMS,E,qIACQ,IAAD,OACL,OACI,oCACI,kBAACC,EAAA,EAAD,CAAML,MAAOM,EAAOC,WAChB,kBAAC,EAAD,CACIjB,YAAY,gBACZC,aAAc,SAACiB,GAAoB,EAAKC,MAAMC,cAAcF,IAC5DZ,gBAAgB,UAChBC,MAAM,QACNC,YAAY,OACZC,SAAU,GACVP,QAAS,GACTC,aAAc,KAGtB,kBAACY,EAAA,EAAD,CAAML,MAAO,CAAEW,KAAM,EAAGC,WAAY,WAChC,kBAACC,EAAA,EAAD,CAAOC,OAAQC,EAAQ,KAA4Bf,MAAOM,EAAOU,OACjE,kBAACC,EAAA,EAAD,CAAMjB,MAAO,CAAED,SAAU,KAAzB,qC,GAlBCmB,IAAMC,WAyBrBb,EAASc,IAAWC,OAAO,CAC7Bd,UAAW,CACPI,KAAM,EACNC,WAAY,SACZU,OAAQ,IAEZN,KAAM,CACFb,MAAO,IACPD,OAAQ,IACRT,aAAc,KAKP8B,eApDE,SAAChD,GAAD,MAAuB,CACpCF,OAAQE,EAAMF,WAGE,SAACM,GAAD,MAAyB,CACzC+B,cAAe,SAACjC,GAAD,OAAwBE,EAASN,OAAOI,WAAWA,IAClEG,YAAa,SAACH,GAAD,OAAwBE,EAASN,OAAOO,YAAYH,OA8CtD8C,CAA+BnB,G,0aCpD9C,IAaMoB,E,qIACQ,IAAD,OACL,OACI,oCACI,kBAACnB,EAAA,EAAD,CAAML,MAAOM,EAAOC,WAChB,kBAAC,EAAD,CACIjB,YAAY,gBACZC,aAAc,SAACiB,GAAoB,EAAKC,MAAMC,cAAcF,IAC5DZ,gBAAgB,UAChBC,MAAM,QACNC,YAAY,OACZC,SAAU,GACVP,QAAS,GACTC,aAAc,KAGtB,kBAACY,EAAA,EAAD,CAAML,MAAO,CAAEW,KAAM,IAAKC,WAAY,WAClC,kBAACC,EAAA,EAAD,CAAOC,OAAQC,EAAQ,KAA4Bf,MAAOM,EAAOU,OACjE,kBAACC,EAAA,EAAD,CAAMjB,MAAO,CAAED,SAAU,KAAzB,qC,GAlBCmB,IAAMC,WAyBrBb,EAASc,IAAWC,OAAO,CAC7Bd,UAAW,CACPI,KAAM,EACNC,WAAY,SACZU,OAAQ,IAEZN,KAAM,CACFb,MAAO,IACPD,OAAQ,IACRT,aAAc,KAKP8B,eApDE,SAAChD,GAAD,MAAuB,CACpCF,OAAQE,EAAMF,WAGE,SAACM,GAAD,MAAyB,CACzC+B,cAAe,SAACjC,GAAD,OAAwBE,EAASN,OAAOI,WAAWA,IAClEG,YAAa,SAACH,GAAD,OAAwBE,EAASN,OAAOO,YAAYH,OA8CtD8C,CAA+BC,G,0aCpD9C,IAaMC,E,qIACQ,IAAD,OACL,OACI,oCACI,kBAACpB,EAAA,EAAD,CAAML,MAAOM,EAAOC,WAChB,kBAAC,EAAD,CACIjB,YAAY,kBACZC,aAAc,SAACiB,GAAoB,EAAKC,MAAMC,cAAcF,IAC5DZ,gBAAgB,UAChBC,MAAM,QACNC,YAAY,OACZC,SAAU,GACVP,QAAS,GACTC,aAAc,KAGtB,kBAACY,EAAA,EAAD,CAAML,MAAO,CAAEW,KAAM,IAAKC,WAAY,WAClC,kBAACC,EAAA,EAAD,CAAOC,OAAQC,EAAQ,KAA8Bf,MAAOM,EAAOU,OACnE,kBAACC,EAAA,EAAD,CAAMjB,MAAO,CAAED,SAAU,KAAzB,uC,GAlBGmB,IAAMC,WAyBvBb,EAASc,IAAWC,OAAO,CAC7Bd,UAAW,CACPI,KAAM,EACNC,WAAY,SACZU,OAAQ,IAEZN,KAAM,CACFb,MAAO,IACPD,OAAQ,IACRT,aAAc,KAKP8B,eApDE,SAAChD,GAAD,MAAuB,CACpCF,OAAQE,EAAMF,WAGE,SAACM,GAAD,MAAyB,CACzC+B,cAAe,SAACjC,GAAD,OAAwBE,EAASN,OAAOI,WAAWA,IAClEG,YAAa,SAACH,GAAD,OAAwBE,EAASN,OAAOO,YAAYH,OA8CtD8C,CAA+BE,G,iBChD9CC,0BACA,IAAMC,EAAMC,cAENC,EAAaC,cACbC,EAAmB,WACrB,OACI,gBAACF,EAAWG,UAAZ,KACI,gBAACH,EAAWI,OAAZ,CACIC,KAAK,SACLC,UAAW/B,EACXgC,QAAS,CACLC,MAAO,gBAACxB,EAAA,EAAD,CAAOC,OAAQC,EAAQ,IAAuBf,MAAOM,GAAOU,YAOjFsB,EAAcR,cACdS,EAAoB,WACtB,OACI,gBAACD,EAAYN,UAAb,KACI,gBAACM,EAAYL,OAAb,CACIC,KAAK,SACLC,UAAWX,EACXY,QAAS,CAAEC,MAAO,gBAACxB,EAAA,EAAD,CAAOC,OAAQC,EAAQ,IAAuBf,MAAOM,GAAOU,YAMxFwB,EAAeV,cACfW,EAAqB,WACvB,OACI,gBAACD,EAAaR,UAAd,KACI,gBAACQ,EAAaP,OAAd,CACIC,KAAK,WACLC,UAAWV,EACXW,QAAS,CAAEC,MAAO,gBAACxB,EAAA,EAAD,CAAOC,OAAQC,EAAQ,IAAuBf,MAAOM,GAAOU,YAmE9F,IAAMV,GAASc,IAAWC,OAAO,CAC7BL,KAAM,CACFb,MAAO,IACPD,OAAQ,MAKDwC,GArEf,WAEI,OACI,gBAACf,EAAIK,UAAL,CACIW,iBAAiB,WACjBC,cAAe,CACXC,WAAW,EACXC,gBAAiB,UACjBC,kBAAmB,YAMvB,gBAACpB,EAAIM,OAAL,CACIC,KAAK,SACLC,UAAWJ,EACXK,QAAS,CACLY,YAAa,WACbC,WAAY,gBAAGC,EAAH,EAAGA,QAAH,OACR,gBAACC,EAAA,EAAD,CACIjB,KAAK,aACLkB,KAAM,GACNvD,MAAOqD,EAAU,UAAY,gBAM7C,gBAACvB,EAAIM,OAAL,CACIC,KAAK,SACLC,UAAWI,EACXH,QAAS,CACLY,YAAa,SACbC,WAAY,gBAAGC,EAAH,EAAGA,QAAH,OACR,gBAACC,EAAA,EAAD,CACIjB,KAAK,iBACLkB,KAAM,GACNvD,MAAOqD,EAAU,UAAY,gBAK7C,gBAACvB,EAAIM,OAAL,CACIC,KAAK,gBACLC,UAAWM,EACXL,QAAS,CACLY,YAAa,gBACbC,WAAY,gBAAGC,EAAH,EAAGA,QAAH,OACR,gBAACG,EAAA,EAAD,CACInB,KAAK,eACLkB,KAAM,GACNvD,MAAOqD,EAAU,UAAY,kB,+aCjGpCI,G,mLACnB/E,MAAQ,CACNgF,SAAS,G,+CAGD,IAAD,OACP,OAAKC,KAAKjF,MAAMgF,QAWd,kBAAC,IAAD,CAAUpE,MAAOA,GACf,kBAACsE,EAAA,EAAD,KACE,kBAACC,GAAD,QAXF,kBAACC,EAAA,EAAD,CACEC,WAAYJ,KAAKK,qBACjBC,SAAU,kBAAM,EAAKC,SAAS,CAAER,SAAS,KACzCS,QAASlF,QAAQmF,S,8HAejBC,EAAS,CACbnD,EAAQ,KACRA,EAAQ,IACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAGJoD,EAAcD,EAAOE,KAAI,SAACC,GAC9B,OAAOC,IAAMC,WAAWF,GAAOG,mB,kBAE1BxF,QAAQyF,IAAIN,I,mEArCUjD,IAAMC,Y,0DCVvCjD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/app.0a8d0b0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movies.31d1ba52.png\";","module.exports = __webpack_public_path__ + \"static/media/series.27088644.png\";","module.exports = __webpack_public_path__ + \"static/media/episodes.90e4eda9.png\";","import { Models } from '@rematch/core'\nimport { search } from './search'\n\nexport interface RootModel extends Models<RootModel> {\n    search: typeof search\n}\n\nexport const models: RootModel = { search }\n","import { createModel, Reducer } from '@rematch/core'\nimport { RootModel } from './models'\n\nexport const search = createModel<RootModel>()({\n    state: {},\n    reducers: {\n        searchText(state, searchText: string) {\n            return {\n                state,\n                searchText\n            }\n        }\n    },\n    effects: (dispatch) => ({\n        // handle state changes with impure functions.\n        // use async/await for async actions\n        async searchAsync(payload: string, state) {\n            console.log('This is current root state', payload);\n            console.log('This is current root state', state);\n            await new Promise(resolve => setTimeout(resolve, 1000))\n            dispatch.search.searchText(payload)\n        },\n    })\n})\n","import { init, RematchDispatch, RematchRootState } from '@rematch/core'\nimport { models, RootModel } from './models'\n\nexport const store = init({\n    models,\n})\n\nexport type Store = typeof store\nexport type Dispatch = RematchDispatch<RootModel>\nexport type RootState = RematchRootState<RootModel>","import React, { FunctionComponent } from \"react\";\nimport { TextInput as VTextInput } from \"react-native\";\n\ntype TextInputProps = {\n  placeholder: string;\n  onChangeText: any;\n  padding: number;\n  marginBottom?: number;\n  secureTextEntry?: boolean;\n  onTouchStart?: any;\n  backgroundColor: string;\n  color: string;\n  borderColor: string;\n  fontSize?: number;\n};\n\nconst TextInput: FunctionComponent<TextInputProps> = ({\n  placeholder,\n  onChangeText,\n  padding,\n  marginBottom,\n  secureTextEntry,\n  onTouchStart,\n  backgroundColor,\n  color,\n  borderColor,\n  fontSize,\n}) => {\n  return (\n    <VTextInput\n      style={{\n        backgroundColor: backgroundColor,\n        color: color,\n        marginBottom: marginBottom,\n        borderRadius: 10,\n        padding: padding,\n        fontSize: fontSize,\n        height: 60,\n        borderColor: borderColor,\n        width: \"100%\"\n      }}\n      placeholder={placeholder}\n      onChangeText={onChangeText}\n      secureTextEntry={secureTextEntry}\n      onTouchStart={onTouchStart}\n    />\n  );\n};\n\nexport default TextInput;","import React from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport { TextInput } from '../../components'\nimport { connect } from 'react-redux';\nimport 'redux';\nimport { RootState, Dispatch } from '../../store'\n\nconst mapState = (state: RootState) => ({\n    search: state.search,\n})\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n    setSearchText: (searchText: string) => dispatch.search.searchText(searchText),\n    searchAsync: (searchText: string) => dispatch.search.searchAsync(searchText)\n})\n\ntype StateProps = ReturnType<typeof mapState>\ntype DispatchProps = ReturnType<typeof mapDispatch>\ntype Props = StateProps & DispatchProps\n\nclass Movies extends React.Component<Props> {\n    render() {\n        return (\n            <>\n                <View style={styles.container}>\n                    <TextInput\n                        placeholder=\"Search movies\"\n                        onChangeText={(input: string) => { this.props.setSearchText(input) }}\n                        backgroundColor=\"#E3E3E3\"\n                        color=\"black\"\n                        borderColor=\"gray\"\n                        fontSize={16}\n                        padding={10}\n                        marginBottom={5}\n                    />\n                </View>\n                <View style={{ flex: 3, alignItems: \"center\" }}>\n                    <Image source={require(\"../../assets/movies.png\")} style={styles.logo} />\n                    <Text style={{ fontSize: 18 }}>Find your favourite movies.</Text>\n                </View>\n            </>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        margin: 10\n    },\n    logo: {\n        width: 300,\n        height: 300,\n        marginBottom: 5\n    }\n})\n\n\nexport default connect(mapState, mapDispatch)(Movies)\n","import React from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport { TextInput } from '../../components'\nimport { connect } from 'react-redux';\nimport 'redux';\nimport { RootState, Dispatch } from '../../store'\n\nconst mapState = (state: RootState) => ({\n    search: state.search,\n})\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n    setSearchText: (searchText: string) => dispatch.search.searchText(searchText),\n    searchAsync: (searchText: string) => dispatch.search.searchAsync(searchText)\n})\n\ntype StateProps = ReturnType<typeof mapState>\ntype DispatchProps = ReturnType<typeof mapDispatch>\ntype Props = StateProps & DispatchProps\n\nclass Series extends React.Component<Props> {\n    render() {\n        return (\n            <>\n                <View style={styles.container}>\n                    <TextInput\n                        placeholder=\"Search series\"\n                        onChangeText={(input: string) => { this.props.setSearchText(input) }}\n                        backgroundColor=\"#E3E3E3\"\n                        color=\"black\"\n                        borderColor=\"gray\"\n                        fontSize={16}\n                        padding={10}\n                        marginBottom={5}\n                    />\n                </View>\n                <View style={{ flex: 2.5, alignItems: \"center\" }}>\n                    <Image source={require(\"../../assets/series.png\")} style={styles.logo} />\n                    <Text style={{ fontSize: 18 }}>Find your favourite series.</Text>\n                </View>\n            </>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        margin: 10\n    },\n    logo: {\n        width: 300,\n        height: 300,\n        marginBottom: 5\n    }\n})\n\n\nexport default connect(mapState, mapDispatch)(Series)\n","import React from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport { TextInput } from '../../components'\nimport { connect } from 'react-redux';\nimport 'redux';\nimport { RootState, Dispatch } from '../../store'\n\nconst mapState = (state: RootState) => ({\n    search: state.search,\n})\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n    setSearchText: (searchText: string) => dispatch.search.searchText(searchText),\n    searchAsync: (searchText: string) => dispatch.search.searchAsync(searchText)\n})\n\ntype StateProps = ReturnType<typeof mapState>\ntype DispatchProps = ReturnType<typeof mapDispatch>\ntype Props = StateProps & DispatchProps\n\nclass Episodes extends React.Component<Props> {\n    render() {\n        return (\n            <>\n                <View style={styles.container}>\n                    <TextInput\n                        placeholder=\"Search episodes\"\n                        onChangeText={(input: string) => { this.props.setSearchText(input) }}\n                        backgroundColor=\"#E3E3E3\"\n                        color=\"black\"\n                        borderColor=\"gray\"\n                        fontSize={16}\n                        padding={10}\n                        marginBottom={5}\n                    />\n                </View>\n                <View style={{ flex: 2.5, alignItems: \"center\" }}>\n                    <Image source={require(\"../../assets/episodes.png\")} style={styles.logo} />\n                    <Text style={{ fontSize: 18 }}>Find your favourite episodes.</Text>\n                </View>\n            </>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        margin: 10\n    },\n    logo: {\n        width: 300,\n        height: 300,\n        marginBottom: 5\n    }\n})\n\n\nexport default connect(mapState, mapDispatch)(Episodes)\n","import * as React from \"react\";\nimport {\n    FontAwesome,\n    MaterialCommunityIcons,\n} from \"@expo/vector-icons\";\nimport { StyleSheet, Image } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Movies, Series, Episodes } from \"../screens\";\nimport { enableScreens } from \"react-native-screens\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nenableScreens();\nconst Tab = createBottomTabNavigator();\n\nconst MovieStack = createStackNavigator();\nconst MovieStackScreen = () => {\n    return (\n        <MovieStack.Navigator>\n            <MovieStack.Screen\n                name=\"Movies\"\n                component={Movies}\n                options={{\n                    title: <Image source={require(\"../assets/logo.png\")} style={styles.logo} />,\n                }}\n            />\n        </MovieStack.Navigator>\n    );\n};\n\nconst SeriesStack = createStackNavigator();\nconst SeriesStackScreen = () => {\n    return (\n        <SeriesStack.Navigator>\n            <SeriesStack.Screen\n                name=\"Series\"\n                component={Series}\n                options={{ title: <Image source={require(\"../assets/logo.png\")} style={styles.logo} /> }}\n            />\n        </SeriesStack.Navigator>\n    );\n};\n\nconst EpisodeStack = createStackNavigator();\nconst EpisodeStackScreen = () => {\n    return (\n        <EpisodeStack.Navigator>\n            <EpisodeStack.Screen\n                name=\"Episodes\"\n                component={Episodes}\n                options={{ title: <Image source={require(\"../assets/logo.png\")} style={styles.logo} /> }}\n            />\n        </EpisodeStack.Navigator>\n    );\n};\n\nfunction MyTabs() {\n    //   const { colors } = useTheme();\n    return (\n        <Tab.Navigator\n            initialRouteName=\"Discover\"\n            tabBarOptions={{\n                showLabel: false,\n                activeTintColor: \"#84B5F7\",\n                inactiveTintColor: \"#CDCDCD\",\n                // style: {\n                //   backgroundColor: colors.keyBoardAvoidingViewColor,\n                // },\n            }}\n        >\n            <Tab.Screen\n                name=\"Search\"\n                component={MovieStackScreen}\n                options={{\n                    tabBarLabel: \"Discover\",\n                    tabBarIcon: ({ focused }) => (\n                        <MaterialCommunityIcons\n                            name=\"movie-roll\"\n                            size={30}\n                            color={focused ? \"#EE1E53\" : \"#CDCDCD\"}\n                        />\n                    ),\n                }}\n            />\n\n            <Tab.Screen\n                name=\"Series\"\n                component={SeriesStackScreen}\n                options={{\n                    tabBarLabel: \"Series\",\n                    tabBarIcon: ({ focused }) => (\n                        <MaterialCommunityIcons\n                            name=\"television-box\"\n                            size={29}\n                            color={focused ? \"#EE1E53\" : \"#CDCDCD\"}\n                        />\n                    ),\n                }}\n            />\n            <Tab.Screen\n                name=\"Notifications\"\n                component={EpisodeStackScreen}\n                options={{\n                    tabBarLabel: \"Notifications\",\n                    tabBarIcon: ({ focused }) => (\n                        <FontAwesome\n                            name=\"video-camera\"\n                            size={26}\n                            color={focused ? \"#EE1E53\" : \"#CDCDCD\"}\n                        />\n                    ),\n                }}\n            />\n        </Tab.Navigator>\n    );\n}\n\nconst styles = StyleSheet.create({\n    logo: {\n        width: 150,\n        height: 40,\n    }\n})\n\n\nexport default MyTabs;","import React from \"react\";\nimport { View } from \"react-native\";\nimport { Asset } from \"expo-asset\";\nimport { AppLoading } from \"expo\";\nimport { Provider } from \"react-redux\";\nimport \"redux\";\nimport { store } from \"./store\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport TabNavigator from \"./navigation/TabNavigator\";\n\nexport default class App extends React.Component {\n  state = {\n    isReady: false,\n  };\n\n  render() {\n    if (!this.state.isReady) {\n      return (\n        <AppLoading\n          startAsync={this._cacheResourcesAsync}\n          onFinish={() => this.setState({ isReady: true })}\n          onError={console.warn}\n        />\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <TabNavigator />\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n\n  async _cacheResourcesAsync() {\n    const images = [\n      require(\"./assets/icon.png\"),\n      require(\"./assets/logo.png\"),\n      require(\"./assets/movies.png\"),\n      require(\"./assets/series.png\"),\n      require(\"./assets/episodes.png\")\n    ];\n\n    const cacheImages = images.map((image) => {\n      return Asset.fromModule(image).downloadAsync();\n    });\n    return Promise.all(cacheImages);\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/icon.e1862d89.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.af49000e.png\";"],"sourceRoot":""}